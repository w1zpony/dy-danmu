// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.4
// 	protoc        v5.29.3
// source: live_rpc.proto

package api

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// LiveConf 直播配置信息
type LiveConf struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            int64                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`                                             // 任务ID
	Url           string                 `protobuf:"bytes,2,opt,name=url,proto3" json:"url,omitempty"`                                            // 直播URL
	RoomDisplayId string                 `protobuf:"bytes,3,opt,name=room_display_id,json=roomDisplayId,proto3" json:"room_display_id,omitempty"` // 房间显示ID
	Name          string                 `protobuf:"bytes,4,opt,name=name,proto3" json:"name,omitempty"`                                          // 房间名称
	Enable        bool                   `protobuf:"varint,5,opt,name=enable,proto3" json:"enable,omitempty"`                                     // 是否启用
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *LiveConf) Reset() {
	*x = LiveConf{}
	mi := &file_live_rpc_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LiveConf) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LiveConf) ProtoMessage() {}

func (x *LiveConf) ProtoReflect() protoreflect.Message {
	mi := &file_live_rpc_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LiveConf.ProtoReflect.Descriptor instead.
func (*LiveConf) Descriptor() ([]byte, []int) {
	return file_live_rpc_proto_rawDescGZIP(), []int{0}
}

func (x *LiveConf) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *LiveConf) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *LiveConf) GetRoomDisplayId() string {
	if x != nil {
		return x.RoomDisplayId
	}
	return ""
}

func (x *LiveConf) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *LiveConf) GetEnable() bool {
	if x != nil {
		return x.Enable
	}
	return false
}

// TaskID 任务ID请求
type TaskID struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            int64                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"` // 任务ID
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TaskID) Reset() {
	*x = TaskID{}
	mi := &file_live_rpc_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TaskID) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TaskID) ProtoMessage() {}

func (x *TaskID) ProtoReflect() protoreflect.Message {
	mi := &file_live_rpc_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TaskID.ProtoReflect.Descriptor instead.
func (*TaskID) Descriptor() ([]byte, []int) {
	return file_live_rpc_proto_rawDescGZIP(), []int{1}
}

func (x *TaskID) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

// Response 通用响应
type Response struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Code          int32                  `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`      // 响应代码
	Message       string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"` // 响应消息
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Response) Reset() {
	*x = Response{}
	mi := &file_live_rpc_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Response) ProtoMessage() {}

func (x *Response) ProtoReflect() protoreflect.Message {
	mi := &file_live_rpc_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Response.ProtoReflect.Descriptor instead.
func (*Response) Descriptor() ([]byte, []int) {
	return file_live_rpc_proto_rawDescGZIP(), []int{2}
}

func (x *Response) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *Response) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

var File_live_rpc_proto protoreflect.FileDescriptor

var file_live_rpc_proto_rawDesc = string([]byte{
	0x0a, 0x0e, 0x6c, 0x69, 0x76, 0x65, 0x5f, 0x72, 0x70, 0x63, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x12, 0x04, 0x6c, 0x69, 0x76, 0x65, 0x22, 0x80, 0x01, 0x0a, 0x08, 0x4c, 0x69, 0x76, 0x65, 0x43,
	0x6f, 0x6e, 0x66, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x02, 0x69, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x72, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x03, 0x75, 0x72, 0x6c, 0x12, 0x26, 0x0a, 0x0f, 0x72, 0x6f, 0x6f, 0x6d, 0x5f, 0x64, 0x69,
	0x73, 0x70, 0x6c, 0x61, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d,
	0x72, 0x6f, 0x6f, 0x6d, 0x44, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x49, 0x64, 0x12, 0x12, 0x0a,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x12, 0x16, 0x0a, 0x06, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x06, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x22, 0x18, 0x0a, 0x06, 0x54, 0x61, 0x73,
	0x6b, 0x49, 0x44, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x02, 0x69, 0x64, 0x22, 0x38, 0x0a, 0x08, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63,
	0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x32, 0x98, 0x01,
	0x0a, 0x0b, 0x4c, 0x69, 0x76, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x2b, 0x0a,
	0x07, 0x41, 0x64, 0x64, 0x54, 0x61, 0x73, 0x6b, 0x12, 0x0e, 0x2e, 0x6c, 0x69, 0x76, 0x65, 0x2e,
	0x4c, 0x69, 0x76, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x1a, 0x0e, 0x2e, 0x6c, 0x69, 0x76, 0x65, 0x2e,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x2c, 0x0a, 0x0a, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x54, 0x61, 0x73, 0x6b, 0x12, 0x0c, 0x2e, 0x6c, 0x69, 0x76, 0x65, 0x2e,
	0x54, 0x61, 0x73, 0x6b, 0x49, 0x44, 0x1a, 0x0e, 0x2e, 0x6c, 0x69, 0x76, 0x65, 0x2e, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x2e, 0x0a, 0x0a, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x54, 0x61, 0x73, 0x6b, 0x12, 0x0e, 0x2e, 0x6c, 0x69, 0x76, 0x65, 0x2e, 0x4c, 0x69,
	0x76, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x1a, 0x0e, 0x2e, 0x6c, 0x69, 0x76, 0x65, 0x2e, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x42, 0x10, 0x5a, 0x0e, 0x64, 0x6f, 0x75, 0x79,
	0x69, 0x6e, 0x6c, 0x69, 0x76, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x33,
})

var (
	file_live_rpc_proto_rawDescOnce sync.Once
	file_live_rpc_proto_rawDescData []byte
)

func file_live_rpc_proto_rawDescGZIP() []byte {
	file_live_rpc_proto_rawDescOnce.Do(func() {
		file_live_rpc_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_live_rpc_proto_rawDesc), len(file_live_rpc_proto_rawDesc)))
	})
	return file_live_rpc_proto_rawDescData
}

var file_live_rpc_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_live_rpc_proto_goTypes = []any{
	(*LiveConf)(nil), // 0: live.LiveConf
	(*TaskID)(nil),   // 1: live.TaskID
	(*Response)(nil), // 2: live.Response
}
var file_live_rpc_proto_depIdxs = []int32{
	0, // 0: live.LiveService.AddTask:input_type -> live.LiveConf
	1, // 1: live.LiveService.DeleteTask:input_type -> live.TaskID
	0, // 2: live.LiveService.UpdateTask:input_type -> live.LiveConf
	2, // 3: live.LiveService.AddTask:output_type -> live.Response
	2, // 4: live.LiveService.DeleteTask:output_type -> live.Response
	2, // 5: live.LiveService.UpdateTask:output_type -> live.Response
	3, // [3:6] is the sub-list for method output_type
	0, // [0:3] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_live_rpc_proto_init() }
func file_live_rpc_proto_init() {
	if File_live_rpc_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_live_rpc_proto_rawDesc), len(file_live_rpc_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_live_rpc_proto_goTypes,
		DependencyIndexes: file_live_rpc_proto_depIdxs,
		MessageInfos:      file_live_rpc_proto_msgTypes,
	}.Build()
	File_live_rpc_proto = out.File
	file_live_rpc_proto_goTypes = nil
	file_live_rpc_proto_depIdxs = nil
}
