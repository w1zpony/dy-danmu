syntax = "proto3";
option go_package = "generated/dystruct/";
package dystruct;

message Webcast {

  message Im {

    message PushFrame {
      uint64 SeqID = 1;
      uint64 LogID = 2;
      int32 service = 3;
      int32 method = 4;
      repeated PushHeader headers = 5;
      string payload_encoding = 6;
      string payload_type = 7;
      bytes payload = 8;
      string LodIDNew = 9;
    }

    message PushHeader {
      string key = 1;
      string value = 2;
    }

    message PayloadInIm {
      map<string, bytes> Payloads = 1;
      int32 CompressType = 2;
    }

    message Response {
      repeated Message messages = 1;
      string cursor = 2;
      uint64 fetch_interval = 3;
      uint64 now = 4;
      string internal_ext = 5;
      int32 fetch_type = 6;
      map<string, string> route_params = 7;
      uint64 heartbeat_duration = 8;
      bool need_ack = 9;
      string push_server = 10;
      string live_cursor = 11;
      bool history_no_more = 12;
      string proxy_server = 13;
    }

    message Message {
      string method = 1;
      bytes payload = 2;
      uint64 msg_id = 3;
      int32 msg_type = 4;
      uint64 offset = 5;
      bool need_wrds_store = 6;
      uint64 wrds_version = 7;
      string wrds_sub_key = 8;
      map<string, string> message_extra = 9;
    }

    message RoomBorderMessage {
      Common common = 1;
      Data.BorderInfo border_info = 2;
    }

    message Common {
      string method = 1;
      uint64 msg_id = 2;
      uint64 room_id = 3;
      uint64 create_time = 4;
      int32 monitor = 5;
      bool is_show_msg = 6;
      string describe = 7;
      Data.Text display_text = 8;
      uint64 fold_type = 9;
      uint64 anchor_fold_type = 10;
      uint64 priority_score = 11;
      string log_id = 12;
      string msg_process_filter_k = 13;
      string msg_process_filter_v = 14;
      Data.User user = 15;
      Data.Room room = 16;
      uint64 anchor_fold_type_v2 = 17;
      uint64 process_at_sei_time_ms = 18;
      uint64 random_dispatch_ms = 19;
      bool is_dispatch = 20;
      uint64 channel_id = 21;
      uint64 diff_sei2abs_second = 22;
      uint64 anchor_fold_duration = 23;
      uint64 app_id = 24;
    }

    message PublicAreaCommon {
      Data.Image user_label = 1;
      uint64 user_consume_in_room = 2;
      uint64 user_send_gift_cnt_in_room = 3;
      uint64 individual_priority = 4;
      map<string, string> individual_strategy_result = 5;
      uint64 support_pin = 6;
      SuffixText suffix_text = 7;
      int32 im_action = 8;
      bool forbidden_profile = 9;
      Data.ChatReplyRespInfo reply_resp = 10;
      map<string, string> tracking_params = 11;
      uint64 is_featured = 12;
      bool need_filter_display = 13;
      PersonalizedDisplayInfo personalized_display_info = 14;
      uint64 force_insertion_priority = 15;
      Data.ChatMentionInfo mention_info = 16;
      HoverInfo hover_info = 17;
    }

    message HoverInfo {
      bool is_hover = 1;
      uint64 priority = 2;
      uint64 duration = 3;
      uint64 duration_involve_display_time = 4;
      uint64 duration_threshold = 5;
    }

    message PersonalizedDisplayInfo {
      bool is_personalized = 1;
      uint64 fold_type = 2;
    }

    message SuffixText {
      uint64 biz_type = 1;
      Data.Text text = 2;
      string tags = 3;
    }

    message LandscapeAreaCommon {
      bool show_head = 1;
      bool show_nickname = 2;
      bool show_font_color = 3;
      repeated string color_value = 4;
      repeated int32 comment_type_tags = 5;
    }

    message FlexImageStruct {
      repeated string url_list = 1;
      string uri = 2;
      repeated uint64 flex_setting = 3;
      repeated uint64 text_setting = 4;
      uint64 top_border_height = 5;
    }

    message CommonBubbleConfig {
      string content = 1;
      uint64 duration = 2;
      Data.Text rich_text = 3;
      string scheme_url = 4;
      FlexImageStruct background_image = 5;
      Data.Image arrow_image = 6;
      int32 message_type = 7;
      int32 arrow_position = 8;
    }

    message TopEffectMessage {
      Common common = 1;
      uint64 asset_id = 2;
      uint64 priority = 3;
      int32 action = 4;
      string scene = 5;
      uint64 end_time = 6;
      uint64 fade_in_duration = 7;
      uint64 fade_out_duration = 8;
      repeated EffectImageInfo images = 10;
      repeated EffectTextInfo texts = 20;
    }

    message EffectImageInfo {
      string placeholder_key = 1;
      Data.Image mix_image = 2;
    }

    message EffectTextInfo {
      string placeholder_key = 1;
      string content = 2;
      uint64 font_size = 3;
      string font_color = 4;
    }

    message AtmosphereEffectMessage {
      Common common = 1;
      uint64 asset_id = 2;
      uint64 partner_asset_id = 3;
      uint64 priority = 4;
      int32 action = 5;
      string scene = 6;
      uint64 end_time = 7;
      string actvity_information = 8;
      uint64 partner_hotsoon_asset_id = 9;
    }

    message BorderEffectMessage {
      Common common = 1;
      int32 effect_type = 2;
      uint64 asset_id = 3;
      Data.Image image = 4;
      uint64 priority = 5;
      int32 action = 6;
      string scene = 7;
      uint64 end_time = 8;
    }

    message EffectiveActivityEmojiGroup {
      Data.ActivityEmojiGroup emoji_group = 1;
      uint64 start_time = 2;
      uint64 end_time = 3;
    }

    message ActivityEmojiGroupsMessage {
      Common common = 1;
      repeated EffectiveActivityEmojiGroup activity_emoji_groups = 2;
    }

    message ActivityInteractiveMessage {
      Common common = 1;
      string extra = 2;
    }

    message InteractEffectMessage {
      Common common = 1;
      uint64 effect_id = 2;
      string extra = 3;
      string tea_log = 4;
      uint64 message_type = 5;
      uint64 arg1 = 6;
      uint64 arg2 = 7;
      string arg3 = 8;
    }

    message ActivityMagicAsianGamesMessage {
      Common common = 1;
      string push_id = 2;
      string push_content = 3;
      int32 platform = 4;
      VideoCardPushModule video_card = 5;
      MedalRankListModule medal_list = 6;
      CollectModule collect = 7;
      ScheduleModule popular_star = 8;
      LatestNewsModule hot_live = 9;
    }

    message LinkInfo {
      int32 link_type = 1;
      string link_url = 2;
    }

    message PageFilter {
      string highlight_group_name = 1;
    }

    message VideoCardSize {
      uint64 height = 1;
      uint64 width = 2;
    }

    message StatsParam {
      uint64 ep_id = 1;
      uint64 sec_id = 2;
      uint64 r_id = 3;
    }

    message VideoCardPushModule {
      uint64 module_id = 1;
      uint64 module_version = 2;
      repeated VideoBigCard update_list = 3;
      repeated string delete_list = 4;
    }

    message MedalRankListModule {
      uint64 module_id = 1;
      uint64 module_version = 2;
      repeated VideoBigCard update_list = 3;
      repeated string delete_list = 4;
    }

    message CollectModule {
      uint64 module_id = 1;
      uint64 module_version = 2;
      repeated VideoBigCard update_list = 3;
      repeated string delete_list = 4;
    }

    message ScheduleModule {
      uint64 module_id = 1;
      uint64 module_version = 2;
      repeated VideoBigCard update_list = 3;
      repeated string delete_list = 4;
    }

    message LatestNewsModule {
      uint64 module_id = 1;
      uint64 module_version = 2;
      repeated VideoBigCard update_list = 3;
      repeated string delete_list = 4;
    }

    message VideoBigCard {
      int32 card_type = 1;
      string cover_url = 2;
      string title = 3;
      string sub_title = 4;
      CornerMark corner_mark = 5;
      VideoCardSize video_size = 6;
      string background_url = 7;
      string unique_id = 8;
      string stats_param = 9;
      string video_source = 10;
      bool is_match = 11;
      LinkInfo link_info = 12;
      string extra = 255;

      message CornerMark {
        int32 type = 1;
        bool show = 2;
      }
    }

    message RankItem {
      uint64 rank = 1;
      string country = 2;
      string country_img_url = 3;
      uint64 gold_medal = 4;
      uint64 silver_medal = 5;
      uint64 copper_medal = 6;
      uint64 total_medal = 7;
      string unique_id = 8;
      string extra = 255;
    }

    message Highlight {
      int32 highlight_type = 1;
      string item_id = 2;
      string replay_id = 3;
      string video_source = 4;
      string unique_id = 5;
      string cover_img_url = 6;
      uint64 play_time_ms = 7;
      string title = 8;
      string group_name = 9;
    }

    message AGMatchInfo {
      string l_country = 1;
      string r_country = 2;
      uint64 l_score = 3;
      uint64 r_score = 4;
      string l_country_img_url = 5;
      string r_country_img_url = 6;
    }

    message MatchLive {
      int32 ag_live_status = 1;
      string appointment_id = 2;
      string room_id = 3;
      bool has_subscribe = 4;
      string camera_id = 5;
    }

    message Match {
      string title = 1;
      uint64 start_time_ms = 2;
      string focus = 3;
      int32 tag_type = 4;
      AGMatchInfo ag_match_info = 5;
      MatchLive match_live = 6;
      string unique_id = 7;
    }

    message News {
      string title = 1;
      uint64 update_time_ms = 2;
      LinkInfo link_info = 3;
      string unique_id = 4;
    }

    message MagicGestureActivityMessage {
      Common common = 1;
      int32 status = 2;
      string effect_id = 3;
      int32 action_type = 4;
      string action_schema = 5;
      string biz_id = 6;
    }

    message ActivityMagicMessage {
      Common common = 1;
      string push_id = 2;
      string push_content = 3;
    }

    message PixActivityMessage {
      Common common = 1;
      int32 current_level = 2;
      bool can_change_prop = 3;
    }

    message PrizeNoticeMessage {
      Common common = 1;
      uint64 asset_id = 2;
      ImageInfo image_info = 3;
      Data.Image landscape_bg_img = 4;
      string landscape_content = 5;
      uint64 scene_context_id = 6;
      int32 landscape_height = 7;
      int32 play_priority = 8;
      map<string, string> extra = 9;
      bool use_separate_player = 10;
    }

    message ImageInfo {
      Data.Image img = 1;
      int32 start = 2;
      int32 duration = 3;
      int32 x = 4;
      int32 y = 5;
      int32 width = 6;
      int32 height = 7;
      bool need_circle = 8;
    }

    message ActivityEffectRefreshMessage {
      Common common = 1;
    }

    message AdminPrivilegeMessage {
      Common common = 1;
      AdminPrivilegeStruct data = 2;
    }

    message AdminPrivilegeStruct {
      int32 privilege = 1;
      uint64 op = 2;
      repeated int32 current_privileges = 3;
    }

    message AdminRecordHandleMessage {
      Common common = 1;
      int32 handle_type = 2;
    }

    message AdminData {
      uint64 uid = 1;
      string name = 2;
      string open_id = 5000;
    }

    message TextExtraItem {
      int32 start = 1;
      int32 stop = 2;
      int32 type = 3;
      string user_id = 4;
      string hashtag_name = 5;
      string hashtag_id = 6;
      bool is_commerce = 7;
      string aweme_id = 8;
      int32 sub_type = 9;
      string user_open_id = 5000;
    }

    message AdminRecordMessage {
      Common common = 1;
      AdminData admin = 2;
      uint64 item_id = 3;
      uint64 draft_id = 4;
      string video_text = 5;
      repeated TextExtraItem video_text_extra = 6;
    }

    message AnchorBoostMessage {
      Common common = 1;
      AnchorBoost data = 2;
      PublicAreaCommon public_area_common = 3;
    }

    message AnchorBoost {
      uint64 event_name = 1;
      uint64 anchor_id = 2;
      int32 live_id = 3;
      int32 event_type = 4;
      string content = 5;
      string anchor_open_id = 5000;
    }

    message AnchorCommonPopupMessage {
      Common common = 1;
      string DialogInfo = 2;
      string Schema = 3;
    }

    message iAnchorRoomDataChangeMessage {
      Common common = 1;
      Data.Text top_text = 2;
      Data.Text bottom_text = 3;
      uint64 message_type = 4;
      string extra = 5;
    }

    message PCAnchorRoomDataChangeMessage {
      Common common = 1;
      Data.Text top_text = 2;
      Data.Text bottom_text = 3;
      uint64 message_type = 4;
      string extra = 5;
      PcBarMessage bar_message = 6;
      PcBarMessage biz_message = 7;
    }

    message AnswerReviewMessage {
      Common common = 1;
      int32 answerReviewMsgTypeEnum = 2;
      uint64 answer_id = 3;
      uint64 chat_id = 4;
      int32 answerReviewResTypeEnum = 5;
      uint64 video_pin_id = 6;
      uint64 original_msg_id = 7;
      uint64 pin_id = 8;
      string answer_open_id = 5000;
    }

    message AssetEffectUtilMessage {
      Common common = 1;
      uint64 asset_id = 2;
      uint64 priority = 3;
      uint64 price = 4;
      Data.Text text = 5;
      uint64 text_width = 6;
      uint64 text_heitht = 7;
      string tracking = 8;
      string dress_id = 9;
      repeated EffectUtilImageInfo images = 10;
      repeated EffectUtilTextInfo texts = 20;
      string finish_self_schema = 21;
      map<string, Data.TextPiece> piece_values = 22;
    }

    message EffectUtilImageInfo {
      string placeholder_key = 1;
      Data.Image mix_image = 2;
    }

    message EffectUtilTextInfo {
      string placeholder_key = 1;
      string content = 2;
      uint64 font_size = 3;
      string font_color = 4;
    }

    message AssetMessage {
      Common common = 1;
      uint64 asset_id = 2;
      Data.Text panel_display_text = 3;
      bool show_message = 4;
      bool show_panel = 5;
      Data.User user = 6;
      Data.User to_user = 7;
      Data.GiftIMPriority priority = 8;
      string log_id = 9;
      int32 play_priority = 10;
    }

    message AudioBGImgMessage {
      Common common = 1;
      Data.AudioBGData bg_list = 2;
      int32 ReviewPass = 3;
      int32 bg_type = 4;
      string show_text = 5;
    }

    message AudioChatMessage {
      Common common = 1;
      Data.User user = 2;
      string content = 3;
      string audio_url = 4;
      uint64 audio_duration = 5;
      PublicAreaCommon public_area_common = 6;
      Data.Text rtf_content = 7;
    }

    message AuthorizationNotifyMessage {
      Common common = 1;
      string from = 2;
      string content = 3;
      string style = 4;
      ContentBlock user_content = 6;
      RelationBlock user_relation = 7;

      message ContentBlock {
        bool show = 1;
        bool is_authorized = 2;
        string title = 3;
        string content = 4;
        string detail = 5;
      }

      message RelationBlock {
        bool show = 1;
        bool is_authorized = 2;
        string title = 3;
        string content = 4;
        string detail = 5;
      }
    }

    message AutoCoverMessage {
      Common common = 1;
      Data.Image image = 2;
    }

    message AutoHighlightMessage{
      Common common = 1;
      string extra = 2;
    }

    message AvatarRoomLeaveMessage {
      Common common = 1;
      int32 leave_reason = 2;
      uint64 format_id = 3;
      string rtc_room_id = 4;
      uint64 last_ping_time = 5;
    }

    message AwemeShopExplainMessage {
      Common common = 1;
      Extra extra = 2;

      message Extra {
        uint64 promotion_id = 1;
        bool active = 2;
      }
    }

    message BackRecordVideoMessage {
      Common common = 1;
      string m3u8_url = 2;
      repeated string ts_urls = 3;
      string execution_id = 4;
      bool succeed = 5;
      uint64 start_time = 6;
      uint64 end_time = 7;
    }

    message BattleAutoMatchMessage {
      Common common = 1;
      ResponseData data = 2;

      message RivalInfo {
        uint64 user_id = 1;
        Data.Room room = 2;
        string open_user_id = 5000;
      }

      message PreviewUser {
        string nickname = 1;
        Data.Image avatar = 2;
      }

      message ResponseData {
        string default_content = 1;
        Data.Image default_avatar = 2;
        uint64 rival_user_id = 3;
        Data.Room rival_room = 4;
        repeated PreviewUser preview_user_list = 5;
        uint64 expect_time = 6;
        string rival_user_id_str = 7;
        bool can_high_way = 8;
        uint64 max_wait_time = 9;
        string sign_extra = 10;
        repeated RivalInfo rivals = 11;
        string battle_attached_info = 19;
        string channel_id_str = 20;
        uint64 match_type = 21;
        string rival_open_id = 5000;
        string rival_open_id_str = 5001;
      }
    }

    message BattleCancelMessage {
      Common common = 1;
      uint64 channel_id = 2;
    }

    message BattleDrawPropMessage {
      Common common = 1;
      int32 status = 2;
      int32 reason = 3;
      Data.Image animation = 4;
      uint64 prop_id = 5;
      uint64 battle_id = 6;
    }

    message BattleEffectContainerMessage {
      Common common = 1;
      uint64 channel_id = 2;
      uint64 battle_id = 3;
      string battle_effect_info = 4;
    }

    message BattleFeedBackCardMessage {
      Common common = 1;
      uint64 rival_uid = 2;
      int32 feedback_card_type = 3;
      Data.FeedbackCard feedback_card = 4;
      uint64 battle_id = 5;
      uint64 channel_id = 6;
      string rival_open_id = 5000;
    }

    message BattleFrontRankMessage {
      Common common = 1;
    }

    message BattleGuidanceMessage {
      Common common = 1;
      uint64 channel_id = 2;
      uint64 battle_id = 3;
      UIInfo ui_info = 4;
      ExtraInfo extra_info = 5;

      message TextElement {
        string text = 1;
        string value = 2;
      }

      message UIInfo {
        repeated Data.User users = 1;
        repeated TextElement text_elements = 2;
      }

      message ExtraInfo {
        uint64 battle_duration = 1;
        uint64 actual_duration = 2;
      }
    }

    message BattleInviteMessage {
      Common common = 1;
      int32 invite_type = 2;
      uint64 channel_id = 3;
      string sign_extra = 4;
      uint64 invite_uid = 5;
      uint64 battle_id = 6;
      string multiple_again_prompts = 7;
      Data.PanelTitle panel_title = 8;
      int32 scene = 9;
      string invite_title = 10;
      string invite_sub_title = 11;
      uint64 wait_sec = 12;
      Data.BattleConfigSetting battle_config_setting = 14;
      uint64 duration_time = 15;
      int32 multi_pk_mode = 16;
      string client_attached_info = 17;
      string lynx_data = 18;
      string event_tracking_info = 19;
      string invite_open_uid = 5000;
    }

    message BattleModeMessage {
      Common common = 1;
      uint64 mode = 2;
      StealTowerData steal_tower_data = 3;
      uint64 now = 4;

      message StealTowerData {
        uint64 start_time = 1;
        uint64 finish_time = 2;
        uint64 duration = 3;
        uint64 target_score = 4;
        uint64 attacker_id = 5;
        bool finish = 6;
        uint64 win = 7;
        uint64 open_score = 8;
        uint64 count = 9;
        string attacker_open_id = 5000;
      }
    }

    message BattleMultiMatchMessage {
      Common common = 1;
      int32 match_status = 2;
      uint64 expect_time = 3;
      repeated PreviewUser preview_user_list = 4;
      uint64 default_wait_limit = 5;
      uint64 invite_limit_sec = 6;
      uint64 match_type = 7;

      message PreviewUser {
        string nickname = 1;
        Data.Image avatar = 2;
      }
    }

    message BattleNotifyMessage {
      Common common = 1;
      string content = 2;
      int32 notify_type = 3;
      uint64 continue_seconds = 4;
    }

    message BattlePowerContainer {
      ContainerInfo info = 1;

      message ContainerInfo {
        int32 type = 1;
        repeated Data.User users = 2;
        string text = 3;
        Data.Image icon = 4;
        string client_point_info = 10;
      }

      message ClientPointInfo {
        uint64 count = 1;
        string effect_type = 2;
      }
    }

    message BattlePowerContainerMessage {
      Common common = 1;
      uint64 channel_id = 2;
      uint64 battle_id = 3;
      string reverse_info = 4;
      string container = 5;

      message ReverseInfo {
        Data.User user = 1;
        uint64 reverse_count = 2;
        string des = 3;
        repeated Data.User users = 4;
        int32 scene = 5;
        string effect_type = 6;
      }
    }

    message PrecisionMatch {
      uint64 sponsor_id = 1;
      repeated Matcher matchers = 2;
      string match_reason = 3;
      uint64 wait_seconds = 4;
      uint64 precision_match_id = 5;
      string activity_name = 6;
      string recommend_reason = 7;
      string sign_extra = 8;
      int32 source = 9;
      string not_disturb_text = 10;
      uint64 flex_activity_id = 11;
      uint64 duration = 12;
      string battle_attached_info = 13;
      string precision_match_id_str = 14;
      string activity_id = 15;
      string sponsor_open_id = 5000;

      message Matcher {
        uint64 user_id = 1;
        Data.Room room = 2;
        int32 status = 3;
        repeated Data.BattleRivalTag tags = 4;
        string desc_text = 5;
        string open_id = 5000;
      }
    }

    message BattlePrecisionMatchMessage {
      Common common = 1;
      PrecisionMatch precision_match = 2;
    }

    message BattleRejectMessage {
      Common common = 1;
      uint64 channel_id = 2;
      uint64 battle_id = 3;
      uint64 reject_uid = 4;
      string multiple_again_prompts = 5;
      int32 invite_type = 6;
      string reject_open_uid = 5000;
    }

    message BattleReserveInviteMessage {
      Common common = 1;
      uint64 from_user_id = 2;
      uint64 from_room_id = 3;
      uint64 to_user_id = 4;
      uint64 to_room_id = 5;
      uint64 wait_sec = 6;
      string client_attached_info = 7;
      string reserve_id = 8;
      Data.Room invite_room = 9;
      string tips = 10;
      Data.BattleReserveOption option = 11;
      repeated Data.BattleRivalTag tags = 12;
      string from_open_id = 5000;
      string to_open_id = 5001;
    }

    message BattleReserveReplyMessage {
      Common common = 1;
      uint64 user_id = 2;
      uint64 room_id = 3;
      uint64 invite_user_id = 4;
      uint64 invite_room_id = 5;
      string client_attached_info = 6;
      string reserve_id = 7;
      string toast = 8;
      string open_id = 5000;
      string invite_open_id = 5001;
    }

    message BattleReserveSettleMessage {
      Common common = 1;
      uint64 from_user_id = 2;
      uint64 from_room_id = 3;
      uint64 to_user_id = 4;
      uint64 to_room_id = 5;
      uint64 wait_sec = 6;
      string battle_attached_info = 7;
      string reserve_id = 8;
      Data.Room to_room = 9;
      string tips = 10;
      string from_open_id = 5000;
      string to_open_id = 5001;
    }

    message BattleRewardMessage {
      Common common = 1;
      BattleRewardMessage.PKReward pk_result = 2;
      BattleRewardMessage.PKChangeBackground upgrade_result = 3;
      BattleRewardMessage.LinkmicBackground linkmic_background_result = 4;

      message PKReward {
        Data.BattleSkinConfig skin_config = 1;
        string Extra = 2;
      }

      message PKChangeBackground {
        Data.BattleSkinConfig skin_config = 1;
      }

      message LinkmicBackground {
        Data.LinkmicUIConfig ui_config = 1;
      }
    }

    message BattleSeasonPKResultMessage {
      Common common = 1;
      PKResult pk_result = 2;
      UpgradeResult upgrade_result = 3;
      GetGradeInfo get_grade_info = 4;

      message PKResultPointsDescription {
        string point_desc = 1;
        uint64 point = 2;
        string point_str = 3;
      }

      message PKResult {
        Data.Image result_img = 1;
        Data.Image bg_img = 2;
        string result_str = 3;
        repeated PKResultPointsDescription descriptions = 4;
      }

      message UpgradeResult {
        Data.Image grade_img = 1;
        Data.Image upgrade_img = 2;
        string upgrade_desc = 3;
        Data.Image desc_bg_img = 4;
        string pre_grade_desc = 5;
        string after_grade_desc = 6;
        Data.Image before_upgrade_img = 7;
      }

      message GetGradeInfo {
        string get_grade_desc = 1;
        Data.Image grade_img = 2;
        Data.Image start_img = 3;
      }
    }

    message BattleStateSyncMessage {
      Common common = 1;
      BattleSettings battle_settings = 2;
      Data.SurvivalInfo survival_info = 3;
      Data.BreakthroughInfo breakthrough_info = 4;
      uint64 score_version = 5;
    }

    message BattleMode {
      int32 mode = 1;
      StealTowerData steal_tower_data = 2;

      message StealTowerData {
        uint64 trigger_time = 1;
      }
    }

    message BattleSettings {
      uint64 battle_id = 2;
      uint64 start_time_ms = 3;
      uint64 duration = 4;
      string theme = 5;
      uint64 channel_id = 6;
      uint64 match_type = 7;
      string banner_url = 8;
      uint64 sub_type = 9;
      int32 mode = 10;
      string config = 11;
      string notify_scheme_url = 12;
      string hotsoon_notify_scheme_url = 13;
      Data.Image unknwon_field1 = 14;
      string unknwon_field2 = 15;
      string unknwon_field3 = 16;
      Data.BattleTitleConfig title_config = 17;
      Data.BattleTitleConfig punish_config = 18;
      uint64 punish_duration = 19;
      uint64 punish_start_time_ms = 20;
      int32 optimize_version = 21;
      bool punish_optimize_on = 22;
      uint64 blood_display_duration = 23;
      uint64 status_display_duration = 24;
      string toast = 25;
      bool need_close_linkmic = 26;
      bool display_last_result = 27;
      string normal_activity_name = 28;
      int32 invite_type = 29;
      Data.BattleConfigSetting battle_config_setting = 31;
      Data.BattleBarConfig bar_config = 32;
      Data.BattleBarConfig hotsoon_bar_config = 33;
      uint64 initiator_id = 34;
      int32 battle_type = 35;
      uint64 finished = 36;
      repeated int32 play_tags = 37;
      uint64 steal_tower_duration = 38;
      string lynx_data = 39;
      uint64 battle_status = 40;
      string initiator_open_id = 5000;
    }

    message BattleTask {
      bool enable_task = 1;
    }

    message LinkMicBattle {
      Common common = 1;
      BattleSettings battle_settings = 2;
      BattleMode battle_mode = 3;
      BattleTask battle_task = 4;
      int32 skin_type = 5;
      map<int64, Data.BattleUserInfo> user_infos = 6;
      Data.OperationalPlay operational_play = 7;
      int32 battle_type = 8;
      bool relative_score = 9;
      bool normal_to_multiple = 10;
      Data.BattleSkinConfig skin_config = 11;
      Data.LinkIconConfig link_icon_config = 12;
      string request_source = 13;
      string event_tracking_info = 14;
      string battle_attached_info = 15;
      map<int64, Data.BattleUserInfo> open_user_infos = 16;
    }

    message BattleTeamTaskAskMessage {
      Common common = 1;
      string team_task_json = 2;
    }

    message BattleTeamTaskMessage {
      Common common = 1;
      Data.TeamTask team_task = 2;
      string team_task_json = 3;
    }

    message BattleToastMessage {
      Common common = 1;
      string content = 2;
      int32 notify_type = 3;
      uint64 duration = 4;
      uint64 battle_id = 5;
      UIConfig ui_config = 6;
      map<string, string> tracking_params = 7;
      repeated string tags = 8;

      message Text {
        string content = 1;
        string color = 2;
      }

      message UIConfig {
        Text content = 1;
        string schema = 2;
        Data.Image icon = 3;
        Text icon_text = 4;
        repeated UIItem ui_item_list = 5;
      }

      message UIItem {
        int32 ui_type = 1;
        Text content = 2;
        string schema = 3;
        Data.Image icon = 4;
        Text icon_text = 5;
        string webp_url = 6;
      }
    }

    message BattleUpdatePropCardTaskMessage {
      Common common = 1;
      string channel_id = 2;
      string battle_id = 3;
      string battle_effect_info = 4;
    }

    message BattleUseCardMessage {
      Common common = 1;
      Data.ItemCardInfo info = 2;
      string extra = 4;
    }

    message BeginnerGuideMessage {
      Common common = 1;
      int32 message_type = 2;
      string prompts = 3;
    }

    message LinkmicBigEventMessage {
      Common common = 1;
      int32 msg_type = 2;
      InitLinkmicContent init_linkmic_content = 3;
      SwitchSceneContent switch_scene_content = 4;
      SwitchEarphoneMonitorContent switch_earphone_monitor_content = 5;
      SwitchKtvModeContent switch_ktv_mode_content = 6;
      SwitchLyricStatusContent switch_lyric_status_content = 7;
      SwitchFullSongStatusContent switch_full_song_status_content = 8;
      SwitchTuningEffectContent switch_tuning_effect_content = 9;
      SwitchSongVolumeContent switch_song_volume_content = 10;
      KtvEffectDegradeContent ktv_effect_degrade_content = 11;
      PrepareDownloadSongMaterialsContent prepare_download_song_materials_content = 12;
      SwitchAvatarContent switch_avatar_content = 13;
      SwitchAvatarActionContent switch_avatar_action_content = 14;
      SwitchAvatarVADModeContent switch_avatar_vad_mode_content = 15;
      SwitchUserStatusContent switch_user_status_content = 16;
      TurnOverCameraContent turn_over_camera_content = 17;
      SendSignalContent send_signal_content = 18;
    }

    message InitLinkmicContent {
      int32 target_mode = 1;
    }

    message SwitchSceneContent {
      int32 target_mode = 1;
    }

    message SwitchEarphoneMonitorContent {
      int32 to_status = 1;
    }

    message SwitchKtvModeContent {
      int32 ktv_mode = 1;
    }

    message SwitchLyricStatusContent {
      int32 to_status = 1;
    }

    message SwitchFullSongStatusContent {
      int32 to_status = 1;
    }

    message SwitchTuningEffectContent {
      string to_effect_name = 1;
    }

    message BridgeData {
      Common common = 1;
      string bridge_message_json = 2;
    }

    message BridgeMessage {
      Common common = 1;
      BridgeData bridge = 2;
    }

    message BrotherhoodMessage {
      Common common = 1;
      string content = 2;
    }

    message CarBallShowMessage {
      Common common = 1;
      bool is_show = 2;
    }

    message CarSeriesInfoMessage {
      Common common = 1;
      uint64 action_type = 2;
      uint64 series_id = 3;
      string series_name = 4;
      string official_price = 5;
      string image_url = 6;
      string open_url = 7;
    }

    message CarnivalMessage {
      Common common = 1;
      Data.CombinedText text = 2;
      uint64 carnival_seq_id = 3;
      uint64 danmaku_style_type = 4;
      int32 special_mark = 5;
      uint64 priority = 6;
    }

    message CategoryChangeMessage {
      Common common = 1;
      string category_id = 2;
      string category_name = 3;
      string challenge_id = 4;
      string challenge_name = 5;
    }

    message ChatCarnivalMessage {
      Common common = 1;
      uint64 notify_type = 2;
      uint64 anchor_start_timestamp = 3;
      uint64 anchor_start_second = 4;
      uint64 user_start_timestamp = 5;
      uint64 user_start_second = 6;
      uint64 duration = 7;
      string background_color = 8;
      Data.Image title_image = 9;
      string pre_content = 10;
      string content = 11;
      uint64 orientations = 12;
      uint64 move_speed = 13;
      repeated ChatItem chat_style = 14;
      repeated EggItem egg_style = 15;
      uint64 word_orientation = 16;
      uint64 move_direction = 17;
      repeated uint64 egg_show_range = 18;
      repeated uint64 size_and_alpha = 19;
      repeated uint64 vertical_offset = 20;
      uint64 path = 21;
      string word_color = 22;
      uint64 show_webp = 23;
      uint64 use_privilege_region = 24;
      uint64 can_open_contour = 25;
      uint64 support_show_type = 26;
      map<string, string> extra = 27;
    }

    message EggItem {
      Data.Image background = 1;
      uint64 background_hight = 2;
      uint64 background_width = 3;
      uint64 use_rate = 4;
      uint64 is_dynamic_egg = 5;
    }

    message ChatItem {
      uint64 head_size = 1;
      uint64 content_size = 2;
      string content_color = 3;
      FlexImageStruct background = 4;
      uint64 background_hight = 5;
      uint64 background_width = 6;
      uint64 use_rate = 7;
    }

    message ChatMessage {
      Common common = 1;
      Data.User user = 2;
      string content = 3;
      bool visible_to_sender = 4;
      Data.Image background_image = 5;
      string full_screen_text_color = 6;
      Data.Image background_image_v2 = 7;
      PublicAreaCommon public_area_common = 9;
      Data.Image gift_image = 10;
      uint64 agree_msg_id = 11;
      int32 priority_level = 12;
      LandscapeAreaCommon landscape_area_common = 13;
      uint64 event_time = 15;
      bool send_review = 16;
      bool from_intercom = 17;
      bool intercom_hide_user_card = 18;
      repeated int32 chat_tags = 19;
      uint64 chat_by = 20;
      int32 individual_chat_priority = 21;
      Data.Text rtf_content = 40;
      Data.Text rtf_content_v2 = 41;
      map<string, string> model_info = 200;
    }

    message EmojiChatMessage {
      Common common = 1;
      Data.User user = 2;
      uint64 emoji_id = 3;
      Data.Text emoji_content = 4;
      string default_content = 5;
      Data.Image background_image = 6;
      bool from_intercom = 7;
      bool intercom_hide_user_card = 8;
      PublicAreaCommon public_area_common = 9;
    }

    message FriendChatMessage {
      Common common = 1;
      Data.User user = 2;
      string content = 3;
    }

    message ChorusMessage {
      Common common = 1;
      int32 msg_type = 2;
      OpenChorusContent open_chorus_content = 100;
      CloseChorusContent close_chorus_content = 101;
      ChorusOrderedSongListChangeContent chorus_ordered_song_list_change_content = 102;
    }

    message OpenChorusContent {
      Data.ChorusInfo chorus_info = 1;
      string sub_singer_toast = 2;
    }

    message CloseChorusContent {
      Data.ChorusInfo chorus_info = 1;
      uint64 close_user_id = 2;
      string close_toast = 3;
      int32 close_reason = 4;
      string close_open_id = 5000;
    }

    message ChorusOrderedSongListChangeContent {
      Data.ChorusSongInfo list_info = 1;
    }

    message ClientFallbackDynamicMessage {
      Common common = 1;
    }

    message CNYReward {
      Common common = 1;
      string award_content = 2;
      string banner_content = 3;
    }

    message CNYATaskMessage {
      Common common = 1;
      uint64 watch_duration = 2;
      uint64 watch_total = 3;
      int32 current_round = 7;
      int32 pct = 8;
      repeated uint64 round_target = 9;
      map<string, string> all_desc = 10;
      map<string, Data.Image> all_image = 11;
    }

    message CommentaryChangeMessage {
      Common common = 1;
      Data.CommentaryRoomInfo commentary_room_info = 2;
      int32 operation = 3;
    }

    message CommentsMessage {
      Common common = 1;
      Data.User user = 2;
      string content = 3;
      string color = 4;
      Data.Image back_ground = 5;
      uint64 action_type = 6;
      string action_content = 7;
    }

    message CommerceSaleMessage {
      Common common = 1;
      bool has_commerce_sale = 2;
    }

    message CommerceMessage {
      Common common = 1;
      uint64 message_type = 2;
      string content = 3;
    }

    message CommonCardAreaMessage {
      Common common = 1;
      int32 message_type = 2;
      Data.BottomRightCardArea bottom_right_card_data = 3;
      Data.BizPinArea biz_pin_area = 4;
      Data.CommonCardArea common_card_area = 5;
    }

    message ComplexContent {
      string type = 1;
      string text = 2;
      string font_color = 3;
      uint64 font_size = 4;
      uint64 weight = 5;
      Data.Image img = 6;
    }

    message CommonGuideMessage {
      Common common = 1;
      uint64 message_type = 2;
      Data.Text main_content = 3;
      ComplexContent secondary_content = 4;
      Data.Image icon = 5;
      Data.Text button_content = 6;
      string button_action_schema = 7;
      Data.Image button_icon = 8;
      uint64 duration = 9;
      bool is_rounded_icon = 10;
    }

    message CommonLuckyMoneyMessage {
      Common common = 1;
      uint64 diamond_count = 2;
      uint64 luckymoney_id = 3;
      uint64 send_time = 4;
      uint64 delay_time = 5;
      Data.User user = 6;
      uint64 style = 7;
      LuckyIcon lucky_icon = 8;
      Data.Image background = 9;
      bool is_official = 10;

      message LuckyIcon {
        string url_list = 1;
        string uri = 2;
      }
    }

    message TaskPanelMessage {
      Common common = 1;
      TaskPanel data = 2;
    }

    message TaskPanel {
      int32 task_id = 1;
      int32 task_type = 2;
      int32 watch_time = 3;
      string title = 4;
      string sub_title = 5;
      string tag_icon_url = 6;
      string tag_text = 7;
      string tag_text_color = 8;
      string button_name = 9;
      string schema = 10;
      uint64 expire_at = 11;
      int32 status = 12;
      int32 expire_after = 13;
      int32 reward_type = 14;
      string panel_title = 15;
      string sub_title_color = 16;
    }

    message TaskRewardToastMessage {
      Common common = 1;
      TaskRewardToast data = 2;
    }

    message TaskRewardToast {
      int32 task_id = 1;
      int32 task_type = 2;
      int32 reward_type = 3;
      string title = 4;
      string sub_title = 5;
      string icon_url = 6;
      string bg_pic_url = 7;
      int32 reward_amount = 8;
      string tip = 9;
      string finish_sound = 10;
    }

    message CommonPopupMessage {
      Common common = 1;
      string schema_url = 2;
      bool anchor_pop_up = 3;
    }

    message CommonPushMessage {
      Common common = 1;
      Data.Image icon = 2;
      string title = 3;
      string text = 4;
      string button = 5;
      string schema = 6;
      uint64 duration = 7;
      string scene = 8;
    }

    message CommonTextMessage {
      Common common = 1;
      Data.User user = 2;
      string scene = 3;
      PublicAreaCommon public_area_common = 4;
    }

    message CommonToastMessage {
      Common common = 1;
      bool discardable = 2;
      bool immediate = 3;
      uint64 duration = 4;
      string text_color = 5;
      string background_color_start = 6;
      string background_color_end = 7;
      uint64 position = 8;
      Data.Image top_img = 9;
      uint64 top_img_width = 10;
      uint64 top_img_height = 11;
      bool show_mongolia_layer = 12;
    }

    message ControlMessage {
      Common common = 1;
      uint64 action = 2;
      string tips = 3;
      Extra extra = 4;
      PublicAreaCommon public_area_common = 5;

      message Extra {
        string ban_info_url = 1;
        uint64 reason_no = 2;
        Data.Text title = 3;
        Data.Text violation_reason = 4;
        Data.Text content = 5;
        Data.Text got_it_button = 6;
        Data.Text ban_detail_button = 7;
        string source = 8;
      }
    }

    message WebcastLifeLotteryDrawResultEventMessage {
      Common common = 1;
      uint64 lottery_id = 2;
      repeated uint64 user_ids = 3;
      string extra = 4;
      repeated string user_open_ids = 5000;
    }

    message DataLifeLiveMessage {
      Common common = 1;
      int32 type = 2;
      string body = 3;
    }

    message DecorationModifyMessage {
      Common common = 1;
      string extra = 2;
    }

    message DecorationUpdateMessage {
      Common common = 1;
      Data.DecotationDetail detai = 2;
    }

    message DiggMessage {
      Common common = 1;
      uint64 digg_count = 2;
      uint64 duration = 3;
      uint64 color = 4;
      Data.User user = 5;
      string icon = 6;
    }

    message DLiveMessage {
      Common common = 1;
      repeated string rooms = 2;
      uint64 max_push_delay_time = 3;
    }

    message OfficialRoomMessage {
      Common common = 1;
      Data.OfficialRoomInfo official_room_info = 2;
    }

    message CeremonyMessage {
      Common common = 1;
      repeated UserRoom items = 2;
      uint64 max_push_delay_time = 3;
    }

    message UserRoom {
      uint64 type = 1;
      string room = 2;
      string user = 3;
    }

    message RcmdUser {
      string user = 1;
      string text_before_action = 2;
      string text_after_action = 3;
      string authentication_info = 4;
      string edit_script = 5;
    }

    message RecommendUsersMessage {
      Common common = 1;
      string list_title = 2;
      repeated RcmdUser users = 3;
      Data.Image img_vertical = 4;
      Data.Image img_horizontal = 5;
      uint64 display_time = 6;
      uint64 max_push_delay_time = 7;
      bool check_alive = 8;
      string alive_scene = 5000;
      string alive_ids = 5001;
    }

    message DolphinSettingUpdateMessage {
      Common common = 1;
      uint64 settingVersion = 2;
    }

    message DonationMessage {
      Common common = 1;
      uint64 total = 2;
      string currency = 3;
      repeated Data.User sponsor = 4;
      repeated Data.User user = 5;
    }

    message DoodleGiftMessage {
      Common common = 1;
      uint64 gift_id = 2;
      uint64 fan_ticket_count = 3;
      Data.User user = 4;
      Data.User to_user = 5;
      string compose = 6;
      uint64 room_fan_ticket_count = 7;
      Data.GiftIMPriority priority = 8;
      string log_id = 9;
      PublicAreaCommon public_area_common = 10;
      Data.Text tray_display_text = 11;
      Data.GiftTrayInfo tray_info = 12;
    }

    message LikeUserDetail {
      Data.User user = 1;
      uint64 count = 2;
    }

    message DoubleLikeHeartMessage {
      Common common = 1;
      DoubleLikeDetail double_like_detail = 2;
      Data.Text self_display_text = 3;
      Data.Text normal_display_text = 4;
      repeated LikeUserDetail like_user_list = 5;
    }

    message DoubleLikeTopUserMessage {
      Common common = 1;
      LikeUserDetail like_user_list = 2;
    }

    message PicoDisplayInfo {
      uint64 combo_sum_count = 1;
      string emoji = 2;
      Data.Image emoji_icon = 3;
      string emoji_text = 4;
    }

    message DoubleLikeDetail {
      bool double_flag = 1;
      int32 seq_id = 2;
      int32 renewals_num = 3;
      int32 triggers_num = 4;
    }

    message DisplayControlInfo {
      bool show_text = 1;
      bool show_icons = 2;
    }

    message LikeMessage {
      Common common = 1;
      uint64 count = 2;
      uint64 total = 3;
      uint64 color = 4;
      Data.User user = 5;
      string icon = 6;
      DoubleLikeDetail double_like_detail = 7;
      DisplayControlInfo display_control_info = 8;
      uint64 linkmic_guest_uid = 9;
      string scene = 10;
      PicoDisplayInfo pico_display_info = 11;
      PublicAreaCommon public_area_common = 12;
    }

    message DouplusIndicatorMessage {
      Common common = 1;
      uint64 number = 2;
      uint64 status = 3;
      string toast = 4;
      string buyer_nickname = 5;
    }

    message DouplusMessage {
      Common common = 1;
      uint64 promotion = 2;
    }

    message DragonFruitQuizMessage {
      Common common = 1;
      bytes biz_msg = 2;
    }

    message DressAssetMessage {
      Common common = 1;
      string dress_id = 2;
    }

    message DriveGiftMessage {
      Common common = 1;
      uint64 new_count = 2;
      string popup_url = 3;
    }

    message DrumMsgType {

    }

    message DrumResult {

    }

    message DrumMessage {
      Common common = 1;
      int32 drum_result = 2;
      int32 dump_msg_type = 3;
      uint64 drum_count = 4;
      uint64 report_time_gap = 5;
      uint64 push_id = 6;
      string push_id_str = 7;
      repeated User users = 8;

      message User {
        uint64 user_id = 1;
        string nick_name = 2;
        string avatar = 3;
        string user_id_str = 4;
        string user_open_id = 5000;
        string user_open_id_str = 5001;
      }
    }

    message ProjectDModifyH5 {
      Common common = 1;
      string top_left = 2;
      string buttom_right = 3;
    }

    message ProjectDTaskInfo {
      Common common = 1;
      int32 atype = 2;
      Data.Image icon = 3;
      string count = 4;
      string fallback_context = 5;
      string award_url = 6;
      uint64 left_task_count = 7;
      uint64 sub_task_id = 8;
    }

    message DutyGiftMessage {
      Common common = 1;
      int32 speedy_gift_id = 5;
      int32 target_score = 6;
      int32 stage_count = 7;
      int32 status = 8;
      int32 score = 9;
      Data.User contribute_most = 10;
      int32 contribute_most_score = 11;
      uint64 duty_id = 12;
    }

    message EasterEggMessage {
      Common common = 1;
      EasterEggMessageData data = 2;
    }

    message EasterEggMessageData {
      bool has_easter_egg = 1;
      uint64 stage = 2;
      uint64 total_stage = 3;
      uint64 effects_num = 4;
      uint64 start_count = 5;
      uint64 end_count = 6;
      uint64 count = 7;
    }

    message EcomFansClubMessage {
      Common common = 1;
      int32 action = 2;
      UserInfo user = 3;
    }

    message UserInfo {
      uint64 user_id = 1;
      int32 level = 2;
      string open_id = 5000;
    }

    message CornerReachMessage {
      Common common = 1;
      uint64 duration = 2;
      uint64 elem_type = 3;
    }

    message TempStateAreaReachMessage {
      Common common = 1;
      uint64 elem_type = 2;
      uint64 elem_id = 3;
      uint64 item_id = 4;
      uint64 status = 5;
      Resource resource = 6;

      message Resource {
        string name = 1;
        string icon = 2;
        string description = 3;
        string extra = 4;
      }
    }

    message EpisodeChatMessage {
      Common common = 1;
      Data.User user = 2;
      string content = 3;
      bool visible_to_sender = 4;
      Data.Image background_image = 5;
      PublicAreaCommon public_area_common = 6;
      Data.Image gift_image = 7;
      uint64 agree_msg_id = 8;
      repeated string color_value = 9;
    }

    message FansGroupGuideMessage {
      Common common = 1;
      int32 type = 2;
      string title = 3;
      string content = 4;
      uint64 auto_record_duration_ms = 5;
      Data.Text rich_text = 6;
      string scheme_url = 7;
    }

    message FansclubStatisticsMessage {
      Common common = 1;
      string name = 2;
      uint64 fans_count = 3;
    }

    message FansclubMessage {
      Common common = 1;
      int32 action = 2;
      string content = 3;
      Data.User user = 4;
      UpgradePrivilege upgrade_privilege = 5;
      PublicAreaCommon public_area_common = 6;
      uint64 left_diamond = 7;

      message UpgradePrivilege {
        string content = 1;
        string description = 2;
        int32 button_type = 3;
      }
    }

    message FansclubReviewMessage {
      Common common = 1;
      int32 action = 2;
      string content = 3;
    }

    message FansclubGuideMessage {
      Common common = 1;
      Data.Text title = 2;
      Data.Text sub_title = 3;
    }

    message FeaturedPublicScreenSettingMessage {
      Common common = 1;
      uint64 status = 2;
      string toast = 3;
    }

    message FeedbackActionMessage {
      Common common = 1;
      uint64 action_id = 2;
    }

    message FeedbackCardMessage {
      Common common = 1;
      uint64 questionnaire_id = 2;
      uint64 scatterMills = 3;
    }

    message FireworkMessage {
      Common common = 1;
      uint64 count = 2;
      uint64 report_time_gap = 3;
      uint64 push_id = 4;
      string push_id_str = 5;
      repeated User users = 6;

      message User {
        uint64 user_id = 1;
        string nick_name = 2;
        string avatar = 3;
        string user_id_str = 4;
        string user_open_id = 5000;
        string user_open_id_str = 5001;
      }
    }

    message FireworkMultiMessage {
      Common common = 1;
      bytes biz_msg = 2;
    }

    message FollowGuideMessage {
      Common common = 1;
      Data.Image avatarUrl = 2;
      string content = 3;
      string hourRankInfo = 4;
      uint64 giftId = 5;
      uint64 duration = 6;
      string popupReason = 7;
    }

    message BrokerNotifyMessage {
      Common common = 1;
      uint64 msg_type = 2;
      string content = 3;
      uint64 timestamp = 4;
      uint64 msg_sub_type = 5;
      uint64 msg_id = 6;
    }

    message FreeCellGiftMessage {
      Common common = 1;
      uint64 gift_id = 2;
      uint64 fan_ticket_count = 3;
      uint64 group_count = 4;
      uint64 repeat_count = 5;
      uint64 combo_count = 6;
      Data.User user = 7;
      Data.User to_user = 8;
      FreeCellData free_cell = 9;
      uint64 room_fan_ticket_count = 10;
      string log_id = 11;
      PublicAreaCommon public_area_common = 12;

      message FreeCellData {
        uint64 time_now_ms = 1;
        uint64 time_start_ms = 2;
        uint64 time_freeze_end_ms = 3;
        uint64 time_double_end_ms = 4;
        uint64 time_end_ms = 5;
        uint64 free_cell_length = 6;
        bool is_freeze = 7;
        bool is_double = 8;
        Data.User contribute_most_user = 9;
        uint64 contribute_most_coins = 10;
        uint64 distance_from_previous_one = 11;
        uint64 index_in_day_ranklist = 12;
      }
    }

    message FreeGiftMessage {
      Common common = 1;
      Data.User user = 2;
      Data.FreeGift free_gift = 3;
    }

    message GamblingStatusChangedMessage {
      Common common = 1;
      uint64 prev_status = 2;
      GameQuizInfo game_quiz_info = 3;

      message GameQuizInfo {
        uint64 id = 1;
        uint64 room_id = 2;
        uint64 status = 3;
      }
    }

    message GameChannelMessage {
      Common common = 1;
      uint64 game_id = 2;
      uint64 message_type = 3;
      string extra = 4;
      Data.User user = 5;
    }

    message HostVersion {
      uint64 host_id = 1;
      string min_version = 2;
      string max_version = 3;
    }

    message GameAncAudEntranceMessage {
      Common common = 1;
      uint64 game_id = 2;
      uint64 game_kind = 3;
      string extra = 4;
      bool show_audience_float_entrance = 5;
      repeated HostVersion version_range = 6;
      string app_id = 7;
      string meta_version = 8;
      string name = 9;
      string icon_url = 10;
      uint64 start_id = 11;
    }

    message GameAncAudStatusMessage {
      Common common = 1;
      uint64 game_id = 2;
      uint64 send_type = 3;
      uint64 game_status = 4;
      string extra = 5;
    }

    message GameAncAudPanelCtrlMessage {
      Common common = 1;
      uint64 game_id = 2;
      uint64 send_type = 3;
      uint64 panel_type = 4;
      string extra = 5;
    }

    message GameAncAudDataFromAncMessage {
      Common common = 1;
      uint64 game_id = 2;
      uint64 send_type = 3;
      string data = 4;
      string extra = 5;
    }

    message GameAncAudDataFromAudMessage {
      Common common = 1;
      uint64 game_id = 2;
      string data = 3;
      string extra = 4;
    }

    message GameDevelopMessage {
      Common common = 1;
      uint64 game_id = 2;
      int32 develop = 3;
      string app_id = 4;
      string sign = 5;
    }

    message GameGiftMessage {
      Common common = 1;
      uint64 gift_id = 2;
      uint64 fan_ticket_count = 3;
      Data.User user = 4;
      Data.User to_user = 5;
      string normalContent = 6;
      MonkeyData monkey_data = 8;
      string log_id = 9;
      PublicAreaCommon public_area_common = 10;

      message MonkeyData {
        int32 score = 1;
        bool break_record = 2;
        bool need_popup = 3;
        string popup_content = 4;
      }
    }

    message GameGiftStatusMessage {
      Common common = 1;
      uint64 game_id = 2;
      int32 status = 3;
      string extra = 4;
    }

    message GameStatusMessage {
      Common common = 1;
      uint64 gameID = 2;
      int32 status = 3;
      string config_extra = 4;
    }

    message GameIntroduceMessage {
      Common common = 1;
      GameIntroduceShowMessage game_introduce = 2;
    }

    message GameIntroduceShowMessage {
      int32 type = 1;
      int32 msg_type = 2;
      IntroduceDispatchStrategy dispatch_strategy = 3;
      string updated_data = 4;
      uint64 introduce_type = 5;
      AtmosphereContent atmosphere_content = 11;
    }

    message IntroduceDispatchStrategy {
      int32 strategy_type = 1;
      int32 max_retry_times = 2;
      int32 min_random_ms = 3;
      int32 max_random_ms = 4;
    }

    message AtmosphereContent {
      uint64 show_duration = 1;
      string count = 2;
      string playing_count = 3;
    }

    message RemindIntroduce {
      string game_id = 1;
      Data.GameImageBundler game_icon = 2;
      string content = 3;
    }

    message GameInviteMessage {
      Common common = 1;
      Data.GameInvite invite_item = 2;
      Data.InvitationSwitch invitation_switch = 3;
      string config_extra = 4;
    }

    message GameInviteReplyMessage {
      Common common = 1;
      int32 reply = 2;
      string extra = 3;
    }

    message GameOnLivePromoteMessage {
      Common common = 1;
      OnLivePromoteMessage on_live_promote = 2;
    }

    message OnLivePromoteMessage {
      string bubble_text = 1;
      string promote_text = 2;
      string introduce_text = 3;
      bool is_support_introduce = 4;
      string game_icon = 5;
      string game_name = 6;
      uint64 biz_mode = 7;
      string game_id = 8;
    }

    message GamePVPMessage {
      Common common = 1;
      uint64 game_id = 2;
      string extra = 3;
    }

    message GameStatusUpdateMessage {
      Common common = 1;
      uint64 anchor_id = 2;
      uint64 room_id = 3;
      int32 game_kind = 4;
      uint64 game_id = 5;
      uint64 round_id = 6;
      int32 event_time = 7;
      int32 present_msg_type = 8;
      string config_extra = 9;
      uint64 play_kind = 10;
      uint64 switch_id = 11;
      string anchor_openid = 5000;
    }

    message GameCPAnchorPromoteInfoMessage {
      Common common = 1;
      SimpleGameInfo game_info = 2;
    }

    message SimpleGameInfo {
      string game_id = 1;
      int32 stage = 2;
      int32 biz_type = 3;
      string biz_id = 4;
      string biz_mode = 5;
      string biz_extra = 6;
      string game_attr = 7;
      string component_extra = 8;
      bool is_introduce = 9;
      string promote_instance_id = 10;
      string game_name = 11;
      string tags = 12;
      string game_icon = 13;
      string android_package_size = 14;
      string android_package_name = 15;
      uint64 game_category_id = 16;
      uint64 game_tag_id = 17;
      uint64 game_union_type = 18;
      bool support_introduce = 19;
      string user_game_stats = 20;
      int32 omni_cooperation_type = 21;
    }

    message GameCPBaseMessage {
      Common common = 1;
      GameCPShowMessage show_info = 2;
    }

    message GameCPShowMessage {
      int32 type = 1;
      Data.Text introduce_download_info = 2;
      string game_image = 3;
      string game_name = 4;
      string game_download_url = 5;
      string game_trace_info = 6;
      repeated string game_tag_names = 7;
      string game_background_color = 8;
      int32 introduce_time_limit = 9;
      uint64 introduce_start_time = 10;
      int32 introduce_stop_type = 11;
      Data.Text introduce_stop_message = 12;
      string game_id = 13;
      bool audit_result = 14;
      string ios_app_id = 15;
      string company_name = 16;
      string download_extra = 17;
      string android_privacy_url = 18;
      string android_authorization_url = 19;
      string ios_privacy_url = 20;
      string ios_authorization_url = 21;
      string android_version = 22;
      string ios_version = 23;
      string active_link = 24;
      uint64 download_count = 25;
      bool is_show_animate = 26;
      uint64 animate_start_time = 27;
      uint64 animate_duration = 28;
      string anti_hijack_content = 29;
      string anti_hijack_image = 30;
      string ios_sale_point = 31;
      bool is_forbid_jump_ios_app = 32;
      bool has_platform_gift = 33;
      string open_game_url = 44;
      string prop_icon = 45;
      string prop_name = 46;
      string prop_id = 47;
      uint64 market_price = 48;
      uint64 selling_price = 49;
      uint64 prop_sku_id = 50;
      ReserveItem reserve_item = 51;
      uint64 prop_type = 52;
      uint64 game_access_type = 53;
      bool is_prop_exp_game = 54;
      repeated string component_ids = 55;
      int32 biz_type = 56;
      uint64 install_user_count = 57;
      string android_sale_point = 58;
      MiniGameMeta mini_game_meta = 59;
      uint64 support_platforms = 60;
      MiniPlayMeta mini_play_meta = 61;
      string play_introduce = 62;
      string small_icon = 63;
      string game_introduction_url = 64;
      Data.GameImageBundler game_icon = 65;
      CloudGameMeta cloud_game_meta = 66;
      AtmosphereContent atmosphere_content = 67;
      FeaturedContent featured_content = 68;
      string promote_instance_id = 70;
      uint64 prop_stock_num = 71;
      IntroduceCardTag tag = 72;
      IntroduceCardDisplayInfo card_display_info = 73;
      bool is_in_pre_download_period = 74;
    }

    message IntroduceCardDisplayInfo {
      uint64 display_duration = 1;
      bool is_open_timer_introduce_card = 2;
      uint64 display_timer_span = 3;
      uint64 display_timer_loop_cnt = 4;
    }

    message IntroduceCardTag {
      string icon_url = 1;
      string sub_text = 2;
    }

    message CloudGameMeta {
      string schema = 1;
    }

    message MiniGameMeta {
      string schema = 1;
      string version = 2;
    }

    message MiniPlayMeta {
      string schema = 1;
      string game_name = 2;
      string icon = 3;
      string game_id = 4;
      string app_id = 5;
      repeated uint64 support_live_scene = 6;
      string version = 7;
      int32 game_type = 8;
      string developer = 9;
      string extra = 10;
    }

    message ReserveItem {
      string reserve_today_num = 1;
      string reserve_total_num = 2;
      int32 reserve_status = 3;
    }

    message GameCPUserDownloadMessage {
      Common common = 1;
      string user_nick_name = 2;
      uint64 user_download_count = 3;
      string user_download_content = 4;
      string download_game_name = 5;
      int32 type = 6;
    }

    message GameCPAnchorReminderMessage {
      Common common = 1;
      int32 type = 2;
      string game_id = 3;
      string title = 4;
      string game_name = 5;
      string game_icon_url = 6;
    }

    message GameCPUserRoomMetaMessage {
      Common common = 1;
      uint64 oper = 2;
      UserIntroduceCardStatus user_introduce_card_status = 3;
      repeated UserGiftStatus user_gift_status = 4;
    }

    message UserIntroduceCardStatus {
      bool is_show_card = 1;
      uint64 introduce_duration = 2;
      uint64 timer_span = 3;
      uint64 timer_loop_cnt = 4;
    }

    message UserGiftStatus {
      string play_id = 1;
      string game_id = 2;
      string hint = 3;
      string title = 4;
      int32 focus_index = 5;
      int32 login_days = 6;
    }

    message Content {
      int32 type = 1;
      string content = 2;
      string avatar = 3;
    }

    message FeaturedContent {
      int32 rotation_time = 1;
      Content contents = 2;
    }

    message CloudGamingPodMessage {
      Common common = 1;
      int32 msg_type = 2;
      string text = 3;
      uint64 remain_seconds = 4;
    }

    message GamePlayTeamStatusMessage {
      Common common = 1;
      repeated Data.PlayTeamMember member_list = 2;
      int32 total_num = 3;
      uint64 play_id = 4;
      string toast = 5;
    }

    message GamePlayInviteMessage {
      Common common = 1;
      string schema = 2;
      uint64 play_id = 3;
    }

    message GamePlayStatusMessage {
      Common common = 1;
      int32 status = 2;
      uint64 play_id = 3;
      string audit_deny_toast = 4;
      string toast = 5;
    }

    message LynxParam {
      int32 style = 1;
      string main_text = 2;
      string expire_day_text = 3;
      string sub_text = 4;
    }

    message GiftConsumeRemindMessage {
      Common common = 1;
      string lynx_schema = 2;
      LynxParam lynx_param = 3;
      int32 remind_type = 4;
    }

    message GiftCycleReleaseMessage {
      Common common = 1;
      uint64 release_id = 2;
      GiftIcon gift_icon = 3;
      repeated uint64 gift_ids = 4;

      message GiftIcon {
        uint64 gift_id = 1;
        Data.Image icon = 2;
      }
    }

    message ExhibitionTopLeftMessage {
      Common common = 1;
      Data.Text display_text = 2;
      string top_title = 3;
      Data.Image gift_icon = 4;
      string exhibition_entrance_url = 5;
    }

    message ExhibitionChatMessage {
      Common common = 1;
      Data.Text display_text = 2;
      int32 unlighted_item = 3;
      int32 lighted_item = 4;
      int32 biz_type = 5;
      int32 app_id = 6;
      PublicAreaCommon public_area_common = 7;
    }

    message GiftIconFlashMessage {
      Common common = 1;
      repeated uint64 user_ids = 2;
      uint64 recommend_time = 3;
      uint64 not_flash_after = 4;
      repeated string open_ids = 5000;
    }

    message GiftTouchMessage {
      Common common = 1;
      string scene = 2;
      GiftPanelTopBar gift_panel_topbar = 3;
      ComboTrayInfo combo_tray_info = 4;
      uint64 now_millis = 5;
      int32 display_position = 6;
      Data.User to_user = 7;
    }

    message GiftPanelTopBar {
      string extra = 1;
      int32 topbar_action = 2;
    }

    message ComboTrayInfo {
      string combo_id = 1;
      Data.Image tray_base_img = 2;
      string main_title = 3;
      string sub_title = 4;
      int32 action = 5;
      string extra = 6;
    }

    message GiftUpdateMessage {
      Common common = 1;
      int32 update_type = 2;
      repeated uint64 update_gift_ids = 3;
      repeated uint64 update_asset_ids = 4;
      Data.GiftSortStrategy gift_sort_strategy = 5;
    }

    message GiftVoteMessage {
      Common common = 1;
      uint64 msg_type = 2;
      uint64 vote_id = 3;
      repeated Data.GiftVoteResult results = 4;
      uint64 finish_time = 5;
      uint64 current_time = 6;
      uint64 vote_type = 7;
      string extra = 8;

      message Result {
        string text = 1;
        uint64 count = 2;
        Data.Image icon = 3;
        uint64 gift_id = 4;
        string name = 5;
        uint64 diamond_count = 6;
        uint64 gift_type = 7;
        string count_str = 8;
      }
    }

    message GiftMessage {
      Common common = 1;
      uint64 gift_id = 2;
      uint64 fan_ticket_count = 3;
      uint64 group_count = 4;
      uint64 repeat_count = 5;
      uint64 combo_count = 6;
      Data.User user = 7;
      Data.User to_user = 8;
      int32 repeat_end = 9;
      TextEffect text_effect = 10;
      uint64 group_id = 11;
      uint64 income_taskgifts = 12;
      uint64 room_fan_ticket_count = 13;
      Data.GiftIMPriority priority = 14;
      Data.GiftStruct gift = 15;
      string log_id = 16;
      uint64 send_type = 17;
      PublicAreaCommon public_area_common = 18;
      Data.Text tray_display_text = 19;
      uint64 banned_display_effects = 20;
      Data.GiftTrayInfo tray_info = 21;
      Data.AssetEffectMixInfo asset_effect_mix_info = 24;
      bool display_for_self = 25;
      string interact_gift_info = 26;
      string diy_item_info = 27;
      repeated uint64 min_asset_set = 28;
      uint64 total_count = 29;
      int32 client_gift_source = 30;
      Data.AnchorGiftData anchor_gift = 31;
      repeated uint64 to_user_ids = 32;
      uint64 send_time = 33;
      uint64 force_display_effects = 34;
      string trace_id = 35;
      uint64 effect_display_ts = 36;
      Data.SendTogether send_together = 37;
      Data.ExtraEffect extra_effect = 38;
      RoomHotInfo room_hot_info = 39;
      string GiftPlayParam = 40;
      int32 multi_send_effect_level = 41;
      repeated Data.SeriesPlayGift series_gift_data = 42;
      bool use_room_message = 43;
      uint64 count = 44;
      repeated string to_openids = 5000;

      message TextEffect {
        Detail portrait = 1;
        Detail landscape = 2;

        message Detail {
          Data.Text text = 1;
          int32 text_font_size = 2;
          Data.Image background = 3;
          int32 start = 4;
          int32 duration = 5;
          int32 x = 6;
          int32 y = 7;
          int32 width = 8;
          int32 height = 9;
          int32 shadow_dx = 10;
          int32 shadow_dy = 11;
          int32 shadow_radius = 12;
          string shadow_color = 13;
          string stroke_color = 14;
          int32 stroke_width = 15;
        }
      }
    }

    message RoomHotInfo {
      int32 local_hot_strategy = 1;
      int32 public_area_level = 2;
      int32 gift_level = 3;
    }

    message BindingGiftMessage {
      GiftMessage msg = 1;
      Common common = 2;
    }

    message GradeBuffAnchorShareMessage {
      Common common = 1;
      string scheme_url = 2;
      Data.Text content = 3;
      uint64 score = 4;
    }

    message GroupLiveMemberChangeMessage {
      Common common = 1;
      Data.GroupLiveMemberInfo members = 2;
    }

    message GroupShowUserUpdateMessage {
      Common common = 1;
      Data.GroupShowInfo info = 2;
    }

    message GrowthTaskMessage {
      Common common = 1;
      Data.GrowthTask task = 2;
      int32 action = 3;
      CurrentContribution current_contribution = 4;
      repeated Data.GrowthTaskContributorRank contributors = 5;
      uint64 queue_task_len = 6;
      uint64 contributor_total_num = 7;

      message CurrentContribution {
        Data.User user = 1;
        map<int64, int64> delta_info = 2;
      }
    }

    message GuestBattleScoreMessage {
      Common common = 1;
      Data.GuestBattleInfo battle_info = 2;
      bool crown_upgrade = 3;
    }

    message GuestBattleMessage {
      Common common = 1;
      uint64 msg_type = 2;
      Data.GuestBattleInfo battle_info = 3;
      string finish_toast = 4;
      GuestBattleUpdateContent update_content = 100;
      GuestBattleFinishContent finish_content = 101;
    }

    message GuestBattleUpdateContent {
      bool crown_upgrade = 1;
    }

    message GuestBattleFinishContent {
      int32 reason = 1;
      uint64 finish_user_id = 2;
      string finish_open_id = 5000;
    }

    message GuideMessage {
      Common common = 1;
      uint64 guide_type = 2;
      uint64 gift_id = 3;
      string description = 4;
      uint64 duration = 5;
    }

    message HamletMessage {
      Common common = 1;
      string content = 2;
    }

    message HighValueUserDataMessage {
      Common common = 1;
      Data.HighValueUserData data = 2;
    }

    message HighlightCommentPosition {
      Common common = 1;
      uint64 event_time = 3;
      double x = 4;
      double y = 5;
    }

    message HighlightComment {
      Common common = 1;
      uint64 id = 2;
      uint64 event_time = 3;
      uint64 comment_msg_id = 4;
      int32 review_result = 5;
      string review_comment = 6;
      string content = 7;
      Data.User user = 8;
      int32 action_type = 9;
      uint64 msg_time = 10;
      uint64 end_time = 11;
      int32 countdown_style = 12;
      int32 trigger = 13;
      uint64 operator_id = 14;
      string operator_nickname = 15;
      string operator_open_id = 5000;
    }

    message HotChatMessage {
      Common common = 1;
      string title = 2;
      string content = 3;
      repeated uint64 num = 4;
      uint64 duration = 5;
      repeated uint64 show_duration = 6;
      uint64 sequence_id = 7;
      repeated string hot_list = 8;
      Data.Text rtf_content = 9;
      uint64 chat_content_type = 10;
      map<string, string> extra = 200;
    }

    message HotRoomMessage {
      Common common = 1;
      Data.HotRoomInfo info = 2;
    }

    message ImDeleteMessage {
      Common common = 1;
      uint64 delete_msg_ids = 2;
    }

    message InRoomBannerRedPoint {
      Common common = 1;
      uint64 count = 2;
      uint64 banner_id = 3;
      uint64 show_type = 4;
    }

    message InRoomBannerRefreshMessage {
      Common common = 1;
      uint64 max_delay_seconds = 2;
      int32 position = 3;
    }

    message InRoomBannerMessage {
      Common common = 1;
      string extra = 2;
      int32 position = 3;
      int32 action_type = 4;
      string container_url = 5;
      string lynx_container_url = 6;
      int32 container_type = 7;
      int32 op_type = 8;
    }

    message InRoomBannerEvent {
      Common common = 1;
      int32 position = 2;
      Data.BannerData data = 3;
    }

    message InfoBoxMessage {
      Common common = 1;
      uint64 scene = 2;
      string sub_scene = 3;
      uint64 msg_type = 4;
      uint64 delay = 5;
      Data.Text title = 6;
      Data.Text fold_title = 7;
      Data.Text content = 8;
      uint64 drag_type = 9;
      InfoBoxMessageBackGround background = 10;
    }

    message InfoBoxMessageBackGround {
      uint64 background_alpha = 1;
      string background_color = 2;
      Data.Image background_image = 3;
    }

    message OpenSchemaCommand {
      string url = 1;
    }

    message InstantCommandMessage {
      Common common = 1;
      int32 command_type = 2;
      OpenSchemaCommand open_schema_command = 11;
    }

    message PopBoxContent {
      int32 large_type = 1;
      int32 icon_type = 2;
      string control_type = 3;
      string title = 4;
      string description = 5;
      string url = 6;
      int32 count_down_sec = 7;
      string button_desc = 8;
    }

    message ClientOperation {
      string app_id = 1;
      int32 operation_type = 2;
      PopBoxContent pop_box_content = 3;
      int32 show_time = 4;
    }

    message InteractControlMessage {
      Common common = 1;
      string room_id = 2;
      string time_stamp = 3;
      repeated ClientOperation anchor_operation = 4;
      repeated ClientOperation audience_operation = 5;
    }

    message InteractOpenDevelopMessage {
      Common common = 1;
      string app_id = 2;
      int32 develop = 3;
      string sign = 4;
      uint64 game_id = 5;
      uint64 app_kind = 6;
      bool magic_box_recycle = 7;
    }

    message InteractionInfoMessage {
      Common common = 1;
      Data.LikeIconInfo like_icon_info = 2;
      Data.ChatEmojiGuideInfo chat_emoji_guide_info = 3;
      Data.ChatImageGuideInfo chat_image_guide_info = 4;
      repeated int32 update_info_type = 50;
    }

    message InteractionPlayOpenCloudGameMessage {
      Common common = 1;
      bool launch_cloud_game = 2;
      string schema = 3;
      string toast = 4;
    }

    message InteractionPlayRealNameAuthMessage {
      Common common = 1;
      int32 scene = 2;
      string client_key = 3;
      TwoElementAgreement two_element_agreement = 4;
      InteractionPlayAuthEventParam event_param = 5;
    }

    message IntercomInviteMessage {
      Common common = 1;
      uint64 channel_id = 2;
    }

    message IntercomReplyMessage {
      Common common = 1;
      uint64 channel_id = 2;
      uint64 reply_status = 3;
      string toast = 4;
    }

    message ItemShareMessage {
      Common common = 1;
      Data.ShareItemStyle item_style = 2;
      Data.Text share_text = 3;
      PublicAreaCommon public_area_common = 4;
      map<string, string> tracking_params = 30;
    }

    message JackfruitMessage {
      Common common = 1;
      bytes biz_msg = 2;
    }

    message EcomBuyIntentionMessage {
      Common common = 1;
      Count counts = 2;
      uint64 unix_time = 3;

      message Count {
        uint64 id = 1;
        string title = 2;
        uint64 count = 3;
      }
    }

    message KtvAtmosphereVideoMessage {
      Common common = 1;
      KtvAtmosphereVideoContent ktv_atmosphere_video_content = 2;
    }

    message KtvAtmosphereVideoContent {
      uint64 uid = 1;
      uint64 song_id = 2;
      Data.KtvAtmosphereVideoInfo video_info = 3;
      Data.KTVMVInfo mv_info = 4;
      uint64 k_song_uid = 5;
      string open_id = 5000;
    }

    message KTVContestSupportMessage {
      Common common = 1;
      uint64 support_count = 2;
      uint64 supportee_id = 3;
      uint64 supportor_id = 4;
      uint64 song_id = 5;
      uint64 song_unique_id = 6;
      string supportee_open_id = 5000;
      string supportor_open_id = 50001;
    }

    message AddKTVDressContent {
      Data.AddDressPrompt add_dress_prompt = 1;
    }

    message ChangeKTVDressContent {
      string change_global_dress_toast = 1;
    }

    message KtvDressMessage {
      Common common = 1;
      int32 message_type = 2;
      AddKTVDressContent add_dress_content = 3;
      ChangeKTVDressContent change_dress_content = 4;
    }

    message KtvGrabSongResultMessage {
      Common common = 1;
      uint64 song_id = 2;
      uint64 term_id = 3;
      bool success = 4;
      string prompt = 5;
    }

    message KTVPlayModeStartMessage {
      Common common = 1;
      string prompt = 2;
      int32 play_mode_type = 3;
      repeated int32 linkmic_play_modes = 4;
    }

    message KTVShortVideoCreatedMessage {
      Common common = 1;
      ShortVideoStruct short_video_info = 2;

      message ShortVideoStruct {
        string short_video_url = 1;
      }
    }

    message KTVSingerHotRankPosMessage {
      Common common = 1;
      uint64 hot = 2;
      uint64 rank = 3;
      uint64 singer = 4;
      string singer_open_id = 5000;
    }

    message KtvChallengeConfigMessage {
      Common common = 1;
      uint64 switch_status = 2;
      uint64 target_score = 3;
      uint64 target_duration_second = 4;
      int32 ktv_challenge_type = 5;
    }

    message KTVChallengeRankMessage {
      Common common = 1;
      repeated ChallengeRankUser user_list = 2;
      uint64 singer_id = 3;
      string singer_nickname = 4;
      Data.Image singer_avatar_thumb = 5;
      string singer_open_id = 5000;

      message ChallengeRankUser {
        uint64 user_id = 1;
        string nickname = 2;
        uint64 score = 3;
        Data.Image avatar_thumb = 4;
        Data.Image avatar_medium = 5;
        Data.Image avatar_large = 6;
        string open_id = 5000;
      }
    }

    message KTVChallengeStatusMessage {
      Common common = 1;
      uint64 challenge_id = 2;
      uint64 status = 3;
      uint64 current_score = 4;
      uint64 target_score = 5;
      uint64 countdown_second = 6;
      uint64 target_duration_second = 7;
      uint64 increment_duration_second = 8;
      int32 gift_type = 9;
      int32 emoji_location = 10;
      int32 ktv_challenge_type = 11;
    }

    message KTVStartGrabSongMessage {
      Common common = 1;
      bool isStart = 2;
    }

    message KTVUserSingingHotMessage {
      Common common = 1;
      uint64 hot = 2;
      int32 hot_status = 3;
      int32 hot_level = 4;
      uint64 song_id = 5;
      uint64 user_id = 6;
      uint64 level2_threshold = 7;
      uint64 level3_threshold = 8;
      string open_id = 5000;
    }

    message KtvMessage {
      Common common = 1;
      uint64 message_type = 2;
      SetSettingOrderSongContent set_setting_order_song_content = 3;
      AudienceOrderSongContent audience_order_song_content = 4;
      AudienceOrderSongChatContent audience_order_song_chat_content = 5;
      PausePlaySongContent pause_play_song_content = 6;
      OpenKtvComponentContent open_ktv_component_content = 7;
      CloseKtvComponentContent close_ktv_component_content = 8;
      AudienceAddSongSettingChangedContent audience_add_song_setting_changed = 9;
      SongWaitingListChangedContent song_waiting_list_changed = 10;
      WantToListenSongListChangedContent want_to_listen_song_list_changed = 11;
      PermitWantToListenSongContent permit_want_to_listen_song = 12;
      WantToListenSongRemovedContent want_to_listen_song_removed = 13;
      AudienceMultiChorusSettingChangedContent audience_multi_chorus_setting_changed = 14;
      MultiChorusWaitingListChangedContent multi_chorus_waiting_list_changed = 15;
      KTVStageHideLyricsSwitchChangedContent ktv_stage_hide_lyrics_switch_changed = 16;
    }

    message SetSettingOrderSongContent {
      bool can_order_song = 1;
    }

    message AudienceOrderSongContent {
      uint64 order_song_count = 1;
    }

    message AudienceOrderSongChatContent {
      Data.User user = 1;
      Data.Text display_text = 2;
      bool display_user_role = 3;
    }

    message PausePlaySongContent {
      uint64 song_id = 1;
      int32 action_type = 2;
      uint64 from_user_id = 3;
      uint64 singer_id = 4;
      string from_open_id = 5000;
      string singer_open_id = 5001;
    }

    message OpenKtvComponentContent {
      bool open_audience_add_song_switch = 1;
      bool open_audience_multi_chorus_switch = 2;
      bool open_stage_hide_lyrics_switch = 3;
    }

    message CloseKtvComponentContent {

    }

    message AudienceAddSongSettingChangedContent {
      bool open = 1;
    }

    message AudienceMultiChorusSettingChangedContent {
      bool open = 1;
      string toast = 2;
    }

    message SongWaitingListChangedContent {
      uint64 anchor_unread_count = 1;
    }

    message MultiChorusWaitingListChangedContent {
      uint64 anchor_unread_count = 1;
    }

    message WantToListenSongListChangedContent {
      uint64 anchor_unread_count = 1;
    }

    message PermitWantToListenSongContent {
      uint64 song_id = 1;
      bool is_multi_add_song = 2;
      string song_name = 3;
    }

    message WantToListenSongRemovedContent {
      uint64 song_id = 1;
    }

    message LevelUpMessage {
      Common common = 1;
      Data.User user = 2;
      int32 pre_level = 3;
      int32 current_level = 4;
    }

    message LightGiftMessage {
      Common common = 1;
      uint64 group_count = 2;
      uint64 repeat_count = 3;
      uint64 combo_count = 4;
      uint64 to_user_id = 5;
      Data.GiftIMPriority priority = 6;
      GiftInfo gift_info = 7;
      GiftLiteTrayInfo tray_info = 8;
      uint64 send_type = 9;
      uint64 count = 10;
      string diy_item_info = 11;
      uint64 banned_display_effects = 12;
      Data.GiftStruct gift_struct = 13;
      string to_openid = 5000;
    }

    message GiftLiteTrayInfo {
      uint64 duration_ms = 1;
    }

    message GiftInfo {
      uint64 gift_id = 1;
      Data.Image gift_icon = 2;
      uint64 diamond_count = 3;
    }

    message RoomChannelLinkMessage {
      Common common = 1;
      uint64 message_type = 2;
      uint64 linker_id = 3;
      uint64 scene = 4;
      ChannelLinkerCreateContent create_content = 5;
      ChannelLinkerCloseContent close_content = 6;
      ChannelLinkerInviteContent invite_content = 7;
      ChannelLinkerReplyContent reply_content = 8;
      ChannelLinkerPermitContent permit_content = 9;
      ChannelLinkerEnterContent enter_content = 10;
      ChannelLinkerLeaveContent leave_content = 11;
      ChannelLinkerKickOutContent kick_out_content = 12;
      ChannelLinkerLinkedListChangeContent linked_list_change_content = 13;
      ChannelLinkerSilenceContent silence_status_content = 14;
      ChannelLinkerApplyContent apply_content = 15;
    }

    message ChannelLinkerApplyContent {
      uint64 applicant_user_id = 1;
      string applicant_sec_user_id = 2;
      Data.User applicant_user = 3;
      string applicant_open_id = 5000;
    }

    message ChannelLinkerCreateContent {
      uint64 owner_id = 1;
      uint64 room_id = 2;
      uint64 link_type = 3;
      string sec_owner_id = 4;
      string owner_open_id = 5000;
    }

    message ChannelLinkerCloseContent {
      int32 source = 1;
    }

    message ChannelLinkerInviteContent {
      uint64 inviter_user_id = 1;
      uint64 invitee_user_id = 2;
      string prompt = 3;
      string inviter_sec_user_id = 4;
      string invitee_sec_user_id = 5;
      string inviter_open_id = 5000;
      string invitee_open_id = 5001;
    }

    message ChannelLinkerReplyContent {
      uint64 inviter_user_id = 1;
      uint64 invitee_user_id = 2;
      int32 reply_result = 3;
      string prompt = 4;
      string inviter_sec_user_id = 5;
      string invitee_sec_user_id = 6;
      string inviter_open_id = 5000;
      string invitee_open_id = 5001;
    }

    message ChannelLinkerPermitContent {
      uint64 applicant_user_id = 1;
      uint64 approver_user_id = 2;
      int32 permit_result = 3;
      string prompt = 4;
      string applicant_sec_user_id = 5;
      string approver_sec_user_id = 6;
      string applicant_open_id = 5000;
      string approver_open_id = 5001;
    }

    message ChannelLinkerEnterContent {
      uint64 user_id = 1;
      string sec_user_id = 2;
      string open_id = 5000;
    }

    message ChannelLinkerLeaveContent {
      uint64 user_id = 1;
      string sec_user_id = 2;
      string open_id = 5000;
    }

    message ChannelLinkerKickOutContent {
      uint64 from_user_id = 1;
      string prompt = 2;
      string sec_from_user_id = 3;
      string from_open_id = 5000;
    }

    message ChannelLinkerLinkedListChangeContent {
      Data.ChannelListUser channel_linkmic_users = 1;
      uint64 version = 2;
      string rtc_room_id_str = 3;
    }

    message ChannelLinkerSilenceContent {
      int32 silence_status = 1;
      uint64 from_user_id = 2;
      uint64 to_user_id = 3;
      string ack_message = 4;
      uint64 version = 5;
      string sec_from_user_id = 6;
      string sec_to_user_id = 7;
      int32 silence_source = 8;
      string from_open_id = 5000;
      string to_open_id = 5001;
    }

    message UserContribute {
      uint64 user_id = 1;
      uint64 rank = 2;
      uint64 score = 3;
      string nickname = 4;
      Data.Image avatar_thumb = 5;
    }

    message LinkerContributeMessage {
      Common common = 1;
      uint64 user_id = 2;
      uint64 total_score = 3;
      repeated UserContribute user_contribute_list = 4;
      uint64 micro_time_stamp = 5;
      uint64 scene = 6;
      string total_score_real_str = 7;
      string total_score_str = 8;
      Data.LinkmicQuickInteract quick_interact = 9;
    }

    message LinkMessage {
      Common common = 1;
      uint64 message_type = 2;
      uint64 linker_id = 3;
      uint64 scene = 4;
      LinkerInviteContent invite_content = 5;
      LinkerReplyContent reply_content = 6;
      LinkerCreateContent create_content = 7;
      LinkerCloseContent close_content = 8;
      LinkerEnterContent enter_content = 9;
      LinkerLeaveContent leave_content = 10;
      LinkerCancelContent cancel_content = 11;
      LinkerKickOutContent kick_out_content = 12;
      LinkerLinkedListChangeContent linked_list_change_content = 13;
      LinkerUpdateUserContent update_user_content = 14;
      LinkerWaitingListChangeContent waiting_list_change_content = 15;
      LinkerBanContent ban_content = 16;
      LinkerItemContent item_content = 17;
      LinkerViolationReminderContent violation_reminder_content = 18;
      LinkerUpdateLinkTypeApplyContent update_link_type_apply_content = 19;
      LinkerUpdateLinkTypeReplyContent update_link_type_reply_content = 20;
      LinkerAvatarAuditContent avatar_audit_content = 21;
      LinkerApplyExpiredContent apply_expired_content = 22;
      LinkerApplyStrongReminderContent apply_strong_reminder_content = 23;
      LinkerAnchorStreamSwitchContent anchor_stream_switch_content = 24;
      LinkerClickScreenContent click_screen_content = 25;
      LinkerLockPositionContent lock_position_content = 26;
      LinkerFollowStrongGuideContent follow_strong_guide_content = 27;
      LinkerShareVideoImContent share_video_im_content = 28;
      LinkerGuestInviteContent guest_invite_content = 29;
      LinkerGuestExitCastScreenContent exit_cast_screen_content = 30;
      LinkerSwitchSceneContent switch_scene_content = 31;
      LinkPhaseEnterNextNotifyContent link_phase_enter_next_content = 32;
      LinkerChangePlayModeContent change_play_mode_content = 33;
      LinkerLowBalanceForPaidLinkmicContent low_balance_for_paid_linkmic_content = 34;
      LinkerDegradeAlertContent degrade_alert_content = 35;
      LinkerEnlargeGuestInviteContent enlarge_guest_invite_content = 36;
      LinkerEnlargeGuestReplyContent enlarge_guest_reply_content = 37;
      LinkerEnlargeGuestApplyContent enlarge_guest_apply_content = 38;
      LinkPrepareApplyContent prepare_apply_content = 39;
      LinkerCrossRoomUpdateContent cross_room_update_content = 40;
      LinkerChangeMultiPKTeamInfoContent change_multi_pk_team_info_content = 41;
      CrossRoomLinkInviteContent cross_room_link_invite_content = 42;
      CrossRoomLinkReplyContent cross_room_link_reply_content = 43;
      CrossRoomLinkCancelInviteContent cross_room_link_cancel_invite_content = 44;
      LinkerResumeAudienceContent linker_resume_audience_content = 45;
      LinkerBattleConnectContent linker_battle_connect_content = 46;
      LinkerResumeApplyContent linker_resume_apply_content = 47;
      CrossRoomRTCInfoContent cross_room_rtc_info_content = 48;
      AnchorUpdateLinkmicConfigContent anchor_update_linkmic_config_content = 49;
      AnchorUpdateLayoutContent anchor_update_layout_content = 50;
      LinkerApplyRankChangeContent apply_rank_change_content = 52;
      LinkerChangeMediaInfoContent change_media_content = 53;
      LinkerUILayoutChangeContent linker_ui_layout_change_content = 54;
      LinkerUpdateWaitingUserOffsetContent linker_update_waiting_user_offset_content = 55;
      LinkerRemoveWaitingUserContent linker_remove_waiting_user_content = 56;
      LinkerPrepareInviteContent linker_prepare_invite_content = 57;
      LinkerPrepareReplyContent linker_prepare_reply_content = 58;
      LinkerConfirmUnsilenceContent linker_confirm_unsilence_content = 59;
      LinkerSwitchChannelInviteContent switch_channel_invite_content = 60;
      LinkerSwitchChannelReplyContent switch_channel_reply_content = 61;
      LinkerSwitchChannelCancelContent switch_channel_cancel_content = 62;
      LinkerAudioAvatarNoticeContent audio_avatar_notice_content = 63;
      LinkerRTCActionContent rtc_action_content = 64;
      LinkerCrossLinkInfoUpdateContent cross_link_info_update = 65;
      LinkerCrossLinkFinishContent cross_link_finish = 66;
      LinkerInitChatRoomContent init_chat_room_content = 67;
      LinkerAudienceWaitingListChangeContent audience_waiting_list_change = 68;
      LinkerSysKickOutContent sys_kick_out_content = 101;
      uint64 fallback_scene = 199;
      string extra = 200;
      Data.LinkerBaseInfo linker_base_info = 201;
      PublicAreaCommon public_area_common = 202;
      uint64 version = 203;
      string linkmic_lynx_data = 204;
    }

    message LinkerSwitchChannelInviteContent {
      LinkerInviteContent content = 1;
    }

    message LinkerSwitchChannelReplyContent {
      LinkerReplyContent content = 1;
    }

    message LinkerSwitchChannelCancelContent {
      LinkerCancelContent content = 1;
    }

    message LinkmicInfo {
      string access_key = 1;
      uint64 link_mic_id = 2;
      bool joinable = 3;
      int32 confluence_type = 4;
      string rtc_ext_info = 5;
      string rtc_app_id = 6;
      string rtc_app_sign = 7;
      string linkmic_id_str = 8;
      uint64 vendor = 9;
      string live_core_ext_info = 10;
      Data.MultiRtcInfo multi_rtc_info = 11;
      Data.MultiLiveCoreInfo multi_live_core_info = 12;
    }

    message LinkerSetting {
      uint64 max_member_limit = 1;
      uint64 link_type = 2;
      uint64 scene = 3;
      uint64 owner_user_id = 4;
      uint64 owner_room_id = 5;
      uint64 vendor = 6;
      string owner_open_id = 5000;
    }

    message LinkerInviteContent {
      uint64 from_user_id = 1;
      uint64 from_room_id = 2;
      string to_rtc_ext_info = 3;
      bool rtc_join_channel = 4;
      uint64 vendor = 5;
      string sec_from_user_id = 6;
      string to_linkmic_id_str = 7;
      bool rtc_push_stream = 8;
      string sign_extra = 9;
      int32 invite_source = 10;
      LinkmicInfo from_user_linkmic_info = 11;
      Data.MultiRtcInfo multi_rtc_info = 12;
      Data.MultiLiveCoreInfo multi_live_core_info = 13;
      int32 multi_pk_mode = 14;
      bool support_multi_pk_team_mode = 15;
      Data.LinkmicInfo to_user_linkmic_info = 16;
      Data.MultiChannelInfo multi_channel_info = 17;
      string invite_reject_temporary_text = 18;
      string audience_linker_description = 19;
      bool inviter_with_audience = 20;
      repeated Data.ListUser invitee_followed_users = 21;
      repeated Data.ListUser inviter_users = 22;
      uint64 to_user_id = 23;
      uint64 to_room_id = 24;
      Data.ListUser applied_user = 25;
      Data.PreRTCInfo pre_rtc_info = 26;
      bool support_multi_invite = 27;
      uint64 cur_invite_num = 28;
      uint64 wait_sec = 29;
      repeated Data.BattleRivalTag tags = 30;
      Data.ListUser invite_user = 31;
      string client_attached_info = 32;
      Data.UserVersionInfo inviter_version_info = 33;
      uint64 to_join_channel_id = 34;
      Data.AnchorLayoutInfo layout_info = 35;
      Data.BattleRivalTag region = 36;
      string open_game_app_id = 37;
      string battle_attached_info = 38;
      int32 biz_type = 39;
      string title = 40;
      string desc = 41;
      string event_tracking_info = 42;
      string game_name = 43;
      string biz_extra = 200;
      string from_open_id = 5000;
      string to_open_id = 5001;
    }

    message LinkerPrepareInviteContent {
      uint64 from_user_id = 1;
      uint64 from_room_id = 2;
      uint64 to_user_id = 3;
      Data.User invitor_user = 4;
      Data.Text content = 5;
      string source = 6;
      string sub_title = 7;
      string from_open_id = 5000;
      string to_open_id = 5001;
    }

    message LinkerPrepareReplyContent {
      uint64 from_user_id = 1;
      uint64 from_room_id = 2;
      uint64 to_user_id = 3;
      int32 reply_type = 4;
      string toast = 5;
      string from_open_id = 5000;
      string to_open_id = 5001;
    }

    message LinkerConfirmUnsilenceContent {
      uint64 from_user_id = 1;
      uint64 from_room_id = 2;
      string toast = 3;
      string from_open_id = 5000;
    }

    message LinkPrepareApplyContent {
      uint64 from_user_id = 1;
      uint64 from_room_id = 2;
      uint64 vendor = 3;
      string sec_from_user_id = 4;
      uint64 count = 5;
    }

    message LinkerReplyContent {
      uint64 from_user_id = 1;
      uint64 from_room_id = 2;
      LinkmicInfo from_user_linkmic_info = 3;
      uint64 to_user_id = 4;
      LinkmicInfo to_user_linkmic_info = 5;
      uint64 link_type = 6;
      uint64 reply_status = 7;
      LinkerSetting linker_setting = 8;
      bool biz_join_channel = 9;
      int32 multi_pk_mode = 10;
      Data.MultiChannelInfo multi_channel_info = 11;
      string toast = 12;
      map<int64, Data.RoomLinkerContent> linker_content_map = 13;
      Data.AnchorLinkmicChannelInfo backup_linkmic_info = 14;
      string kicked_users_unique_id = 15;
      uint64 match_type = 16;
      uint64 version = 17;
      uint64 anchor_ui_layout = 18;
      repeated Data.ListUser linked_users = 19;
      int32 switch_to_scene = 20;
      string battle_config_setting = 21;
      string client_attached_info = 22;
      Data.UserVersionInfo reply_version_info = 23;
      Data.AnchorLayoutInfo layout_info = 24;
      Data.MultiRtcInfo multi_rtc_info = 25;
      Data.MultiLiveCoreInfo multi_live_core_info = 26;
      Data.PreRTCInfo pre_rtc_info = 27;
      string battle_attached_info = 28;
      int32 to_biz_type = 29;
      int32 biz_type = 30;
      string game_app_id = 31;
      string from_open_id = 5000;
      string to_open_id = 5001;
    }

    message LinkerCreateContent {
      uint64 owner_id = 1;
      uint64 owner_room_id = 2;
      uint64 link_type = 3;
      string owner_open_id = 5000;
    }

    message MatchEffect {
      bool show_effect = 1;
      Data.Image effect_resource = 2;
    }

    message CityEffect {
      Data.Image effect_resource = 1;
      string city = 2;
      repeated uint64 show_effect_user_id_list = 3;
      repeated string show_effect_open_id_list = 5000;
    }

    message LinkerEnterContent {
      repeated Data.ListUser linked_users = 1;
      uint64 user_id = 2;
      int32 apply_type = 3;
      repeated Data.ListUser pre_link_users = 4;
      MatchEffect match_effect = 5;
      CityEffect city_effect = 6;
      uint64 version = 7;
      map<int64, Data.RoomLinkerContent> linker_content_map = 8;
      Data.MsgBoardItemInfo msg_board_item = 9;
      Data.LinkIconConfig link_icon_config = 10;
      string lynx_data = 11;
      Data.LinkmicUIConfig ui_config = 12;
      bool battle_display_entrance = 13;
      int32 biz_type = 14;
      string user_open_id = 5000;
    }

    message LinkerViolationReminderContent {
      string title = 1;
      string content = 2;
    }

    message LinkerCloseContent {
      int32 source = 1;
      Data.BanUser ban_anchor_info = 2;
      int32 reason = 3;
    }

    message LinkerLeaveContent {
      uint64 user_id = 1;
      repeated Data.ListUser linked_users = 2;
      Data.ListUser user = 3;
      repeated Data.ListUser pre_link_users = 4;
      uint64 version = 5;
      map<int64, Data.RoomLinkerContent> linker_content_map = 6;
      int32 leave_source = 7;
      Data.PreRTCInfo pre_rtc_info = 8;
      Data.MultiChannelInfo multi_channel_info = 9;
      repeated Data.ListUser list_users = 10;
      uint64 pre_rtc_version = 11;
    }

    message LinkerCancelContent {
      uint64 from_user_id = 1;
      uint64 to_user_id = 2;
      uint64 cancel_type = 3;
      int32 invite_source = 4;
      string toast = 5;
      string from_open_id = 5000;
      string to_open_id = 5001;
    }

    message LinkerKickOutContent {
      uint64 from_user_id = 1;
      int32 control_type = 2;
      uint64 paid_count = 3;
      uint64 link_duration = 4;
      int32 kick_out_source = 5;
      bool switch_to_silence = 6;
      string from_open_id = 5000;
    }

    message LinkerSysKickOutContent {
      uint64 user_id = 1;
      string linkmic_id_str = 2;
      string toast_msg = 3;
      int32 kick_out_source = 4;
      string reason_toast = 5;
      string open_id = 5000;
    }

    message LinkerWaitingListChangeContent {
      Data.PreRTCInfo pre_rtc_info = 1;
      Data.MultiChannelInfo multi_channel_info = 2;
      repeated Data.ListUser list_users = 3;
      uint64 version = 4;
    }

    message LinkerLinkedListChangeContent {
      repeated Data.ListUser linked_users = 1;
      repeated Data.ListUser pre_link_users = 2;
      uint64 version = 3;
      int32 push_type = 4;
      map<int64, Data.RoomLinkerContent> linker_content_map = 5;
      int32 update_mode = 6;
    }

    message LinkerBanContent {
      repeated Data.BanUser ban_users = 1;
      int32 linkmic_ban_type = 2;
    }

    message LinkerUpdateUserContent {
      uint64 from_user_id = 1;
      uint64 to_user_id = 2;
      map<string, string> update_info = 3;
      repeated Data.ListUser linked_users = 4;
      string extra = 5;
      uint64 version = 6;
      map<int64, Data.RoomLinkerContent> linker_content_map = 7;
      string ack_message = 8;
      string from_open_id = 5000;
      string to_open_id = 5001;
    }

    message ChannelNoticeContent {
      uint64 channel_id = 1;
      int32 action = 2;
      string extra_info = 3;
    }

    message LinkerItemContent {
      uint64 item_id = 1;
      uint64 author_id = 2;
      string author_name = 3;
      Data.Image avatar_thumb = 4;
      Data.Image avatar_medium = 5;
      Data.Image avatar_large = 6;
      string item_description = 7;
      string music_id = 8;
      string music_title = 9;
      string music_author = 10;
      string music_url = 11;
      uint64 comment_count = 12;
      string author_open_id = 5000;
    }

    message LinkerUpdateLinkTypeApplyContent {
      uint64 from_user_id = 1;
      uint64 to_user_id = 2;
      int32 link_type = 3;
      int32 source = 4;
      string ack_message = 5;
      string toast = 6;
      string from_open_id = 5000;
      string to_open_id = 5001;
    }

    message LinkerUpdateLinkTypeReplyContent {
      uint64 from_user_id = 1;
      uint64 to_user_id = 2;
      int32 reply_type = 3;
      string reply_prompts = 4;
      string from_open_id = 5000;
      string to_open_id = 5001;
    }

    message LinkerAvatarAuditContent {
      int32 audit_res = 1;
      string reason = 2;
      uint64 review_id = 3;
    }

    message LinkerApplyExpiredContent {
      uint64 user_id = 1;
      string open_id = 5000;
    }

    message LinkerApplyStrongReminderContent {
      int32 source = 1;
      Data.User user = 2;
    }

    message LinkerAnchorStreamSwitchContent {
      bool use_backup_stream = 1;
      uint64 anchor_user_id = 2;
      repeated Data.ListUser linked_users = 3;
      uint64 version = 4;
      string anchor_open_user_id = 5000;
    }

    message LinkerClickScreenContent {
      uint64 device_width = 1;
      uint64 device_height = 2;
      uint64 point_x = 3;
      uint64 point_y = 4;
      uint64 from_user_id = 5;
      Data.Image avatar_medium = 6;
    }

    message LinkerFollowStrongGuideContent {
      Data.User from_user = 1;
      uint64 to_user_id = 2;
      int32 from_user_type = 3;
      string to_user_open_id = 5000;
    }

    message LinkerLockPositionContent {
      Data.LinkmicPositionItem locked_positions = 1;
    }

    message LinkerShareVideoImContent {
      string im_content = 1;
    }

    message LinkerGuestInviteContent {
      Data.Text invite_content = 1;
    }

    message LinkerGuestExitCastScreenContent {
      uint64 user_id = 1;
      string open_id = 5000;
    }

    message LinkerSwitchSceneContent {
      Data.SwitchSceneData switch_scene_data = 1;
    }

    message LinkPhaseEnterNextNotifyContent {
      uint64 room_id = 1;
      Data.User anchor_user = 2;
      Data.User link_user = 3;
      Data.LinkPhase next_phase = 4;
      int32 current_phase_id = 5;
      int32 current_linktime_seconds = 6;
      Data.LinkPhaseConfig phase_config = 7;
    }

    message LinkerChangePlayModeContent {
      Data.ChangePlayModeData change_play_mode_data = 1;
    }

    message LinkerLowBalanceForPaidLinkmicContent {
      string toast = 1;
    }

    message LinkerDegradeAlertContent {
      Data.User user = 1;
      string degrade_content = 2;
    }

    message LinkerEnlargeGuestInviteContent {
      uint64 from_user_id = 1;
      uint64 to_user_id = 2;
      int32 invite_type = 3;
      Data.Image ui_image = 4;
      int32 target_enlarge_guest_type = 5;
      string from_openid = 5000;
      string to_openid = 5001;
    }

    message LinkerEnlargeGuestReplyContent {
      uint64 from_user_id = 1;
      uint64 to_user_id = 2;
      int32 reply_type = 3;
      string reply_prompts = 4;
      string from_openid = 5000;
      string to_openid = 5001;
    }

    message LinkerEnlargeGuestApplyContent {
      uint64 from_user_id = 1;
      string apply_prompts = 2;
      Data.Image ui_image = 3;
      int32 target_enlarge_guest_type = 4;
      string from_openid = 5000;
    }

    message CrossRoomLinkInviteContent {
      Data.User inviter = 1;
      Data.InviteRoomInfo room_info = 2;
      string invite_tips = 3;
      int32 inviter_room_join_status = 4;
      Data.RoomBattleMode room_battle_mode = 5;
      string introduction_content = 6;
      int32 cross_room_kind = 7;
    }

    message CrossRoomLinkReplyContent {
      int32 reply_type = 1;
      uint64 invitee_room_id = 2;
      int32 cross_type = 3;
      repeated Data.CrossRoomLinkReplyGuestInfo guest_infos = 4;
      uint64 invitee_anchor_id = 5;
      uint64 follow_status = 6;
      uint64 invite_source = 7;
      uint64 reply_user_id = 8;
      string reply_toast = 9;
      int32 reply_operate = 10;
      Data.RoomBattleProcessInfo process_info = 11;
      int32 cross_room_kind = 12;
      string invitee_open_id = 5000;
      string reply_open_id = 5001;
    }

    message CrossRoomLinkCancelInviteContent {
      uint64 canceller_room_id = 1;
    }

    message LinkerCrossRoomUpdateContent {
      uint64 from_room_id = 1;
      uint64 to_room_id = 2;
      map<string, string> update_info = 3;
      repeated Data.ListUser linked_users = 4;
      uint64 version = 5;
      map<int64, Data.RoomLinkerContent> linker_content_map = 6;
    }

    message LinkerChangeMultiPKTeamInfoContent {
      Data.MultiPKModeInfo multi_pk_mode_info = 1;
      string toast = 2;
    }

    message LinkerResumeAudienceContent {
      string rtc_ext_info = 1;
      string live_core_ext_info = 2;
      repeated Data.ListUser linked_users = 3;
      uint64 version = 4;
    }

    message LinkerBattleConnectContent {
      string live_core_ext_info = 1;
      string rtc_ext_info = 2;
      map<int64, Data.RoomLinkerContent> linker_content_map = 3;
      Data.MultiChannelInfo multi_channel_info = 4;
      uint64 version = 5;
      repeated Data.ListUser anchor_user_list = 6;
    }

    message LinkerResumeApplyContent {
      ApplyParam param = 1;
      uint64 apply_user = 2;
      uint64 room_id = 3;
      string apply_open_user = 5000;

      message ApplyParam {
        int32 apply_type = 1;
      }
    }

    message CrossRoomRTCInfoContent {
      Data.MultiChannelInfo multi_channel_info = 1;
      Data.PreRTCInfo pre_rtc_info = 2;
      Data.MultiChannelInfo other_multi_channel_info = 3;
    }

    message AnchorUpdateLinkmicConfigContent {
      bool forbid_invite_by_general = 1;
      bool forbid_apply_from_other = 2;
    }

    message AnchorUpdateLayoutContent {
      int32 layout_type = 1;
      uint64 update_user_id = 2;
      int32 anchor_ui_layout = 3;
      int32 anchor_layout_range = 4;
      uint64 operator_id = 5;
      map<string, Data.AnchorLayoutDetail> layout_details = 6;
      bool big_anchor_is_orientation = 7;
      string update_open_user_id = 5000;
      string operator_open_id = 5001;
    }

    message LinkerApplyRankChangeContent {
      uint64 room_id = 1;
    }

    message LinkerChangeMediaInfoContent {
      repeated int32 scene_list = 1;
      repeated int32 play_mode_list = 2;
      Data.LinkmicMediaParam linkmic_media_param = 3;
    }

    message LinkerUILayoutChangeContent {
      uint64 ui_layout = 1;
      string rtc_ext_info = 2;
      string live_core_ext_info = 3;
      Data.MultiRtcInfo multi_rtc_info = 4;
      Data.MultiLiveCoreInfo multi_live_core_info = 5;
      uint64 version = 6;
      repeated Data.ListUser linked_list_users = 7;
      map<int64, Data.RoomLinkerContent> linker_content_map = 8;
    }

    message LinkerUpdateWaitingUserOffsetContent {
      uint64 offset = 1;
      int32 sort_strategy = 2;
      uint64 total_count = 3;
    }

    message LinkerRemoveWaitingUserContent {
      string waiting_user_toast = 1;
    }

    message LinkMicArmies {
      Common common = 1;
      map<int64, UserArmies> user_armies_map = 2;
      repeated UserArmies user_armies_list = 3;
      Data.BattleContributorsRankListV2 rank_list_v2 = 4;
      string top_show_text = 5;

      message UserArmies {
        UserArmy user_armies = 1;

        message UserArmy {
          uint64 user_id = 1;
          uint64 score = 2;
          string nickname = 3;
          Data.Image avatar_thumb = 4;
          string open_id = 5000;
        }
      }
    }

    message LinkMicBattleFinish {
      Common common = 1;
      BattleSettings battle_settings = 2;
      repeated Data.BattleArmy battle_armies = 3;
      repeated Data.BattleScore battle_scores = 4;
      repeated Data.User anchors = 5;
      map<int64, Data.BattleStarActivityGradeChange> grade_changes = 6;
      Data.OperationalPlay operational_play = 7;
      int32 end_reason = 8;
      string cut_short_prompt = 9;
      string cut_short_toast = 10;
      bool cut_short_win = 11;
      map<int64, Data.BattleUserInfo> user_infos = 12;
      int32 kill_finish_type = 13;
      Data.BreakthroughInfo breakthrough_info = 14;
      Data.BattleSkinConfig skin_config = 15;
      int32 skin_type = 16;
      Data.SurvivalInfo survival_info = 17;
      string event_tracking_info = 18;
      map<int64, Data.AuxiliaryScoreInfo> auxiliary_score_infos = 19;
      LinkmicBattleFinishExtra extra = 20;
      map<string, Data.BattleUserInfo> open_user_infos = 5000;
      map<string, Data.BattleStarActivityGradeChange> open_grade_changes = 5001;
    }

    message PunishEffect {
      uint64 effect_id = 1;
      string effect_name = 2;
      Data.Image effect_image = 3;
      uint64 lowest_score = 4;
      uint64 duration = 5;
      uint64 need_medicine_count = 6;
      bool usable = 7;
      int32 level = 8;
    }

    message LinkMicBattlePunish {
      Common common = 1;
      uint64 message_type = 2;
      repeated PunishEffect punish_effect_list = 3;
      string prompts = 4;
      Data.User mvp = 5;
      uint64 medicine_count = 6;
      PunishEffect target_effect = 7;
      uint64 start_time = 8;
      Data.User target_user = 9;
      uint64 speedy_gift_id = 11;
      uint64 duration = 12;
      uint64 channel_id = 13;
      uint64 battle_id = 14;
    }

    message LinkMicBattleTaskMessage {
      Common common = 1;
      string content = 2;
    }

    message ChijiNoticeMessage {
      Common common = 1;
      int32 message_type = 2;
      string banner_url = 3;
    }

    message LinkMicEnterNoticeMessage {
      Common common = 1;
      BattleSettings battle_settings = 2;
    }

    message LinkMicFriendOnlineMessage {
      Common common = 1;
      Data.User friend = 2;
      bool in_room = 3;
    }

    message LinkMicGuideMessage {
      Common common = 1;
      AnchorInfo anchor_info = 2;
      uint64 cue_threshold = 3;
      uint64 guideline_type = 4;
      FastMatchGuideline fast_match_guideline = 5;
      CallToLinkmicContent call_to_linkmic_content = 20;
      KtvAddSongGuideContent ktv_add_song_guide_content = 21;
      CreateGroupChatGuideContent create_group_chat_guide_content = 22;
      JoinGroupChatGuideContent join_group_chat_guide_content = 23;
      GuestBattleBubbleGuideContent guest_battle_bubble_guide_content = 24;
      CreateTeamfightGuideContent create_teamfight_guide_content = 25;
      NormalPaidLinkmicExplainCardContent normal_paid_linkmic_explain_card_content = 26;
      NormalPaidLinkmicMigrateToPlayContent normal_paid_linkmic_migrate_to_play_content = 27;
      LinkmicFollowEffectContent linkmic_follow_effect_content = 28;
      PKLinkBubbleContent pk_link_bubble_content = 29;
      PlayModeGuideBubbleContent play_mode_guide_bubble_content = 30;
      CrossLinkGuideBubbleContent cross_link_guide_bubble_content = 31;
      CrossLinkGuideAudioBubbleAnimationContent cross_link_guide_audio_bubble_animation_content = 32;

      message AnchorInfo {
        repeated InfoItem infoList = 1;

        message InfoItem {
          Data.Image icon = 1;
          string content = 2;
        }
      }

      message FastMatchGuideline {
        string title = 1;
        string subtitle = 2;
      }
    }

    message LinkmicFollowEffectContent {
      uint64 room_id = 1;
      uint64 from_user_id = 2;
      FollowInfo follow_infos = 3;
      string from_open_id = 5000;

      message FollowInfo {
        uint64 target_user_id = 1;
        uint64 follow_status = 2;
        string target_open_id = 5000;
      }
    }

    message GuestBattleBubbleGuideContent {
      Data.Text text = 1;
    }

    message CallToLinkmicContent {
      Data.Text text = 1;
    }

    message KtvAddSongGuideContent {
      Data.Text text = 1;
    }

    message CreateGroupChatGuideContent {
      uint64 anchor_id = 1;
      string header_text = 2;
      string body_text = 3;
      string anchor_open_id = 5000;
    }

    message JoinGroupChatGuideContent {
      uint64 group_id = 1;
      string conversation_id = 2;
      string header_text = 3;
      string body_text = 4;
      repeated Data.Image icons = 5;
      int32 group_type = 6;
      int32 guide_source = 7;
    }

    message CreateTeamfightGuideContent {
      Data.Text toast_text = 4;
    }

    message NormalPaidLinkmicExplainCardContent {
      Data.PaidLinkmicExplainCardInfo explain_card_info = 1;
    }

    message NormalPaidLinkmicMigrateToPlayContent {
      string toast = 1;
    }

    message PKLinkBubbleContent {
      string toast = 1;
    }

    message PlayModeGuideBubbleContent {
      int32 play_mode = 1;
      string toast = 2;
      int32 play_mode_enhance_type = 3;
      Data.Text text = 4;
      string schema = 5;
      map<string, string> extra = 6;
      int32 anchor_show_position = 7;
    }

    message LinkMicHostModifyMsg {
      Common common = 1;
      repeated uint64 host_uids = 2;
      repeated string host_open_ids = 5000;
    }

    message LinkMicKtvBeatRankMessage {
      Common common = 1;
      repeated Data.User user_list = 2;
      Data.User singer = 3;
      uint64 song_id = 4;
    }

    message LinkMicKtvEffectMessage {
      Common common = 1;
      Data.User from_user = 2;
      Data.User singer = 3;
      uint64 song_id = 4;
    }

    message LinkMicMethod {
      Common common = 1;
      uint64 message_type = 2;
      string access_key = 3;
      uint64 anchor_linkmic_id = 4;
      uint64 user_id = 5;
      uint64 fan_ticket = 6;
      uint64 total_linkmic_fan_ticket = 7;
      uint64 channel_id = 8;
      uint64 layout = 9;
      uint64 vendor = 10;
      uint64 dimension = 11;
      string theme = 12;
      uint64 invite_uid = 13;
      uint64 answer = 14;
      uint64 start_time = 15;
      uint64 duration = 16;
      repeated UserScores user_scores = 17;
      uint64 match_type = 18;
      bool win = 19;
      string prompts = 20;
      uint64 to_user_id = 21;
      map<int64, ContributorList> contributors = 22;
      uint64 linkmic_layout = 23;
      uint64 from_user_id = 24;
      string tips = 25;
      uint64 start_time_ms = 26;
      int32 confluence_type = 27;
      uint64 from_room_id = 28;
      uint64 invite_type = 29;
      uint64 sub_type = 30;
      Data.RivalExtraInfo inviter_rival_extra = 31;
      string rtc_ext_info = 32;
      string rtc_app_id = 33;
      string app_id = 34;
      string app_sign = 35;
      string rtc_app_sign = 36;
      string anchor_linkmic_id_str = 37;
      uint64 rival_anchor_id = 38;
      uint64 rival_linkmic_id = 39;
      string rival_linkmic_id_str = 40;
      bool show_popup = 41;
      uint64 sec_invite_uid = 42;
      uint64 scene = 43;
      uint64 sec_apply_uid = 44;
      repeated Data.User linked_users = 45;
      string sec_from_user_id = 46;
      int32 reply_type = 47;
      string reply_prompts = 48;
      string sec_to_user_id = 49;
      InvitorInfo invitor_info = 50;
      bool rtc_join_channel = 51;
      int32 sub_scene = 52;
      bool support_update_link_type = 53;
      int32 link_type = 54;
      int32 source = 55;
      Data.AnchorLinkmicInfo backup_anchor_linkmic_info = 56;
      repeated int32 play_modes = 57;
      repeated Data.ListUser linked_list_users = 58;
      repeated Data.LinkmicPositionItem locked_positions = 59;
      int32 end_reason = 60;
      Data.MultiRtcInfo multi_rtc_info = 61;
      Data.MultiLiveCoreInfo multi_live_core_info = 62;
      int32 layout_config_version = 63;
      int32 control_type = 64;
      Data.BanUser ban_anchor_info = 65;
      uint64 version = 66;
      Data.JoinTeamfightInfo join_teamfight_info = 67;
      uint64 paid_count = 68;
      uint64 link_duration = 69;
      string live_core_ext_info = 70;
      Data.GameInviteInfo game_invite_info = 71;
      int32 ui_layout = 72;
      Data.Text invite_message = 73;
      Data.MultiChannelInfo multi_channel_info = 74;
      int32 kick_out_source = 75;
      map<int64, Data.RoomLinkerContent> linker_content_map = 76;
      string function_type = 77;
      Data.MsgBoardItemInfo msg_board_item = 78;
      string from_user_linkmic_id_str = 79;
      string ack_message = 80;
      string init_source = 81;
      string score_update_log_id = 82;
      int32 switch_play_mode = 83;
      int32 update_message_from = 84;
      Data.LinkmicMediaInfo guest_linkmic_info = 85;
      Data.MCUContent mcu_content = 86;
      Data.BreakthroughInfo breakthrough_info = 87;
      Data.LinkerBaseInfo linker_base_info = 88;
      Data.AudienceActionSource action_source = 89;
      Data.BattleBarConfig battle_bar_config = 90;
      Data.User from_user = 91;
      map<int64, Data.AuxiliaryScoreInfo> auxiliary_score_infos = 92;
      string linker_session_id = 93;
      string remote_linker_session_id = 94;
      Data.LinkGameInfo link_game_info = 95;
      Data.Image invite_image = 96;
      string invite_prompt = 97;
      Data.LinkmicJoinChannelData join_channel_data = 98;
      bool switch_to_silence = 99;
      bool is_auto_join = 100;
      uint64 game_barrage_linker_id = 101;
      string game_barrage_linker_finish_reason = 102;
      Data.ChorusCDNInfo chorus_cdn_info = 103;
      uint64 battle_id = 104;
      string invite_subtitle = 105;
      int32 push_rtc_type = 106;
      string lynx_data = 107;
      string open_id = 5000;
      string invite_open_id = 5001;
      string to_open_id = 5002;
      string from_open_id = 5003;
      string rival_anchor_open_id = 5004;

      message UserScores {
        uint64 score = 1;
        uint64 user_id = 2;
        uint64 weekly_rank = 3;
        string score_relative_text = 4;
        bool is_large_pk_score = 5;
        bool room_like_trigger = 6;
        string score_blur_text = 7;
        uint64 battle_rank = 8;
        bool new_score_open = 9;
        string multi_pk_team_score_text = 10;
        uint64 multi_pk_team_score = 11;
        uint64 multi_pk_team_rank = 12;
        bool is_multi_pk_relative_text = 13;
        string cur_add_score_text = 14;
        uint64 buff_score_ratio = 15;
        uint64 contribute_count = 16;
        uint64 score_version = 17;
        string open_id = 5000;
      }

      message Contributor {
        uint64 score = 1;
        uint64 rank = 2;
        uint64 user_id = 3;
        Data.User user = 4;
      }

      message ContributorList {
        repeated Contributor contributor_list = 1;
      }

      message InvitorInfo {
        string invitor_nick_name = 1;
        Data.Image invitor_avatar = 2;
      }
    }

    message LinkMicOChannelKickOutMsg {
      Common common = 1;
      uint64 kick_out_uid = 2;
      string toast_msg = 3;
      string kick_out_open_id = 5000;
    }

    message LinkMicOChannelNotifyMsg {
      Common common = 1;
      int32 type = 2;
      string toast_msg = 3;
    }

    message LinkmicOrderSingListMessage {
      Common common = 1;
      LinkmicOrderSingListContent order_sing_list_content = 2;
    }

    message LinkmicOrderSingListContent {
      repeated OrderSingItemByPosition user_list = 1;
    }

    message OrderSingItemByPosition {
      repeated string order_sing_item_str_list = 1;
      uint64 wait_for_start_item_num = 2;
      Data.User order_user = 3;
    }

    message LinkmicOrderSingMessage {
      Common common = 1;
      uint64 message_type = 2;
      LinkmicOrderSingCreateContent order_sing_create_content = 3;
      LinkmicOrderSingFinishContent order_sing_finish_content = 4;
      LinkmicOrderSingActionToastContent order_sing_action_toast_content = 5;
      LinkmicOrderSingActionContent order_sing_action_content = 6;
      LinkmicOrderSingMVActionContent order_sing_mv_action_content = 7;
    }

    message LinkmicOrderSingCreateContent {
      string open_order_sing_toast = 1;
      uint64 gift_id = 2;
      bool auto_enlarge = 3;
      repeated uint64 gift_ids = 4;
      repeated uint64 audition_gift_ids = 5;
      bool show_gift_info = 6;
      bool ai_lyrics = 7;
      int32 mode = 8;
      bool autio_play_mv = 9;
      bool multi_avatar_mode = 10;
    }

    message LinkmicOrderSingFinishContent {
      string close_order_sing_toast = 1;
      bool auto_enlarge = 2;
    }

    message LinkmicOrderSingActionToastContent {
      string start_sing_toast = 1;
      string finish_sing_toast = 2;
      string oder_sing_toast = 3;
      string order_sing_action_toast = 4;
    }

    message LinkmicOrderSingActionContent {
      string order_sing_item_id = 1;
      int32 order_sing_item_action = 2;
      Data.User order_user = 3;
      uint64 timestamp = 4;
      Data.CurrentOrderSingItemV2 current_order_sing_item = 5;
      Data.Image order_sing_gift_icon = 6;
      Data.Image audition_gift_icon = 7;
    }

    message LinkmicOrderSingMVActionContent {
      int32 mv_op = 1;
      Data.OrderSingMVInfo mv_info = 2;
      string op_toast = 3;
      string item_id = 4;
      uint64 singer_id = 5;
      string op_source = 6;
      string singer_open_id = 5000;
    }

    message LinkmicOrderSingScoreMessage {
      Common common = 1;
      LinkmicOrderSingScoreContent order_sing_score_content = 2;
    }

    message LinkmicOrderSingScoreContent {
      OrderSingUserScore user_score = 1;
    }

    message OrderSingUserScore {
      uint64 user_id = 1;
      uint64 silver_microphone_num = 2;
      uint64 golden_microphone_num = 3;
      int32 current_task_microphone_type = 4;
      uint64 current_score = 5;
      uint64 need_score_to_next = 6;
      int32 order_sing_stage = 7;
      uint64 current_round_mic_count = 8;
      Data.User title_sponsor = 9;
      bool hit_toast = 10;
      string golden_microphone_num_str = 11;
      string golden_microphone_num_fuzzy = 12;
      string open_id = 5000;
    }

    message LinkMicPositionMessage {
      Common common = 1;
      int32 message_type = 2;
      LinkMicPositionListChangeContent list_change_content = 3;
      LinkMicPositionVerifyContent verify_content = 4;
    }

    message LinkMicPositionListChangeContent {
      repeated Data.LinkmicPositionItem positions = 1;
    }

    message LinkMicPositionVerifyItem {
      uint64 position = 1;
      string position_name = 2;
      int32 verify_status = 3;
      int32 position_type = 4;
    }

    message LinkMicPositionVerifyContent {
      uint64 current_verify_position = 1;
      repeated LinkMicPositionVerifyItem verify_position_items = 2;
      repeated Data.LinkmicPositionItem final_position_items = 3;
    }

    message LinkMicSendEmojiMessage {
      Common common = 1;
      Data.User from_user = 2;
      Data.LinkmicAudienceEmoji emoji = 3;
      Data.Image emoji_image_result = 4;
      Data.User to_user = 5;
      string source = 6;
      PublicAreaCommon public_area_common = 7;
    }

    message LinkSettingNotifyMessage {
      Common common = 1;
      repeated Data.LinkmicSetting settings = 2;
      PaiedOrTimeLimitChangeContent paied_or_time_limit_change_content = 10;
    }

    message PaiedOrTimeLimitChangeContent {
      bool need_leave = 1;
      string toast = 2;
    }

    message LinkMicSignalingMethod {
      Common common = 1;
      string content = 2;
    }

    message LinkMicAdventureScoreMessage {
      Common common = 1;
      repeated Data.AdventurePairInfo pair_list = 2;
    }

    message LinkMicAdventureMessage {
      Common common = 1;
      int32 msg_type = 2;
      LinkMicAdventureStartContent start_content = 100;
      LinkMicAdventureFinishContent finish_content = 101;
      LinkMicAdventureInviteContent invite_content = 102;
      LinkMicAdventureReplyContent reply_content = 103;
      LinkMicAdventureCardContent card_content = 105;
      LinkMicAdventureCallInviteContent call_invite_content = 106;
      LinkMicAdventureCallReplyContent call_reply_content = 107;
      LinkMicAdventurePlayModeInfoChangeContent play_mode_info_change = 108;
      LinkMicAdventurePairInfoChangeContent pair_info_change = 109;
      LinkMicAdventurePairFinishContent pair_finish_content = 110;
      LinkMicAdventureCallCancelContent call_cancel_content = 111;
    }

    message LinkMicAdventurePairFinishContent {
      Data.AdventurePairInfo pair_info = 1;
      string toast = 2;
      int32 finish_reason = 3;
    }

    message LinkMicAdventurePairInfoChangeContent {
      Data.AdventurePairInfo pair_info = 1;
    }

    message LinkMicAdventurePlayModeInfoChangeContent {
      Data.AdventurePlayModeInfo play_mode_info = 1;
    }

    message LinkMicAdventureCallReplyContent {
      uint64 to_user_id = 1;
      int32 status = 2;
      Data.AdventurePairInfo pair_info = 3;
      uint64 next_call_time = 4;
      string inviter_rtc_ext_info = 5;
      string inviter_live_core_info = 6;
    }

    message LinkMicAdventureCallInviteContent {
      uint64 to_user_id = 1;
      uint64 invite_timeout_duration_s = 2;
      uint64 inviter_id = 3;
      string to_open_id = 5000;
      string inviter_open_id = 5001;
    }

    message LinkMicAdventureCardContent {
      Data.AdventureUserInfo from_user = 1;
      Data.AdventureUserInfo to_user = 2;
      repeated Data.AdventureCardInfo card_list = 3;
    }

    message LinkMicAdventureReplyContent {
      uint64 to_user_id = 1;
      int32 status = 2;
      Data.AdventurePairInfo pair_info = 3;
      string invite_source = 4;
      string to_open_id = 5000;
    }

    message LinkMicAdventureInviteContent {
      uint64 to_user_id = 1;
      string to_open_id = 5000;
    }

    message LinkMicAdventureStartContent {
      Data.AdventurePlayModeInfo play_mode_info = 2;
    }

    message LinkMicAdventureFinishContent {
      uint64 duration = 1;
      uint64 pair_count = 2;
      uint64 audience_join = 3;
      Data.AdventurePlayModeInfo play_mode_info = 4;
      uint64 operator_id = 5;
      string operator_open_id = 5000;
    }

    message LinkMicAdventureCallCancelContent {
      uint64 invitee_user_id = 1;
      uint64 pair_id = 2;
      string pair_id_str = 4;
      string invitee_open_id = 5000;
    }

    message LinkMicAudienceKtvMessage {
      Common common = 1;
      uint64 message_type = 2;
      repeated ListInfo list_info = 3;
      uint64 want_sing_count = 4;
      uint64 want_sing_song_threshold = 5;
      uint64 sung_song_count = 6;
      bool is_downgrade = 7;
      repeated SongUniqueInfo all_song_unique_list = 8;

      message SongUniqueInfo {
        uint64 song_id = 1;
        uint64 user_id = 2;
        uint64 song_type = 3;
        bool is_public = 4;
        uint64 k_song_uid = 5;
        string open_id = 5000;
      }

      message ListInfo {
        Data.KtvSongStruct music = 1;
        bool is_self_seeing = 2;
      }
    }

    message LinkmicChatMatchMessage {
      Common common = 1;
      int32 msg_type = 2;
      LinkmicChatMatchUserJoinContent chat_match_user_join_content = 21;
      LinkmicChatMatchUserLeaveContent chat_match_user_leave_content = 22;
      LinkmicChatMatchFinishGroupContent chat_match_finish_group_content = 23;
      LinkmicChatMatchResultContent chat_match_result_content = 24;
      LinkmicChatMatchStartCountDownContent chat_match_start_count_down_content = 25;
    }

    message LinkmicChatMatchUserJoinContent {
      Data.ChatMatchGroupInfo group_info = 1;
    }

    message LinkmicChatMatchUserLeaveContent {
      Data.ChatMatchGroupInfo group_info = 1;
      string user_id = 2;
      string device_id = 3;
      string user_open_id = 5000;
    }

    message LinkmicChatMatchFinishGroupContent {
      string join_room_id = 1;
    }

    message LinkmicChatMatchResultContent {
      Data.ChatMatchGroupInfo group_info = 1;
    }

    message LinkmicChatMatchStartCountDownContent {
      uint64 disband_time = 1;
    }

    message LinkmicEcologyMessage {
      Common common = 1;
      int32 msg_type = 2;
      LiveMatrixEntranceChangeContent live_matrix_entrance_change_content = 3;
      LinkmicWebAntiCheatContent web_anti_cheat_content = 4;
      XplayInitContent xplay_init_content = 5;
      HamletAvatarStartContent HamletAvatarStartContent = 6;
      NotifyMultiAvatarPublicStream notify_multi_avatar_publick_stream = 7;
    }

    message NotifyMultiAvatarPublicStream {
      uint64 status = 1;
      string prompt = 2;
      string rtc_room_id = 3;
      string rtc_user_id = 4;
      string rtc_app_id = 5;
      string mix_stream_task_id = 6;
      string public_stream_id = 7;
    }

    message LiveMatrixEntranceChangeContent {
      uint64 room_id = 1;
      uint64 matrix_id = 2;
      string name = 3;
      bool show = 4;
    }

    message LinkmicWebAntiCheatContent {
      string auth_ticket = 1;
      string entry_web_page_address = 2;
      string popup_text = 3;
      uint64 web_page_display_duration = 4;
      int32 face_verify_type = 5;
      bool authorization = 6;
      string request_source = 7;
      string did = 8;
    }

    message LinkmicEnlargeGuestMessage {
      Common common = 1;
      int32 msg_type = 2;
      repeated int32 play_modes = 3;
      LinkmicEnlargeGuestTurnOnContent turn_on_content = 21;
      LinkmicEnlargeGuestTurnOffContent turn_off_content = 22;
      LinkmicEnlargeGuestChangeUserContent change_user_content = 23;
    }

    message LinkmicEnlargeGuestTurnOnContent {
      uint64 enlarged_user_id = 1;
      int32 source = 2;
      Data.EnlargeGuestInfo info = 3;
      string enlarged_openid = 5000;
    }

    message LinkmicEnlargeGuestTurnOffContent {
      int32 source = 1;
    }

    message LinkmicEnlargeGuestChangeUserContent {
      uint64 enlarged_user_id = 1;
      Data.EnlargeGuestInfo info = 2;
      string enlarged_openid = 5000;
    }

    message LinkmicPlaymodeMessage {
      Common common = 1;
      Data.LinkmicSubtitleStatus linkmic_subtitle_status = 2;
      LinkmicStarWishWrdsMessage linkmic_starwish_info = 3;
    }

    message LinkmicProfitEggMessage {
      Common common = 1;
      int32 msg_type = 2;
      Data.LinkmicProfitRoomEggInfo egg_info = 3;
      LinkmicProfitEggContributeContent contribute_content = 4;
    }

    message LinkmicProfitEggContributeContent {
      uint64 score = 1;
      string egg_id = 2;
      string team_id = 3;
    }

    message LinkmicProfitMessage {
      Common common = 1;
      int32 msg_type = 2;
      LinkmicProfitBidPaidLinkmicBidContent bid_paid_linkmic_bid_content = 21;
      LinkmicProfitBidPaidLinkmicDealContent bid_paid_linkmic_deal_content = 22;
      LinkmicProfitBidPaidLinkmicAbortContent bid_paid_linkmic_abort_content = 23;
      LinkmicProfitBidPaidLinkmicStartContent bid_paid_linkmic_start_content = 24;
      LinkmicProfitBidPaidLinkmicTerminateContent bid_paid_linkmic_terminate_content = 25;
      LinkmicProfitNormalPaidLinkmicOpenContent normal_paid_linkmic_open_content = 26;
      LinkmicProfitNormalPaidLinkmicCloseContent normal_paid_linkmic_close_content = 27;
      LinkmicProfitNormalPaidLinkmicConfigUpdateContent normal_paid_linkmic_config_update_content = 28;
      LinkmicProfitBidPaidLinkmicTurnOnContent bid_paid_linkmic_turn_on_content = 29;
      LinkmicProfitBidPaidLinkmicTurnOffContent bid_paid_linkmic_turn_off_content = 30;
      LinkmicRoomBattleInviteContent room_battle_invite_content = 31;
      LinkmicRoomBattleReplyContent room_battle_reply_content = 32;
      LinkmicProfitNormalPaidLinkmicAddPriceContent normal_paid_linkmic_add_price_content = 33;
      LinkmicProfitInteractiveScreenCastOpenContent interactive_screen_cast_open_content = 34;
      LinkmicProfitInteractiveScreenCastCloseContent interactive_screen_cast_close_content = 35;
      LinkmicRoomBattleMatchSuccessContent room_battle_match_success_content = 36;
      LinkmicGiftRecipientContent gift_recipient_content = 37;
      LinkmicProfitAudioSubtitleCheckInContent audio_subtitle_check_in_content = 38;
      LinkmicProfitAudioSubtitleStartContent audio_subtitle_start_content = 39;
      LinkmicProfitAudioSubtitleCloseContent audio_subtitle_close_content = 40;
      LinkmicGameBarrageStartContent game_barrage_start_conetent = 41;
      LinkmicGameBarrageStopContent game_barrage_stop_conetent = 42;
      LinkmicGameBarrageRtcRoomCreateContent game_barrage_rtc_room_create_conetent = 43;
    }

    message LinkmicProfitBidPaidLinkmicBidContent {
      Data.BidPaidLinkmicBidInfo bid_info = 1;
      repeated Data.BidPaidLinkmicBidRecord bid_records = 2;
      bool has_more = 3;
    }

    message LinkmicProfitBidPaidLinkmicDealContent {
      Data.BidPaidLinkmicDealInfo deal_info = 1;
      repeated Data.LinkmicPositionItem positions = 2;
    }

    message LinkmicProfitBidPaidLinkmicStartContent {
      string start_toast = 1;
      repeated Data.LinkmicPositionItem positions = 2;
      bool waiting_user_need_leave = 3;
      string waiting_user_toast = 4;
    }

    message LinkmicProfitBidPaidLinkmicAbortContent {
      uint64 win_user_id = 1;
      string anchor_toast = 2;
      string win_user_toast = 3;
      string other_bid_users_toast = 4;
      string win_open_id = 5000;
    }

    message LinkmicProfitBidPaidLinkmicTerminateContent {
      string bid_user_toast = 1;
      string other_bid_users_toast = 2;
    }

    message LinkmicProfitNormalPaidLinkmicOpenContent {
      Data.NormalPaidLinkmicInfo normal_paid_linkmic_info = 1;
      bool waiting_user_need_leave = 2;
      string waiting_user_toast = 3;
      int32 source = 4;
    }

    message LinkmicProfitNormalPaidLinkmicCloseContent {
      bool waiting_user_need_leave = 1;
      string waiting_user_toast = 2;
    }

    message LinkmicProfitNormalPaidLinkmicConfigUpdateContent {
      bool waiting_user_need_leave = 1;
      string waiting_user_toast = 2;
      Data.NormalPaidLinkmicInfo normal_paid_linkmic_info = 3;
    }

    message LinkmicProfitNormalPaidLinkmicAddPriceContent {
      uint64 add_price_user_id = 1;
      uint64 add_price_value = 2;
      Data.Text text = 3;
      string add_price_open_id = 5000;
    }

    message LinkmicProfitBidPaidLinkmicTurnOnContent {
      Data.BidPaidLinkmicContent bid_paid_linkmic_info = 1;
      string prompts = 2;
      bool waiting_user_need_leave = 3;
      string waiting_user_toast = 4;
    }

    message LinkmicProfitBidPaidLinkmicTurnOffContent {
      string prompts = 1;
    }

    message LinkmicRoomBattleInviteContent {
      Data.User inviter = 1;
      Data.InviteRoomInfo room_info = 2;
      int32 start_type = 3;
      string invite_tips = 4;
      Data.RoomBattleMode room_battle_mode = 5;
      string introduction_content = 6;
    }

    message LinkmicRoomBattleReplyContent {
      int32 reply_type = 1;
      int32 start_type = 2;
      uint64 invitee_room_id = 3;
      uint64 invitee_anchor_id = 4;
      uint64 follow_status = 5;
      uint64 reply_user_id = 6;
      string reply_toast = 7;
      int32 reply_operate = 8;
      string invitee_open_id = 5000;
      string reply_open_id = 5001;
    }

    message LinkmicProfitInteractiveScreenCastOpenContent {
      Data.InteractiveScreenCastInfo screen_cast_info = 1;
      string rtc_ext_info = 2;
      string live_core_ext_info = 3;
    }

    message LinkmicProfitInteractiveScreenCastCloseContent {
      Data.InteractiveScreenCastInfo screen_cast_info = 1;
      string rtc_ext_info = 2;
      string live_core_ext_info = 3;
    }

    message LinkmicRoomBattleMatchSuccessContent {
      int32 match_type = 1;
      Data.RoomBattleProcessInfo process_info = 2;
      uint64 rival_anchor_id = 3;
      uint64 rival_user_count = 4;
      uint64 rival_chat_room_rank = 5;
      uint64 rival_follow_status = 6;
      uint64 invite_source = 7;
      uint64 operator_user_id = 8;
      string rival_open_id = 5000;
      string operator_open_id = 5001;
    }

    message LinkmicGiftRecipientContent {
      uint64 gift_recipient_user_id = 1;
      int32 reason = 2;
      map<string, string> extra = 3;
      string gift_recipient_open_id = 5000;
    }

    message LinkmicProfitAudioSubtitleCheckInContent {
      uint64 version_id = 1;
    }

    message LinkmicProfitAudioSubtitleStartContent {
      uint64 version_id = 1;
      Data.LinkmicSubtitleStatus linkmic_subtitle_status = 2;
    }

    message LinkmicProfitAudioSubtitleCloseContent {
      uint64 version_id = 1;
    }

    message LinkmicGameBarrageStartContent {
      Data.LinkmicGameInfo game_info = 1;
      string audience_toast = 2;
      repeated uint64 kick_out_user_ids = 3;
      uint64 target_ui_layout = 4;
      repeated string kick_out_user_open_ids = 5000;
    }

    message LinkmicGameBarrageStopContent {
      Data.LinkmicGameInfo game_info = 1;
    }

    message LinkmicGameBarrageRtcRoomCreateContent {
      Data.LinkmicGameInfo game_info = 1;
      string cd_game_public_stream_id = 2;
    }

    message LinkmicReviewMessage {
      Common common = 1;
      int32 msg_type = 2;
      LinkmicReviewNormalPaidDescContent normal_paid_desc_content = 21;
    }

    message LinkmicReviewNormalPaidDescContent {
      int32 status = 1;
      string toast = 2;
    }

    message SelfDisciplinePunchMessage {
      Common common = 1;
      int32 msg_type = 2;
      uint64 to_user_id = 3;
      uint64 start_time = 4;
      uint64 punch_duration = 5;
      string toast_text = 6;
      int32 punch_status = 7;
    }

    message LinkmicSelfDisciplineMessage {
      Common common = 1;
      int32 msg_type = 2;
      LinkmicSelfDisciplineConfigContent config_content = 21;
      LinkmicSelfDisciplineLikeContent like_content = 22;
    }

    message LinkmicSelfDisciplineConfigContent {
      int32 switch_status = 1;
      string current_target = 2;
      string target_icon_uri = 3;
      string text = 4;
      uint64 punch_duration = 5;
      string toast = 6;
    }

    message LinkmicSelfDisciplineLikeContent {
      uint64 from_user_id = 1;
      uint64 to_user_id = 2;
      int32 source = 3;
      string from_open_id = 5000;
      string to_open_id = 5001;
    }

    message LinkmicStarWishMessage {
      Common common = 1;
      int32 msg_type = 2;
      LinkmicStarWishOpenContent open_content = 100;
      LinkmicStarWishCloseContent close_content = 101;
      LinkmicStarWishUpdateContent update_content = 102;
      LinkmicStarWishGiftItemChangedContent gift_item_changed_content = 103;
    }

    message LinkmicStarWishOpenContent {
      Data.LinkmicStarWishInfo starwish_info = 1;
    }

    message LinkmicStarWishCloseContent {

    }

    message LinkmicStarWishUpdateContent {
      Data.LinkmicStarWishInfo starwish_info = 1;
      Data.StarwishStageToast stage_toast = 2;
    }

    message LinkmicTeamfightScoreMessage {
      Common common = 1;
      Data.LinkmicTeamfightInfo teamfight_info = 2;
      Data.LinkmicQuickInteract quick_interact = 3;
    }

    message LinkmicTeamfightMessage {
      Common common = 1;
      int32 msg_type = 2;
      Data.LinkmicTeamfightInfo teamfight_info = 3;
      LinkmicTeamfightFinishContent finish_content = 100;
      LinkmicTeamfightCreateContent create_content = 101;
      LinkmicTeamfightSettleContent settle_content = 102;
    }

    message LinkmicTeamfightFinishContent {
      string finish_toast = 1;
      string guest_finish_toast = 2;
      int32 reason = 3;
      uint64 finish_room_id = 4;
      uint64 finish_user_id = 5;
    }

    message LinkmicTeamfightCreateContent {
      int32 reason = 3;
    }

    message LinkmicTeamfightSettleContent {
      string disable_show_toast = 1;
    }

    message LinkmicThemedCompetitionMessage {
      Common common = 1;
      int32 msg_type = 2;
      LinkmicThemedCompetitionStartContent start_content = 100;
      LinkmicThemedCompetitionCloseContent close_content = 101;
      LinkmicThemedCompetitionScoreChangeContent score_change_content = 102;
      LinkmicThemedCompetitionOnceMoreContent once_more_content = 103;
      LinkmicThemedCompetitionShowTimeStartContent show_time_start_content = 104;
      LinkmicThemedCompetitionShowTimeFinishContent show_time_finish_content = 105;
      LinkmicThemedCompetitionBannerMessageForPC banner_message_for_pc = 106;
      LinkmicThemedCompetitionToastMessageForPC toast_message_for_pc = 107;
    }

    message LinkmicThemedCompetitionStartContent {
      Data.ThemedCompetitionInfo info = 1;
    }

    message LinkmicThemedCompetitionOnceMoreContent {
      Data.ThemedCompetitionInfo info = 1;
      uint64 old_competition_id = 2;
    }

    message LinkmicThemedCompetitionCloseContent {
      uint64 competition_id = 1;
    }

    message LinkmicThemedCompetitionScoreChangeContent {
      Data.ThemedCompetitionInfo info = 1;
      uint64 score_change_user_id = 2;
      Data.LinkmicQuickInteract quick_interact = 3;
      WinContent new_advance_user = 4;
      string score_change_open_id = 5000;

      message WinContent {
        uint64 rank = 1;
        uint64 user_id = 2;
        int32 win_type = 3;
        string open_id = 5000;
      }
    }

    message LinkmicThemedCompetitionShowTimeStartContent {
      uint64 competition_id = 1;
      Data.ThemedCompetitionInfo info = 2;
    }

    message LinkmicThemedCompetitionShowTimeFinishContent {
      uint64 competition_id = 1;
    }

    message LinkmicThemedCompetitionBannerMessageForPC {
      BannerContent content = 1;
      int32 refresh_type = 2;

      message Content {
        uint64 rank = 1;
        string nickname = 2;
        uint64 delta_score = 3;
        int32 win_type = 4;
      }

      message BannerContent {
        string title = 1;
        Data.User current_performer = 2;
        uint64 rank = 3;
        uint64 total_performer_count = 4;
        int32 status = 5;
        repeated Content rotate_content = 6;
        uint64 version = 7;
      }
    }

    message LinkmicThemedCompetitionToastMessageForPC {
      string toast = 1;
    }

    message LiveBindMicroAppMessage {
      Common common = 1;
      uint64 room_id = 2;
      bool can_bind = 3;
    }

    message TraceTimeMetricV2 {
      uint64 op_timestamp = 1;
      uint64 producer_duration = 2;
      uint64 consumer_duration = 3;
      uint64 msg_send_timestamp = 4;
    }

    message LiveEcomGeneralMessage {
      Common common = 1;
      string content_type = 2;
      string content_format = 3;
      uint64 logic_clock = 4;
      TraceTimeMetricV2 trace_time_metric = 5;
      bytes data = 6;
      uint64 target_room_id = 50;
    }

    message CouponActivityInfoMessage {
      uint64 activity_type = 1;
      string before_text = 2;
      string before_button = 3;
      string after_text = 4;
      string after_button = 5;
    }

    message CouponMetaInfoMessage {
      string coupon_meta_id = 1;
      string start_time = 2;
      string expire_time = 3;
      uint64 period_type = 4;
      uint64 valid_period = 5;
      string start_apply_time = 6;
      string end_apply_time = 7;
      string coupon_name = 8;
      string url = 9;
      uint64 threshold = 10;
      uint64 credit = 11;
      uint64 max_apply_times = 12;
      uint64 type = 13;
      string type_detail = 14;
      double discount = 15;
      string shop_id = 16;
      uint64 pay_type = 17;
      uint64 max_discount_limit = 18;
      string shop_name = 19;
      string type_string = 20;
      string what_coupon = 21;
      string coupon_string = 22;
      uint64 channel_id = 23;
      uint64 left_amount = 24;
      uint64 has_applied = 25;
      uint64 status = 26;
      string shop_logo = 27;
      uint64 is_show = 28;
      uint64 total_amount = 29;
      int32 live_coupon_status = 30;
      int32 coupon_source = 31;
      uint64 user_apply_times = 32;
      bool can_continue_apply = 33;
      bool coupon_status = 34;
      bool coupon_reset = 35;
      uint64 start_time_timestamp = 36;
      uint64 expire_time_timestamp = 37;
      string avatar = 38;
      uint64 kol_uid = 39;
      repeated uint64 product_ids = 40;
      uint64 platform_sub_type = 41;
      bool has_available_goods = 42;
      string type_title = 43;
      uint64 kol_user_tag = 45;
      string type_icon = 46;
      uint64 type_icon_width = 47;
      uint64 type_icon_height = 48;
      string coupon_category = 49;
      string extra_data = 50;
    }

    message LiveEcomMessage {
      Common common = 1;
      int32 msg_type = 2;
      string nick_name = 3;
      uint64 purchase_cnt = 4;
      string text = 5;
      string icon = 6;
      uint64 meta_id = 7;
      uint64 server_time = 8;
      uint64 countdown = 9;
      string activity_json_str = 10;
      int32 coupon_type = 11;
      CouponActivityInfoMessage activity_info = 12;
      CouponMetaInfoMessage coupon_meta = 13;
      string meta_id_str = 14;
    }

    message LiveMateDemoteMessage {
      Common common = 1;
      bool re_push = 2;
    }

    message ProductChangeMessage {
      Common common = 1;
      uint64 update_timestamp = 2;
      string update_toast = 3;
      repeated ProductInfo update_product_info = 4;
      uint64 total = 5;
      repeated uint64 target_uid = 6;
      repeated string sec_target_uid = 7;
      repeated CategoryInfo update_category_info = 8;
      repeated string target_open_ids = 5000;
    }

    message ProductInfo {
      uint64 promotion_id = 1;
      int32 index = 2;
      repeated uint64 target_flash_uids = 3;
      uint64 explain_type = 4;
      repeated string target_flash_open_ids = 5000;
    }

    message CategoryInfo {
      int32 id = 1;
      string name = 2;
      repeated string promotion_ids = 3;
      string type = 4;
      string unique_index = 5;
    }

    message UpdatedProductInfo {
      uint64 price = 1;
      string title = 2;
      string cover = 3;
      uint64 status = 4;
      string pop_upicon = 5;
    }

    message UpdatedCouponInfo {
      string tag = 1;
      string coupon_url = 2;
      string coupon_applet = 3;
      bool is_valid = 4;
      string coupon_meta_id = 5;
    }

    message UpdatedCampaignInfo {
      bool is_valid = 1;
      string label = 2;
      string price = 3;
      string pic = 4;
      string start_time = 5;
      string end_time = 6;
      string time_start_label = 7;
      string time_end_label = 8;
      string user_limit = 9;
      string is_preheat = 10;
      string campaign_id = 11;
    }

    message SkuInfo {
      string sku_id = 1;
      uint64 stock_num = 2;
      uint64 price = 3;
      uint64 coupon_price = 4;
    }

    message TraceTimeMetric {
      uint64 op_timestamp = 1;
      uint64 producer_duration = 2;
      uint64 consumer_duration = 3;
      uint64 msg_send_timestamp = 4;
    }

    message UpdatedSkuInfo {
      uint64 min_price = 2;
      uint64 max_price = 3;
      uint64 unuse_min_price = 4;
      uint64 coupon_price = 5;
    }

    message UpdatedCommentaryVideoInfo {
      uint64 action = 1;
    }

    message UpdatedGroupInfo {
      repeated string avatar_list = 1;
      uint64 joined = 2;
      uint64 group_size = 3;
      uint64 persent = 4;
    }

    message UserBid {
      string pic = 1;
      string name = 2;
      uint64 price = 3;
    }

    message Img {
      repeated string url_list = 1;
      int32 height = 2;
      int32 width = 3;
    }

    message CurrentUserInfo {
      Img user_pic = 1;
      string user_name = 2;
      uint64 user_id = 3;
    }

    message IncrPriceList {
      uint64 price = 1;
      uint64 range = 2;
    }

    message AuctionInfo {
      uint64 price = 1;
      string price_label = 2;
      int32 status = 3;
      string jump_url = 4;
      CurrentUserInfo current_user_info = 5;
      repeated IncrPriceList incr_price_lists = 6;
      string button_label = 7;
      uint64 product_id = 8;
      uint64 end_time = 9;
      int32 biz_id = 10;
    }

    message AuctionSuccess {
      string title = 1;
      uint64 product_id = 2;
      string product_name = 3;
      string product_pic = 4;
      uint64 price = 5;
      uint64 charge = 6;
      uint64 freight = 7;
      uint64 total = 8;
      string button_label = 9;
      string jump_url = 10;
      string freight_collect = 11;
      uint64 left_payment_time = 12;
      int32 biz_id = 13;
      string deposit_info = 14;
    }

    message RedpackActivityInfo {
      uint64 redpack_type = 1;
      string redpack_activity_id = 2;
      string redpack_activity_name = 3;
      uint64 start_apply_time = 4;
      uint64 end_apply_time = 5;
      uint64 preheat_time = 6;
      uint64 total_amount = 7;
      string author_avatar_url = 8;
      string author_name = 9;
      string pendant_background_url = 10;
      string redpack_front_background_url = 11;
      string redpack_label = 12;
      string redpack_after_background_url = 13;
      string redpack_after_belt_url = 14;
      uint64 scatter_time = 15;
      uint64 server_time = 16;
      uint64 max_amount = 17;
      uint64 show_type = 18;
      string shorttouch_pendant_background_url = 19;
      string shorttouch_pendant_icon_url = 20;
      string shorttouch_lottie_url = 21;
    }

    message UpdatedCartInfo {
      Data.CartVertical vertical = 1;
      Data.CartHorizontal horizontal = 2;
      Data.GlobalCustomIcons global_custom_icons = 3;
    }

    message LotteryProductShortInfo {
      uint64 product_id = 1;
      string img = 2;
    }

    message LotteryInfo {
      uint64 lottery_type = 1;
      string enter_icon = 2;
      string icon = 3;
      string activity_id = 4;
      uint64 open_time = 5;
      LotteryProductShortInfo product_info = 6;
    }

    message LotteryUnusualInfo {
      string product_name = 1;
      uint64 open_time = 2;
    }

    message WinLotteryAlert {
      string title = 1;
      string content = 2;
      string button_label = 3;
    }

    message WinLotteryInfo {
      string title = 1;
      string name = 2;
      string img = 3;
      string button_label = 4;
      string win_record_id = 5;
      string activity_id = 6;
      bool is_addressed = 7;
      WinLotteryAlert alert = 8;
      bool is_win = 9;
      string jump_url = 10;
      uint64 product_id = 11;
      repeated uint64 activity_price = 12;
      uint64 buy_time = 13;
      uint64 lottery_type = 14;
      string product_id_str = 15;
    }

    message BenefitLabel {
      string LeftText = 1;
      string RightText = 2;
      int32 TextStyle = 3;
      int32 ColorStyle = 4;
      int32 DivLine = 5;
    }

    message LotteryInfoList {
      string activity_id = 1;
      uint64 task_type = 2;
      uint64 open_time = 3;
      uint64 user_activity_status = 4;
      string win_record_id = 5;
      string result_label = 6;
      string button_label = 7;
      repeated string text = 8;
      string jump_url = 9;
      uint64 lottery_type = 10;
      string elastic_title = 11;
      BenefitLabel benefit_label = 12;
    }

    message HotAtmosphere {
      string img = 1;
      string sale_num = 2;
      uint64 type = 3;
      string num = 4;
      string bg_color = 5;
      string border_color = 6;
      uint64 left_margin = 7;
      uint64 ui_type = 8;
      repeated string bg_colors = 9;
      repeated string border_colors = 10;
      string top_img = 11;
    }

    message UpIcon {
      string name = 1;
      string up_icon = 2;
      string up_desc = 3;
      string public_screen_notice = 4;
    }

    message FilterSwitchChangeData {
      bool enable = 1;
      UpIcon up_icon = 2;
    }

    message RoomTagOfflineInfo {
      uint64 tag_type = 1;
      string user_toast = 2;
    }

    message InteractionData {
      bool full = 1;
      repeated InteractionContent contents = 2;
    }

    message InteractionContent {
      InteractionContentCheck check = 1;
      int32 priority = 2;
      int32 loop_count = 3;
      repeated InteractionElement content = 4;
      map<string, string> event_param = 5;
    }

    message InteractionContentCheck {
      uint64 product_id = 1;
      int32 index = 2;
    }

    message InteractionElement {
      int32 element_type = 1;
      string text = 2;
      string text_color = 3;
      InteractionAvatar avatars = 4;
      int32 blank_width = 5;
    }

    message InteractionAvatar {
      repeated string url_list = 1;
      int32 width = 2;
      int32 height = 3;
    }

    message LiveShoppingMessage {
      Common common = 1;
      int32 msg_type = 2;
      uint64 promotion_id = 3;
      repeated uint64 target_uid = 4;
      int32 bubble_type = 5;
      uint64 screenshot_timestamp = 6;
      repeated string sec_target_uid = 7;
      string ecom_notice = 8;
      repeated uint64 updated_product_ids = 9;
      int32 update_type = 10;
      UpdatedProductInfo updated_product_info = 11;
      bool sold_out = 12;
      UpdatedCouponInfo updated_coupon_info = 13;
      UpdatedCampaignInfo updated_campaign_info = 14;
      uint64 update_timestamp = 15;
      string button_label = 16;
      uint64 promotions_num = 17;
      UpdatedSkuInfo update_sku_info = 18;
      UpdatedCommentaryVideoInfo updated_commentary_video_info = 19;
      UpdatedGroupInfo updated_group_info = 20;
      string commerce_authority_change_toast = 21;
      TraceTimeMetric trace_time_metric = 22;
      AuctionSuccess auction_success = 23;
      AuctionInfo auction_info = 24;
      RedpackActivityInfo redpack_activity_info = 25;
      UpdatedCartInfo updated_cart_info = 26;
      LotteryInfo lottery_info = 27;
      WinLotteryInfo win_lotteryinfo = 28;
      LotteryInfoList lottery_info_list = 29;
      HotAtmosphere hot_atmosphere = 30;
      string update_toast = 31;
      bool can_sold = 32;
      uint64 logical_clock = 33;
      RoomTagOfflineInfo room_tag_offline_info = 34;
      FilterSwitchChangeData filter_switch_change_data = 35;
      InteractionData interaction_data = 36;
      repeated string target_open_id = 5000;
    }

    message LiveStreamControlMessage {
      Common common = 1;
      string control_params = 2;
    }

    message LiveplaysHonorMessage {
      Common common = 1;
      HonorInfo honor_info_list = 2;
    }

    message HonorInfo {
      int32 honor_scene = 1;
      int32 honor_type = 2;
      string body = 3;
      int32 duration = 4;
      uint64 play_end_timestamp = 5;
    }

    message HonorUserInfo {
      string uid = 1;
      uint64 rank = 2;
      string user_name = 3;
      string user_icon = 4;
    }

    message ActivityHonorInfo {
      string honor_config_id = 1;
      int32 honor_type = 2;
      int32 honor_level = 3;
      string honor_content = 4;
      string image_url = 5;
      string animation_url = 6;
      repeated HonorUserInfo honor_user_info_list = 7;
      int32 duration = 8;
      uint64 play_end_timestamp = 9;
    }

    message LotteryBurstMessage {
      Common common = 1;
      uint64 burst_time_remain_seconds = 2;
      uint64 multiple = 3;
      uint64 property_definition_id = 4;
      Data.Image property_icon = 5;
    }

    message LotteryMessage {
      Common common = 1;
    }

    message XGLotteryMessage {
      Common common = 1;
      Data.LotteryInfo lottery_info = 2;
    }

    message LotteryEventMessage {
      Common common = 1;
      uint64 lottery_id = 2;
      int32 lottery_status = 3;
      uint64 lottery_start_time = 4;
      uint64 lottery_draw_time = 5;
      uint64 lottery_current_time = 6;
      string rule_page_scheme = 7;
    }

    message LotteryExpandEventMessage {
      Common common = 1;
      uint64 expand_prize_type = 2;
      string extra = 3;
    }

    message LotteryCondition {
      int32 type = 1;
      string content = 2;
      uint64 need_diamond_count = 3;
      uint64 min_fans_level = 4;
      string remarks = 5;
      string biz_info = 6;
    }

    message LotteryEventNewMessage {
      Common common = 1;
      uint64 lottery_id = 2;
      int32 lottery_status = 3;
      uint64 lottery_start_time = 4;
      uint64 lottery_draw_time = 5;
      uint64 lottery_current_time = 6;
      string rule_page_scheme = 7;
      uint64 prize_type = 8;
      string lottery_audit_failure_reason = 9;
      repeated int32 conditions = 10;
      map<string, string> extra = 11;
      bool use_new_draw_interaction = 12;
      uint64 prize_count = 13;
      uint64 lucky_count = 14;
      string client_biz_data = 15;
      string server_biz_data = 16;
      string ui_config = 17;
      string award_name = 18;
      string award_description = 19;
      uint64 max_random_delay_duration_by_ms = 20;
      repeated LotteryCondition conditions_detail = 21;
      string extra_award_client_biz_data = 22;
      string extra_award_server_biz_data = 23;
      string extra_award_ui_config = 24;
    }

    message LotteryCandidateEventMessage {
      Common common = 1;
      uint64 lottery_id = 2;
      uint64 user_id = 3;
      bool participate_success = 4;
      uint64 version = 5;
      string user_openid = 5000;
    }

    message LotteryDrawResultEventMessage {
      Common common = 1;
      uint64 lottery_id = 2;
      repeated uint64 user_ids = 3;
      string extra = 4;
      repeated string user_openids = 5000;
    }

    message LuckyBoxTempStatusMessage {
      Common common = 1;
    }

    message LuckyBoxMessage {
      Common common = 1;
      uint64 diamond_count = 2;
      uint64 box_id = 3;
      uint64 send_time = 4;
      uint64 delay_time = 5;
      uint64 box_type = 6;
      string title = 7;
      bool large = 8;
      Data.Image background = 9;
      bool is_official = 10;
      uint64 priority = 11;
      Data.User user = 12;
      repeated ImgText description_list = 13;
      Data.Image lucky_icon = 14;
      uint64 display_duration = 15;
      int32 box_status = 16;
      int32 flat_duration = 17;
      int32 unpack_type = 18;
      BoxMeta meta = 19;
      Extra extra = 20;
      uint64 business_type = 21;
      Data.Image top_cover_image = 22;
      Data.Image bottom_cover_image = 23;
      string box_id_str = 24;
      BottomCommentMsg bottom_comment_msg = 25;
      bool is_risky_owner = 26;
      string activity_id = 27;
      Dress dress = 28;
      PublicAreaCommon public_area_common = 29;
      uint64 join_frozen_duration = 30;
      string biz_extra = 31;

      message ImgText {
        Data.Image image = 1;
        string text = 2;
      }

      message BoxMeta {
        string title_desc = 1;
        string content_count_desc = 2;
        string content_amount_desc = 3;
        string animation_desc = 4;
        string before_unpack_desc = 5;
        string success_unpack_desc = 6;
        string fail_unpack_desc = 7;
        Data.Image ad_image = 8;
        string im_desc = 9;
      }

      message Extra {
        map<string, string> all_desc = 1;
        map<string, Data.Image> all_image = 2;
        int32 current_round = 3;
        int32 pct = 4;
        repeated uint64 round_target = 5;
      }

      message BottomCommentMsg {
        Data.Text text = 1;
        Data.Image background = 2;
        Data.Image left_icon = 3;
        Data.Image right_icon = 4;
      }

      message Dress {
        string dress_id = 1;
        uint64 dress_offline_time = 2;
        string jump_text = 3;
        map<int64, string> jump_schema_to_box = 4;
        map<int64, string> jump_schema_to_dress = 5;
      }

    }

    message LuckyBoxEndMessage {
      Common common = 1;
      uint64 box_id = 2;
      string box_id_str = 3;
    }

    message LuckyBoxRewardMessage {
      Common common = 1;
      uint64 box_id = 2;
      string box_id_str = 3;
      repeated string rewarded_user_id = 4;
      repeated string rewarded_detail = 5;
      uint64 reward_message_type = 6;
      string related_item_id = 7;
      repeated string rewarded_user_openid = 5000;
    }

    message LuckyMoneyMessage {
      Common common = 1;
      Data.User user = 2;
      uint64 luckymoney_id = 3;
      uint64 diamond_count = 4;
    }

    message MagicBoxMessage {
      Common common = 1;
      uint64 diamond_count = 2;
      uint64 magic_box_id = 3;
      uint64 send_time = 4;
      uint64 delay_time = 5;
      uint64 box_type = 6;
      string title = 7;
      bool large = 8;
      Data.Image background = 9;
      bool is_official = 10;
      uint64 priority = 11;
      Data.User user = 12;
      repeated ImgText description_list = 13;

      message ImgText {
        Data.Image image = 1;
        string text = 2;
      }
    }

    message MediaLiveReplayVidMessage {
      Common common = 1;
      string vid = 2;
    }

    message MemberMessage {
      Common common = 1;
      Data.User user = 2;
      uint64 member_count = 3;
      Data.User operator = 4;
      bool is_set_to_admin = 5;
      bool is_top_user = 6;
      uint64 rank_score = 7;
      uint64 top_user_no = 8;
      uint64 enter_type = 9;
      uint64 action = 10;
      string action_description = 11;
      uint64 user_id = 12;
      EffectConfig effect_config = 13;
      string pop_str = 14;
      EffectConfig enter_effect_config = 15;
      Data.Image background_image = 16;
      Data.Image background_image_v2 = 17;
      Data.Text anchor_display_text = 18;
      PublicAreaCommon public_area_common = 19;
      uint64 user_enter_tip_type = 20;
      uint64 anchor_enter_tip_type = 21;
      map<string, string> buried_point = 22;
      map<string, EffectConfig> alternative_effect_config = 23;
      PicoEffectConfig pico_enter_effect_config = 24;

      message EffectConfig {
        uint64 type = 1;
        Data.Image icon = 2;
        uint64 avatar_pos = 3;
        Data.Text text = 4;
        Data.Image text_icon = 5;
        int32 stay_time = 6;
        uint64 anim_asset_id = 7;
        Data.Image badge = 8;
        repeated uint64 flex_setting_array = 9;
        Data.Image text_icon_overlay = 10;
        Data.Image animated_badge = 11;
        bool has_sweep_light = 12;
        repeated uint64 text_flex_setting_array = 13;
        uint64 center_anim_asset_id = 14;
        Data.Image dynamic_image = 15;
        map<string, string> extra = 16;
        uint64 mp4_anim_asset_id = 17;
        uint64 priority = 18;
        uint64 max_wait_time = 19;
        string dress_id = 20;
        uint64 alignment = 21;
        uint64 alignment_offset = 22;
        string effect_scene = 23;
        map<string, Data.TextPiece> piece_values = 24;
      }

      message PicoEffectConfig {
        uint64 type = 1;
        Data.Image icon = 2;
        Data.Text text = 3;
        Data.Image text_icon = 4;
        int32 stay_time = 5;
        Data.Image badge = 6;
        uint64 center_anim_asset_id = 7;
        map<string, string> extra = 8;
        string dress_id = 9;
      }
    }

    message NabobImNoticeMessage {
      Common common = 1;
    }

    message NobleEnterLeaveMessage {
      Common common = 1;
      uint64 noble_count = 2;
    }

    message NobleToastMessage {
      Common common = 1;
      Data.User user = 2;
      Data.Image toast_icon = 3;
    }

    message NobleUpgradeMessage {
      Common common = 1;
      Data.User user = 2;
      string open_url = 3;
      Data.Image background_pop = 4;
      Data.Image background_normal = 5;
      int32 display_style = 6;
      Data.GiftIMPriority priority = 7;
    }

    message NoticeMessage {
      Common common = 1;
      string content = 2;
      uint64 notice_type = 3;
      string style = 4;
      Data.Text title = 5;
      Data.Text violation_reason = 6;
      Data.Text display_text = 7;
      Data.Text tips_title = 8;
      string tips_url = 9;
      Data.Text notice_title = 10;
      Data.Text notice_content = 11;
      uint64 notice_time = 12;
      string limit_notice_key = 13;
      Data.Text button_confirm = 14;
      Data.Text button_cancel = 15;
      string event_name = 16;
      string top_icon_url = 17;
      string decoration_audited_content = 18;
      uint64 punish_time = 19;
      uint64 countdown_time = 20;
      string education_url = 21;
      uint64 education_task_record_id = 22;
      string log_extra = 23;
      uint64 version = 24;
      string popup_window_url = 25;
      string popup_window_extra = 26;
    }

    message NotifyMessage {
      Common common = 1;
      string schema = 2;
      uint64 notify_type = 3;
      string content = 4;
      Data.User user = 5;
      Extra extra = 6;
      uint64 notify_class = 7;
      repeated uint64 flex_setting = 8;
      string biz_scene = 100;

      message Background {
        int32 width = 1;
        int32 height = 2;
        repeated string url_list = 3;
        string uri = 4;
      }

      message Content {
        string content = 1;
        bool need_high_light = 2;
      }

      message ContentList {
        Content contents = 1;
        string high_light_color = 2;
      }

      message Extra {
        uint64 duration = 1;
        Background background = 2;
        ContentList content_list = 3;
        map<string, string> params = 5;
        bool need_gift_frequency = 6;
      }
    }

    message OChannelAnchorMessage {
      Common common = 1;
      uint64 start_timestamp = 2;
      uint64 end_timestamp = 3;
      string content = 4;
      uint64 room_id = 5;
      Data.User channel_user = 6;
    }

    message OChannelUserMessage {
      Common common = 1;
      uint64 start_timestamp = 2;
      uint64 end_timestamp = 3;
      uint64 max_enter_time = 4;
      uint64 room_id = 5;
      uint64 max_next_time = 6;
    }

    message OChannelModifyMessage {
      Common common = 1;
      uint64 start_timestamp = 2;
      uint64 end_timestamp = 3;
      uint64 channel_uid = 4;
      string showlist_schema = 5;
      string channel_open_id = 5000;
    }

    message OChannelLastestShowMessage {
      Common common = 1;
      uint64 start_ts = 2;
      string showlist_schema = 5;
    }

    message OChannelGrabMicShowMessage {
      Common common = 1;
      uint64 show_id = 2;
      string text = 3;
      uint64 start_timestamp = 4;
      uint64 end_timestamp = 5;
      Data.User channel_user = 6;
      string showlist_name = 7;
    }

    message OChannelSwitchRoomMessage {
      Common common = 1;
      uint64 mic_room_id = 2;
    }

    message PopularCardMessage {
      Common common = 1;
      PopularCardInfo popular_card_info = 2;

      message PopularCardInfo {
        int32 status = 1;
        uint64 start_time = 2;
        uint64 end_time = 3;
        int32 enter_number = 4;
      }
    }

    message PortalMessage {
      Common common = 1;
      uint64 type = 2;
      uint64 portal_id = 3;
      uint64 room_id = 4;
      PortalBuy portal_buy = 5;
      PortalInvite portal_invite = 6;
      PortalFinish portal_finish = 7;
      Data.Portal portal = 8;
      uint64 next_ping_time = 9;
      PublicAreaCommon public_area_common = 10;
    }

    message PortalBuy {
      Data.User sugar_daddy = 1;
    }

    message PortalInvite {
      uint64 invite_count_down = 1;
      uint64 reward_count_down = 2;
      Data.User sugar_daddy = 3;
      Data.User anchor = 4;
      Data.Image cover = 5;
    }

    message PortalFinish {
      Data.User lucky_person = 1;
    }

    message PropertyNoticeMessage {
      Common common = 1;
      string content = 2;
      uint64 user_id = 3;
      uint64 property_event_type = 4;
      string user_open_id = 5000;
    }

    message PushMessage {
      Common common = 1;
      string content = 2;
      string color = 3;
      string traceid = 4;
      Data.Image icon = 5;
      string action_content = 6;
      uint64 action_type = 7;
      uint64 push_message_display_time = 8;
      FlexImageStruct background_image = 9;
      Data.Image action_icon = 10;
      FlexImageStruct new_background_image = 11;
      string source = 12;
    }

    message FansclubV1PushMessage {
      Common common = 1;
      string content = 2;
      string color = 3;
      string traceid = 4;
      Data.Image icon = 5;
      string action_content = 6;
      uint64 action_type = 7;
      uint64 push_message_display_time = 8;
      FlexImageStruct background_image = 9;
      Data.Image action_icon = 10;
      FlexImageStruct new_background_image = 11;
      string source = 12;
    }

    message QuizStartMessage {
      Common common = 1;
      Data.Text display_text = 2;
    }

    message QuizResult {
      string title = 1;
      Data.Text result = 2;
      Data.Text gain = 3;
    }

    message QuizResultMessage {
      Common common = 1;
      QuizResult quiz_result = 3;
    }

    message QuizChangeData {
      uint64 quiz_id = 1;
      uint64 status = 2;
      repeated Data.BetOption options = 4;
    }

    message QuizChangeMessage {
      Common common = 1;
      repeated QuizChangeData quiz_change_data = 2;
    }

    message CreateRedPacketMessage {
      Common common = 1;
      repeated RedPacket red_packets = 2;
    }

    message RushRedPacketMessage {
      Common common = 1;
      repeated RedPacketRushRecord red_packet_rush_records = 2;
    }

    message RedPacketRushRecord {
      uint64 red_packet_group_id = 1;
      uint64 user_id = 2;
      string user_name = 3;
      uint64 bonus_count = 4;
      uint64 bonus_type = 5;
      uint64 room_id = 6;
      string im_text = 7;
      uint64 create_time = 8;
    }

    message RedPacket {
      uint64 red_packet_group_id = 1;
      uint64 bonus_type = 2;
      uint64 combo_count = 3;
      uint64 bonus_count = 4;
      uint64 count_down = 5;
      uint64 rush_time = 6;
      string icon_url = 7;
      uint64 disappear_time = 8;
      Data.User owner = 9;
      uint64 total_count_down = 10;
      string red_packet_source = 11;
    }

    message PushRoomAdCard {
      Common common = 1;
      string action_content = 2;
      string content = 3;
      uint64 target_num = 4;
      uint64 show_num = 5;
      bool is_finished = 6;
      int32 adcard_type = 7;
      int32 hotvalue = 8;
    }

    message RoomAuthMessage {
      Common common = 1;
      bool show_user_card = 2;
    }

    message RoomBottomMessage {
      Common common = 1;
      string color = 3;
      string action_content = 6;
      uint64 action_type = 7;
      uint64 push_message_display_time = 8;
      Data.Image action_icon = 10;
      FlexImageStruct new_background_image = 11;
      string source = 12;
    }

    message RoomChallengeMessage {
      Common common = 1;
      string challenge_info = 2;
      uint64 notify_type = 3;
      string toast_content = 4;
    }

    message RoomHotSentenceMessage {
      Common common = 1;
      string hot_sentence_info = 2;
    }

    message RoomImgMessage {
      Common common = 1;
      string content = 2;
      uint64 action = 3;
      string bg_img_url = 4;
    }

    message RoomManageMessage {
      Common common = 1;
      Data.User user = 2;
      uint64 action = 3;
      uint64 member_count = 4;
      uint64 popularity = 5;
      string popularity_str = 6;
      uint64 device_id = 7;
      string content = 8;
    }

    message RoomStartMessage {
      Common common = 1;
      string content = 2;
      string image_url = 3;
      int32 instation_push_type = 4;
    }

    message RoomUserSeqMessage {
      Common common = 1;
      repeated Contributor ranks = 2;
      uint64 total = 3;
      string pop_str = 4;
      repeated Contributor seats = 5;
      uint64 popularity = 6;
      uint64 total_user = 7;
      string total_user_str = 8;
      string total_str = 9;
      string online_user_for_anchor = 10;
      string total_pv_for_anchor = 11;
      string up_right_stats_str = 12;
      string up_right_stats_str_complete = 13;

      message Contributor {
        uint64 score = 1;
        Data.User user = 2;
        uint64 rank = 3;
        uint64 delta = 4;
        bool is_hidden = 5;
        string score_description = 6;
        string exactly_score = 7;
      }
    }

    message RoomVerifyMessage {
      Common common = 1;
      int32 action = 2;
      string content = 3;
      uint64 notice_type = 4;
      bool close_room = 5;
      int32 unable_style = 6;
      string tip_content = 7;
      int32 anchor_switch = 8;
      string switch_status_tip_msg = 9;
      string switch_status_anchor_tip_msg = 10;
    }

    message RoomMessage {
      Common common = 1;
      string content = 2;
      bool supprot_landscape = 3;
      int32 roomMessageType = 4;
      bool system_top_msg = 5;
      bool forced_guarantee = 6;
      PublicAreaCommon public_area_common = 7;
      string biz_scene = 20;
      map<string, string> buried_point = 30;
      RoomMsgExtra extra = 40;
    }

    message ScreenChatMessage {
      Common common = 1;
      Data.User user = 2;
      uint64 screen_chat_type = 3;
      string content = 4;
      uint64 priority = 5;
      Effect effect = 6;
      Data.Image background_image = 7;
      Effect effect_v2 = 8;
      Data.Image background_image_v2 = 9;
      PublicAreaCommon public_area_common = 10;
      OfficialCommentConfig official_comment_config = 11;
      uint64 event_time = 12;
      bool send_review = 13;
      Data.ChatIdentity chat_identity_info = 14;
      Data.Text rtf_content = 30;
      bool public_area_does_not_display = 31;
      Data.Text rtf_content_v2 = 32;
      ScreenChatMessageContentExt content_ext = 33;

      message OfficialCommentConfig {
        bool official = 1;
      }

      message Effect {
        FlexImageStruct icon = 1;
        Data.Image avatar_icon = 2;
        string background_color = 3;
      }
    }

    message ShareGuideMessage {
      Common common = 1;
      string share_channel = 2;
    }

    message SocialMessage {
      Common common = 1;
      Data.User user = 2;
      uint64 share_type = 3;
      uint64 action = 4;
      string share_target = 5;
      uint64 follow_count = 6;
      PublicAreaCommon public_area_common = 7;
      uint64 share_total_count = 8;
    }

    message SpecialPushMessage {
      Common common = 1;
      string content = 2;
      string color = 3;
      string traceid = 4;
      Data.Image icon = 5;
      string action_content = 6;
      uint64 action_type = 7;
      uint64 push_message_display_time = 8;
    }

    message UpdateKoiRoomStatusMessage {
      Common common = 1;
      Data.Image director_icon = 2;
      int32 cur_round_index = 3;
      int32 status = 4;
      string director_schema_url = 5;
    }

    message StampMessage {
      Common common = 1;
      repeated Data.StampInfo stamps = 2;
    }

    message AudienceEntranceMessage {
      Common common = 1;
      repeated Data.AudienceEntranceInfo entrances = 2;
    }

    message CustomizedCardMessage {
      Common common = 1;
      Data.CustomizedCardInfo card = 2;
      string app_id = 3;
      string start_id = 4;
      int32 scene_source = 5;
    }

    message GameCardMessage {
      Common common = 1;
      Data.GameCardInfo card = 2;
      string app_id = 3;
      string start_id = 4;
    }

    message MicroAppShelfMessage {
      Common common = 1;
      Data.ShelfInfo shelf_info = 2;
    }

    message SunDailyRankMessage {
      Common common = 1;
      string content = 2;
      uint64 duration = 3;
      string after_content = 4;
      uint64 message_type = 5;
      string schema = 6;
      string extra = 7;
      string style = 8;
      Data.Text after_display_text = 9;
      uint64 rank = 10;
      string rich_content = 11;
      string user_side_content = 12;
      uint64 content_type = 13;
      string city_code = 14;
      int32 rank_stage = 15;
      repeated RankInfo ranks = 16;
      uint64 begin_time = 17;
      uint64 delta_time = 18;
      Data.Text entrance_appearing_text = 19;
      Data.Text display_text_v2 = 20;
      Data.Text after_display_text_v2 = 21;
      uint64 duration_v2 = 22;

      message RankInfo {
        uint64 rank_type = 1;
        uint64 rank = 2;
      }
    }

    message SystemMessage {
      Common common = 1;
      string content = 2;

      message Common {
        string method = 1;
        uint64 msg_id = 2;
        uint64 room_id = 3;
        uint64 create_time = 4;
        int32 monitor = 5;
      }
    }

    message BubbleConfig {
      string content = 1;
      uint64 duration = 2;
      Data.Text rich_text = 3;
      string scheme_url = 4;
      FlexImageStruct background_image = 5;
      Data.Image arrow_image = 6;
      string title = 7;
      Data.Image icon = 8;
      Data.Image landing_icon = 9;
    }

    message ToolbarItemBehaviourParam {
      int32 behaviour_type = 1;
      string values = 2;
    }

    message ToolbarItemBehaviourParams {
      string key = 1;
      repeated ToolbarItemBehaviourParam params = 2;
    }

    message ToolbarItemMessage {
      Common common = 1;
      int32 toolbar_item_id = 2;
      int32 action_type = 3;
      BubbleConfig bubble_config = 4;
      map<string, string> extra = 5;
      int32 message_type = 6;
      ToolbarItemBehaviourParams behaviour_params = 7;
    }

    message TurntableBurstMessage {
      Common common = 1;
      uint64 burst_time_remain_seconds = 2;
      uint64 multiple = 3;
      uint64 property_definition_id = 4;
      Data.Image property_icon = 5;
    }

    message UploadCoverMessage {
      Common common = 1;
      uint64 msg_type = 2;
      Data.Text title = 3;
      Data.Text content = 4;
      Data.Text tips_title = 5;
      string tips_url = 6;
      uint64 cover_type = 7;
    }

    message UserStatsMessage {
      Common common = 1;
      string content = 2;
      uint64 user_id = 3;
      uint64 action_type = 4;
      string user_open_id = 5000;
    }

    message VerificationCodeMessage {
      Common common = 1;
      uint64 id = 2;
      uint64 duration = 3;
    }

    message VIPInfoMessage {
      Common common = 1;
      Data.UserVIPInfo user_vip_info = 2;
      uint64 action = 3;
    }

    message VIPSeatMessage {
      Common common = 1;
      repeated Data.User top_users = 2;
      uint64 total_count = 3;
    }

    message WebcastBattleBonusMessage {
      Common common = 1;
      MvpMessage mvp_info = 2;
      repeated PlayerMessage player_list = 3;

      message MvpMessage {
        uint64 user_id = 1;
        string user_name = 2;
        Data.PropSummary prop_info = 3;
        string user_open_id = 5000;
      }

      message PlayerMessage {
        uint64 user_id = 1;
        string user_name = 2;
        uint64 diamond_count = 3;
        string user_open_id = 5000;
      }

    }

    message WebcastBattlePropertyMessage {
      Common common = 1;
      repeated RoomPropDesc room_prop_list = 2;

      message RoomPropDesc {
        uint64 room_id = 1;
        Data.PropSummary prop_desc_list = 2;

        message PropertyDesc {
          Data.PropSummary prop_info = 1;
          uint64 start_time = 2;
          uint64 duration = 3;
          uint64 from_user_id = 4;
          string from_user_open_id = 5000;
        }
      }
    }

    message WebcastPopularCardMessage {
      Common common = 1;
      PopularCardInfo popular_card_info = 2;

      message PopularCardInfo {
        int32 status = 1;
        uint64 start_time = 2;
        uint64 end_time = 3;
        int32 enter_number = 4;
      }
    }

    message VideoLiveGoodsRcmdMessage {
      Common common = 1;
      uint64 rcmd_goods_id = 2;
    }

    message VideoLiveCouponRcmdMessage {
      Common common = 1;
      uint64 rcmd_coupon_id = 2;
    }

    message VideoLiveGoodsOrderMessage {
      Common common = 1;
      Data.User user = 2;
      GoodsOrder goods_order = 3;

      message GoodsOrder {
        uint64 goods_room_order = 1;
        uint64 order_num = 2;
        uint64 order_money = 3;
        string order_id = 4;
      }
    }

    message RankListAwardMessage {
      Common common = 1;
      uint64 asset_id = 2;
      bool effect_open = 3;
      uint64 rank_type = 4;
      uint64 rank = 5;
      Data.BattleStarActivityGradeMedal star_activity_grade_medal = 6;
      string scheme_url = 7;
      Data.Image asset_image = 8;
      int32 play_priority = 9;
      Data.Text text = 10;
    }

    message MatchAgainstScoreMessage {
      Common common = 1;
      Data.Against against = 2;
      int32 match_status = 3;
      int32 display_status = 4;
      uint64 match_id = 5;
      string match_id_str = 6;
    }

    message MatchCollectionMessage {
      Common common = 1;
      Data.CollectionItem collection_item = 2;
    }

    message MatchHighLightPointMessage {
      Common common = 1;
      repeated Data.EpisodeHighLight points = 2;
    }

    message MatchHostChangeMessage {
      Common common = 1;
      uint64 team_id = 2;
      string team_name = 3;
      string schema_url = 4;
      Data.Image team_icon = 5;
      Data.Image team_badge = 6;
      Data.Image team_background = 7;
      string system_msg = 8;
    }

    message MatchHotMessage {
      Common common = 1;
      int32 msg_type = 2;
      string content = 3;
      uint64 count = 4;
      uint64 sequence_id = 5;
      int32 group = 6;
      uint64 IconIndex = 7;
      uint64 TriggerTimestamp = 8;
    }

    message VideoSize {
      int32 Height = 1;
      int32 Width = 2;
    }

    message Avatar {
      string url_big = 1;
      string url_mid = 2;
      string url_small = 3;
    }

    message Team {
      string team_name = 1;
      string country_code = 2;
      int32 score = 3;
      string flag = 4;
      string team_id = 5;
      int32 score_addition = 6;
    }

    message VenueInfo {
      int32 stage = 1;
      uint64 target_time = 2;
      uint64 current_time = 3;
      string room_id = 4;
      uint64 polling_interval = 5;
      uint64 update_time = 6;
      uint64 distribute_time = 7;
    }

    message VideoCard {
      int32 card_type = 1;
      string cover_url = 2;
      string schema = 3;
      string title = 4;
      string sub_title = 5;
      string uid = 6;
      string rid = 7;
      string epid = 8;
      string tag = 9;
      string creator_id = 10;
      VideoSize size = 11;
      string background_url = 12;
      string card_id = 13;
      string video_resource = 14;
      int32 link_type = 15;
      string open_id = 5000;
      string creator_open_id = 5001;
    }

    message MatchCard {
      int32 match_type = 1;
      int32 status = 2;
      string title = 3;
      string description = 4;
      string start_time = 5;
      string uid = 6;
      Team team_left = 7;
      Team team_right = 8;
      bool reserved = 9;
      string schema = 10;
      string epid = 11;
      string reservation_id = 12;
      string card_id = 13;
      string room_id = 14;
      string match_id = 15;
    }

    message Profile {
      int32 status = 1;
      Avatar avatar_url = 2;
      string nick_name = 3;
      string description = 4;
      bool followed = 5;
      uint64 start_time = 6;
      string room_id = 7;
      string uid = 8;
      string reservation_id = 9;
      string card_id = 10;
      uint64 follow_count = 12;
      int32 color = 13;
      uint64 src_id = 14;
    }

    message StarProfile {
      int32 status = 1;
      Avatar avatar_url = 2;
      string nick_name = 3;
      string description = 4;
      bool followed = 5;
      string room_id = 6;
      string uid = 7;
      uint64 start_time = 8;
      string reservation_id = 9;
      string card_id = 10;
      uint64 follow_count = 11;
      int32 color = 12;
    }

    message HotVideoCard {
      string title = 1;
      string cover_url = 2;
      string schema = 3;
      string card_id = 4;
      string sub_title = 5;
    }

    message VideoCardModule {
      uint64 module_id = 1;
      uint64 module_version = 2;
      int32 update_type = 3;
      repeated VideoCard update_list = 4;
      repeated string delete_list = 5;
    }

    message MatchReservationModule {
      uint64 module_id = 1;
      uint64 module_version = 2;
      int32 update_type = 3;
      repeated MatchCard update_list = 4;
      repeated string delete_list = 5;
    }

    message FootballTalkingModule {
      uint64 module_id = 1;
      uint64 module_version = 2;
      int32 update_type = 3;
      Profile update_list = 4;
      string delete_list = 5;
    }

    message PopularStarModule {
      uint64 module_id = 1;
      uint64 module_version = 2;
      int32 update_type = 3;
      repeated StarProfile update_list = 4;
      repeated string delete_list = 5;
    }

    message HotLiveModule {
      uint64 module_id = 1;
      uint64 module_version = 2;
      int32 update_type = 3;
      repeated HotVideoCard update_list = 4;
      repeated string delete_list = 5;
    }

    message MatchVenueMessage {
      VideoCardModule video_card = 1;
      MatchReservationModule match_reservation = 2;
      FootballTalkingModule football_talking = 3;
      PopularStarModule popular_star = 4;
      HotLiveModule hot_live = 5;
      VenueInfo venue_info = 6;
      MatchReservationModule team_reservation = 7;
      Common common = 8;
    }

    message MediaRoomNoticeMessage {
      Common common = 1;
      string intro = 2;
      uint64 duration = 3;
      bool review_pass = 4;
      string review_fail_text = 5;
      string notice_title = 6;
      PublicAreaCommon public_area_common = 7;
    }

    message MemberEntranceUpdateMessage {
      Common common = 1;
      uint64 action_type = 2;
      Data.MemberEntranceInfo member_entrance_info = 3;
    }

    message MotorCustomMessage {
      Common common = 1;
      string type = 2;
      string title = 3;
      string image = 4;
      string extra = 5;
      repeated Data data = 6;

      message Data {
        string image = 1;
        string url = 2;
        string content = 3;
        string extra = 4;
      }
    }

    message AuctionMessage {
      Common common = 1;
      string extra = 2;
    }

    message AuctionPublicScreenMessageExtra {
      string im_type = 1;
      repeated AuctionIMBody core_data = 2;

      message AuctionIMBody {
        uint64 role_type = 1;
        bool is_bid = 2;
        string text = 3;
        Data.MysteryUserInfo user_info = 4;
      }
    }

    message AuctionRankMessageExtra {
      string im_type = 1;
      repeated Data.MysteryRankUserItem rank_user_items = 2;
      uint64 entry_price = 3;
      uint64 total_score = 4;
    }

    message AuctionStartMessageExtra {
      string im_type = 1;
    }

    message AuctionSettleMessageExtra {
      string im_type = 1;
      repeated string top_user_ids = 2;
      uint64 entry_price = 3;
      uint64 top_price = 4;
      uint64 participate_num = 5;
      repeated RewardUserInfo reward_user_info = 6;
      repeated string top_user_open_ids = 5000;

      message RewardUserInfo {
        Data.MysteryUserInfo user_info = 1;
        uint64 score = 2;
      }
    }

    message NotifyEffectMessage {
      Common common = 1;
      repeated Data.Image icons = 2;
      Data.Text text = 3;
      Background background = 4;
      DynamicConfig dynamic_config = 5;
      Data.CombinedText text_v2 = 6;
      bool support_landscape = 7;
      SceneConfig scene_config = 10;
      map<string, string> buried_point = 20;

      message Background {
        Data.Image background_image = 1;
        string background_color = 10;
        Data.Image background_effect = 11;
      }

      message DynamicConfig {
        int32 stay_time = 1;
        int32 max_stay_time = 2;
        int32 display_effect_type = 3;
      }

      message SceneConfig {
        string scene = 1;
        uint64 priority = 2;
        bool need_aggregate = 3;
        uint64 aggregate_num = 4;
        Data.Text aggregate_text = 5;
        string sub_scene = 6;
        uint64 max_wait_time = 7;
      }
    }

    message GameToolCounterPlayer {
      uint64 room_id = 1;
      string point = 2;
    }

    message GameToolCounterMessage {
      Common common = 1;
      string mini_app_id = 2;
      uint64 round_id = 3;
      map<string, float> points = 4;
      uint64 update_time = 5;
      uint64 start_time = 6;
      uint64 expect_finish_time = 7;
      repeated GameToolCounterPlayer players = 8;
    }

    message GameEntranceInfo {
      uint64 interact_type = 1;
      string title = 2;
      string desc = 3;
      Data.Image icon = 4;
      string extra = 5;
    }

    message GameToolRoundPlayer {
      uint64 room_id = 1;
    }

    message GameToolRoundMessage {
      Common common = 1;
      string mini_app_id = 2;
      uint64 round_id = 3;
      int32 message_type = 4;
      GameEntranceInfo entrance = 5;
      bool should_show_auth = 6;
      string creator_id = 7;
      string notice_title = 8;
      string notice_subtitle = 9;
      string extra = 10;
      uint64 start_time = 11;
      uint64 expect_finish_time = 12;
      repeated GameToolRoundPlayer players = 13;
      Data.StreamUrl push_url = 14;
    }

    message PaidLiveDataMessage {
      Common common = 1;
      PaidBusinessData paid_business_data = 2;
    }

    message PaidBusinessData {
      uint64 ret_type = 1;
      uint64 duration = 2;
      int32 delivery = 3;
      uint64 id = 4;
      int32 id_type = 5;
      uint64 ticket_id = 6;
      uint64 ticket_sku_id = 7;
      map<int64, int32> entity_rels = 8;
      int32 purchase_paid_live_type = 9;
      uint64 async_authentication_operate = 10;
      uint64 parent_ticket_id = 11;
      int32 purchase_type = 12;
      int32 right_type = 13;
    }

    message PaidLiveTypeModifyMessage {
      Common common = 1;
      PaidLiveTypeModifyData paid_live_type_modify_data = 2;
    }

    message PaidLiveTypeModifyData {
      uint64 room_id = 1;
      Data.PrivilegeInfo data = 2;
      int32 operator_type = 3;
    }

    message PkActivePush {
      Matcher matcher_r = 1;
      string match_reason = 2;
      uint64 wait_seconds = 3;
      string sign_extra = 4;
      Data.VoteSetting vote_data = 5;
      string battle_attached_info = 19;

      message Matcher {
        uint64 user_id = 1;
        Data.Room room = 2;
        Data.BattleRivalTag tags = 3;
      }
    }

    message PkActivePushMessage {
      Common common = 1;
      PkActivePush pk_active_push = 2;
    }

    message PKIconBubbleMessage {
      Common common = 1;
      PKIconBubble bubble_info = 2;
    }

    message PKIconBubble {
      Data.Image display_icon = 1;
      Data.Text display_text = 2;
      string schema = 3;
      int32 bubble_type = 4;
      string activity_name = 5;
      uint64 show_time = 6;
      uint64 show_count = 7;
    }

    message PlatformAdviseMessage {
      Common common = 1;
      Data.Text advise_text = 2;
      uint64 duration = 3;
      uint64 priority = 4;
      map<string, string> event_tracking = 20;
    }

    message PlayDebugEntranceMessage {
      Common common = 1;
      repeated PlayDebugEntranceGame game_list = 2;
    }

    message PlayDebugEntranceGame {
      string game_id = 1;
      string game_name = 2;
      repeated PlayPanelUrl play_panel_url_list = 3;
    }

    message PlayPanelUrl {
      string play_name = 1;
      string url = 2;
    }

    message PrivilegeScreenChatMessage {
      Common common = 1;
      Data.User user = 2;
      string content = 3;
      PublicAreaCommon public_area_common = 4;
      uint64 style = 5;
      uint64 activity_danmu_background = 6;
      Data.Text rtf_content = 7;
      Data.Text rtf_content_v2 = 8;
    }

    message PrivilegeVoiceWaveMessage {
      Common common = 1;
      uint64 user_id = 2;
      Data.Image low_img = 3;
      Data.Image medium_img = 4;
      Data.Image high_img = 5;
      uint64 dress_id = 6;
    }

    message ProfileViewMessage {
      Common common = 1;
      Data.Text title = 2;
      Data.Text sub_title = 3;
      uint64 show_duration = 4;
      int32 source = 5;
    }

    message ProfitGameMessage {
      Common common = 1;
      uint64 game_id = 2;
      bytes frames = 3;
    }

    message ProfitInteractionScoreAnchorInfo {
      string score = 1;
      Data.ProfitInteractionSetting interaction_setting = 2;
      bool reach_score_display_threshold = 3;
    }

    message ProfitInteractionScoreMessage {
      Common common = 1;
      map<int64, ProfitInteractionScoreAnchorInfo> anchor_infos = 2;
      int32 interaction_score_status = 3;
      uint64 channel_id = 4;
      uint64 start_time = 5;
      int32 interaction_score_action = 6;
      string extra = 7;
      string game_extra = 8;
      map<int64, ProfitInteractionScoreAnchorInfo> open_anchor_infos = 5000;
    }

    message ProfitReportMessage {
      Common common = 1;
      Data.ProfitCheckConfig profit_check_config = 2;
    }

    message VsProgrammeStateControlMessage {
      Common common = 1;
      string pID = 2;
      int32 state = 3;
      repeated PlayBackInfo playBackInfo_list = 4;

      message PlayBackInfo {
        string pID = 1;
        string StartTime = 2;
      }
    }

    message PromptMessage {
      Common common = 1;
      string content = 2;
      Data.User user = 3;
      int32 duration = 4;
    }

    message PropsBGImgMessage {
      Common common = 1;
      Data.PropsBGData bg = 2;
      int32 ReviewStatus = 3;
      string Prompts = 4;
    }

    message PublicAreaHoverMessage {
      Common common = 1;
      PublicAreaCommon public_area_common = 2;
      string main_content = 3;
      string secondary_content = 4;
      Data.Image hover_icon = 5;
      int32 hover_height = 6;
      string scene = 7;
      int32 priority = 8;
    }

    message PullStreamUpdateMessage {
      Common common = 1;
      int32 push_stream_level = 2;
      int32 random_seconds = 3;
    }

    message Word {
      string content = 1;
    }

    message QuickComment {
      Common common = 1;
      Word words = 2;
      int32 duration = 3;
    }

    message AllQuizInfo {
      uint64 id = 1;
      string title = 2;
      uint64 startTime = 3;
      uint64 duration = 4;
      uint64 status = 5;
    }

    message QuizBeginMessage {
      Common common = 1;
      uint64 quizID = 2;
      int32 status = 3;
      repeated AllQuizInfo quizInfos = 4;
      uint64 errorCode = 5;
      string extra = 6;
    }

    message QuizBetMessage {
      Common common = 1;
      uint64 quiz_id = 2;
      map<int64, int64> option_money = 3;
    }

    message QuizAnchorStatusMessage {
      Common common = 1;
      repeated Data.AnchorHistoryItem items = 2;
    }

    message QuizAudienceStatusMessage {
      Common common = 1;
      repeated Data.Quiz quiz_list = 2;
    }

    message RankListHourEnterMessage {
      Common common = 1;
      Data.RankEnterInfo hour_enter_info = 2;
    }

    message RanklistHourEntranceMessage {
      Common common = 1;
      Data.RanklistHourEntrance info = 2;
    }

    message RealPersonAuditMessage {
      Common common = 1;
      uint64 action_type = 2;
      string real_person_audit_stream_id = 3;
      string real_person_audit_stream_rtmp_push_url = 4;
      string real_person_audit_stream_rtmp_push_url_params = 5;
    }

    message RealTimePlayBackMessage {
      Common common = 1;
      bool realtime_playback_enabled = 2;
      string reason = 3;
      string message_text = 4;
    }

    message RealtimeSuggest {
      string id = 1;
      string text = 2;
      string schema_url = 3;
      string button_text = 4;
      string send_time = 5;
      int32 duration = 6;
      Data.Image icon = 7;
      Data.Image panel_icon = 8;
      map<string, string> params = 9;
    }

    message BizMessage {
      string tab_key = 1;
      string content = 2;
    }

    message RealtimeStatusNotifyMessage {
      Common common = 1;
      RealtimeSuggest suggest = 2;
      BizMessage biz_message = 3;
      BarMessage bar_message = 4;
      int32 show_type = 6;
      BarStyle bar_style = 7;
      string schema_url = 8;
    }

    message RoomAppConfigMessage {
      Common common = 1;
      AnchorFaceConfig anchor_face_config = 2;
    }

    message AnchorFaceConfig {
      bool contour_enable = 1;
      uint64 frequency = 2;
      uint64 user_count = 3;
    }

    message RoomAuthInterventionVerifyMessage {
      Common common = 1;
      string name = 2;
      uint64 status = 3;
      int32 unableStyle = 4;
      string content = 5;
      string switch_status_tip_msg = 6;
      string switch_status_anchor_tip_msg = 7;
    }

    message RoomBackgroundMessage {
      Common common = 1;
      Data.Image room_background = 2;
    }

    message RoomChannelAccessMessage {
      Common common = 1;
      Data.User user = 2;
      Data.User inviter = 3;
      uint64 type = 4;
    }

    message RoomChannelAssetMessage {
      Common common = 1;
      uint64 asset_id = 2;
    }

    message RoomChannelChatMessage {
      Common common = 1;
      Data.User user = 2;
      string content = 3;
      Data.Text rtf_content = 4;
      int32 show_identity = 5;
      bool mention = 6;
      Data.Text rtf_content_v2 = 7;
    }

    message RoomChannelEmojiChatMessage {
      Common common = 1;
      Data.User user = 2;
      uint64 emoji_id = 3;
      Data.Text emoji_content = 4;
      string default_content = 5;
      int32 show_identity = 6;
    }

    message RoomChannelInteractiveEmojiChatMessage {
      Common common = 1;
      Data.User user = 2;
      string interactive_emoji_display_name = 3;
      string default_content = 4;
      int32 show_identity = 5;
    }

    message RoomChannelDisbandMessage {
      Common common = 1;
      string toast = 2;
    }

    message RoomChannelGiftMessage {
      Common common = 1;
      Data.User user = 2;
      Data.Text rtf_content = 3;
    }

    message RoomChannelKickOutMessage {
      Common common = 1;
      string toast = 2;
      repeated Data.RoomChannelInfo online_channel_list = 3;
    }

    message ReplyRoomChannelMessage {
      Common common = 1;
      bool permit = 2;
      Data.RoomChannelInfo channel_info = 3;
      string toast = 4;
    }

    message RoomChannelSaveGroupMessage {
      Common common = 1;
      string con_id = 2;
    }

    message RoomChannelSecretStatusMessage {
      Common common = 1;
      uint64 SecretStatus = 2;
    }

    message RoomChannelStateMessage {
      Common common = 1;
      uint64 member_count = 2;
      repeated Data.User top_user_list = 3;
      string channel_name = 4;
      Data.User need_approval_user = 5;
      Data.User owner = 6;
    }

    message RoomChannelSystemMessage {
      Common common = 1;
    }

    message RoomChannelRoleMessage {
      Common common = 1;
      int32 new_role = 2;
    }

    message RoomConfigMessage {
      Common common = 1;
      string config_info = 2;
      uint64 config_type = 3;
    }

    message RoomDataSyncMessage {
      Common common = 1;
      uint64 roomID = 2;
      string syncKey = 3;
      uint64 version = 4;
      bytes payload = 5;
      string bizLogID = 6;
    }

    message RoomIntroMessage {
      Common common = 1;
      Data.User user = 2;
      uint64 style = 3;
      string intro = 4;
      repeated string label = 5;
      uint64 intro_video_item_id = 6;
      string intro_video_title = 7;
      repeated Data.RoomIntroLabel selected_labels = 8;
      repeated Data.RoomIntroLabel intro_labels = 9;
      PublicAreaCommon public_area_common = 10;
      bool poi_enabled = 11;
      Data.RoomIntroAppointmentInfo appointment_info = 22;
      Data.AnchorLocationPoiInfo anchor_location_poi_info = 23;
    }

    message RoomRankMessage {
      Common common = 1;
      repeated RoomRank ranks = 2;

      message RoomRank {
        Data.User user = 1;
        string score_str = 2;
        bool profile_hidden = 3;
      }
    }

    message RoomSecretCreateMessage {
      Common common = 1;
      Data.RoomChannelInfo channel_info = 2;
    }

    message RoomStatsMessage {
      Common common = 1;
      string display_short = 2;
      string display_middle = 3;
      string display_long = 4;
      uint64 display_value = 5;
      uint64 display_version = 6;
      bool incremental = 7;
      bool is_hidden = 8;
      uint64 total = 9;
      uint64 display_type = 10;
    }

    message RoomStreamAdaptationMessage {
      Common common = 1;
      int32 adaptation_type = 2;
      float adaptation_height_ratio = 3;
      float adaptation_body_center_ratio = 4;
      float adaptation_content_top_ratio = 5;
      float adaptation_content_bottom_ratio = 6;
    }

    message RoomTicketMessage {
      Common common = 1;
      int32 action_type = 2;
      int32 last_duration = 3;
      uint64 ticket_id = 4;
      string ticket_explanation_card_jump_url = 5;
      string ticket_panel_jump_url = 6;
      string ticket_panel_6_jump_url = 7;
      string ticket_panel_9_jump_url = 8;
      uint64 owner_id = 9;
      ToolBar product_list_tool_bar = 10;
      int32 bring_product_switch_status = 11;
      string owner_open_id = 5000;

      message ToolBar {
        string panel_jump_url = 1;
        string six_jump_url = 2;
        string nine_jump_url = 3;
      }
    }

    message RoomTopMessage {
      Common common = 1;
      Data.Image action_icon = 2;
      Background background = 3;
      uint64 fold_duration = 4;
      uint64 display_duration = 5;
      Data.Text first_title = 6;
      Data.Text second_title = 7;
    }

    message Background {
      string background_color = 1;
    }

    message RoomUnionLiveMessage {
      Common common = 1;
      Data.UnionLiveInfo union_live_info = 2;
    }

    message ScheduleMessage {
      Common common = 1;
      string schedule_id = 2;
      WebcastStatus target_status = 3;
      int32 scene = 4;

      message WebcastStatus {
        int32 status = 1;
        string appointment_id = 2;
        string room_id = 3;
        string replay_id = 4;
      }
    }

    message SecretChatMessage {
      Common common = 1;
      Data.User user = 2;
      string content = 3;
      Data.Text display_text = 4;
      uint64 type = 5;
      PublicAreaCommon public_area_common = 8;
    }

    message SharePosterMessage {
      Common common = 1;
      PosterData data = 2;

      message PosterData {
        repeated Data.Image poster = 1;
        repeated Data.Image decorator = 2;
      }
    }

    message ShelfCardAtmosphereMessage {
      Common common = 1;
      uint64 room_id = 2;
      uint64 card_id = 3;
      repeated Data.Image img = 4;
      uint64 sale_num = 5;
      int32 duration = 6;
    }

    message ShelfTradeDataMessage {
      Common common = 1;
      Data.ShelfTradeData data = 2;
    }

    message ShortTouchAreaMessage {
      Common common = 1;
      int32 message_type = 2;
      Data.ShortTouchArea short_touch_area_data = 3;
    }

    message ShowChatMessage {
      Common common = 1;
      uint64 episode_id = 2;
      string content = 3;
      uint64 agree_msg_id = 4;
      bool visible_to_sender = 5;
      int32 priority_level = 6;
      int32 effect_type = 7;
      Data.User user = 20;
      PublicAreaCommon public_area_common = 30;
      LandscapeAreaCommon landscape_area_common = 31;
      Data.Image background_image = 40;
      repeated string font_color_value = 41;
      Data.Image gift_image = 42;
      OfficialCommentConfig official_comment_config = 43;
      CommentRoleConfig comment_role = 44;
      Data.CommentMedal medal = 45;
      int32 vs_message_type = 46;
    }

    message OfficialCommentConfig {
      string background_color = 1;
    }

    message CommentRoleConfig {
      string name = 1;
      Data.Image avatar = 2;
    }

    message ShowDouPlusNotifyMessage {
      Common common = 1;
      int32 event_type = 2;
      uint64 order_id = 10;
      string order_wish_word = 11;
      uint64 enter_count = 30;
    }

    message ShowEffectMessage {
      Common common = 1;
      bool flash_operating_place = 2;
    }

    message ShowLinkedLiveRoomsMessage {
      Common common = 1;
      uint64 episode_id = 2;
      string entry_title = 3;
      repeated ShowLinkedLiveRoomInfo linked_live_rooms = 4;

      message ShowLinkedLiveRoomInfo {
        uint64 owner_user_id = 1;
        uint64 room_id = 2;
        string room_title = 3;
        Data.Image avatar_thumb = 4;
        Data.Image avatar_medium = 5;
        Data.Image avatar_large = 6;
        string owner_open_id = 5000;
      }
    }

    message ShowMultiCameraChangeMessage {
      Common common = 1;
      repeated Data.VSCameraInfo camera_infos = 2;
      uint64 randomly_break_up_time = 3;
    }

    message ShowWatchInfoMessage {
      Common common = 1;
      string desc = 2;
      string count = 3;
      string count_with_backup = 4;
      string format_count = 5;
    }

    message SkyEyeAnchorSetMessage {
      Common common = 1;
      Data.Image title_image = 2;
      string title = 3;
      string top_tip = 4;
      string bottom_tip = 5;
    }

    message SportsRealTimeMatchDataMessage {
      Common common = 1;
      string sports_match_data = 2;
    }

    message SportsQuizOption {
      uint64 option_id = 1;
      string option_desc = 2;
      uint64 bet_amount = 3;
      string bet_amount_str = 4;
      double rate = 5;
      string rate_str = 6;
    }

    message SportsQuiz {
      uint64 quiz_id = 1;
      string title = 2;
      int32 type = 3;
      int32 quiz_status = 4;
      uint64 total_reward = 5;
      repeated SportsQuizOption options = 6;
      uint64 win_option = 7;
      uint64 end_time = 8;
      uint64 bet_gold_ball = 9;
      uint64 selected_option = 10;
      uint64 bonus = 11;
    }

    message SportsQuizMessage {
      Common common = 1;
      string match_id = 2;
      int32 quiz_msg_type = 3;
      repeated SportsQuiz quiz = 4;
    }

    message StreamControlMessage {
      Common common = 1;
      string control_params = 2;
    }

    message SubscribeInfoMessage {
      Common common = 1;
      bool is_member = 2;
    }

    message SubscribeAssetMessage {
      Common common = 1;
    }

    message SubscribeVipLiveMessage {
      Common common = 1;
      uint64 room_id = 2;
    }

    message SyncStreamInfoMessage {
      uint64 timestamp = 1;
      string key = 2;
      string info = 3;
      Common common = 4;
    }

    message SyncStreamMessage {
      Common common = 1;
      repeated SyncStreamInfoMessage info_list = 2;
    }

    message TaskCenterCommonMessage {
      Common common = 1;
      uint64 biz_type = 2;
      string data = 3;
    }

    message TaskCenterCommonPersonalMessage {
      Common common = 1;
      uint64 biz_type = 2;
      string data = 3;
    }

    message TaskCenterEntranceMessage {
      Common common = 1;
      Data.TouchPositionMeta meta = 2;
      Data.TreasureDetail detail = 3;
      string extra = 4;
    }

    message TaskCenterEntranceExtendMsg {
      int32 type = 1;
      Data.Popup popup = 2;
      Data.BottomPanel bottom_panel = 3;
      Data.PopularityEggPanel popularity_egg_panel = 4;
    }

    message TaskMessage {
      Common common = 1;
      repeated Data.TaskRecord task_records = 2;
      int32 action = 3;
    }

    message TeamPlayApplyListChangeMessage {
      Common common = 1;
    }

    message TeamPlayDebugEntranceGame {
      string game_id = 1;
      string game_name = 2;
      string panel_url = 3;
    }

    message TeamPlayDebugEntranceMessage {
      Common common = 1;
      repeated TeamPlayDebugEntranceGame games = 2;
    }

    message TeamPlayTeamInfoMessage {
      Common common = 1;
      repeated TeamPlayMember members = 2;
      int32 team_size = 3;
      string play_id = 4;
      int32 status = 5;
      string toast = 6;
      int32 team_members_num = 7;
      TeamPlayPopup popup = 8;
      uint64 anchor_id = 9;
      uint64 room_id = 10;
      string promote_game_id = 11;
      int32 team_join_mode = 12;
    }

    message TeamPlayMember {
      Data.User user = 1;
      int32 status = 2;
      GameRole binding_role = 3;
      GameRoleCheckInfo game_role_check_info = 4;
    }

    message TeamPlayXGameCloseMessage {
      Common common = 1;
      string text = 2;
    }

    message ToastMessage {
      Common common = 1;
      string content = 2;
    }

    message ToolBarExclusionComponent {
      uint64 component_type = 1;
      uint64 op_type_anchor = 2;
      uint64 op_type_audience = 3;
    }

    message ToolBarControlMessage {
      Common common = 1;
      int32 event_type = 2;
      int32 group_id = 3;
      int32 component_type = 4;
      int32 op_type = 5;
      string text = 6;
      string schema_url = 7;
      Data.Image icon = 8;
      uint64 show_type = 9;
      repeated ToolBarExclusionComponent high_priority_exclusion_list = 10;
      repeated ToolBarExclusionComponent low_priority_exclusion_list = 11;
      string extra = 99;
    }

    message TopLeftBubbleMessage {
      Common common = 1;
      CommonBubbleConfig bubble_config = 2;
      map<string, string> extra = 3;
    }

    message TrayEffectMessage {
      Common common = 1;
      string scene = 2;
      string sub_scene = 3;
      Data.CombinedText content = 4;
      Background background = 5;
      DynamicConfig dynamic_config = 6;
      PriorityConfig priority_config = 7;
      map<string, string> event_params = 50;

      message Background {
        Data.Image background_image = 1;
        string background_color = 2;
      }

      message ComboInfo {
        uint64 seq_id = 1;
        repeated uint64 num_list = 2;
        repeated uint64 duration_list = 3;
      }

      message DynamicConfig {
        int32 delay_time = 1;
        uint64 start_time_stamp = 2;
        uint64 allow_exceed_time = 3;
        uint64 end_time_stamp = 4;
        int32 duration = 5;
        int32 display_effect_type = 6;
        TrayEffectMessage.ComboInfo combo_info = 7;
        bool is_assemble = 8;
      }

      message PriorityConfig {
        int32 priority = 1;
        int32 priority_lower_strategy = 2;
        int32 priority_equal_strategy = 3;
        int32 priority_higher_strategy = 4;
      }
    }

    message UgLotteryStatusSyncMessage {
      Common common = 1;
      uint64 lottery_id = 2;
      uint64 lottery_type = 3;
      string icon = 4;
      string title = 5;
      string schema = 6;
      string toast = 7;
    }

    message UnionAnchorMessage {
      Common common = 1;
      string text = 2;
      map<string, string> schema = 3;
      int32 duration = 4;
    }

    message UnionGeneralMessage {
      Common common = 1;
      repeated int32 payload = 2;
      uint64 timestamp = 3;
      uint64 auth_type = 4;
    }

    message AnchorAppointmentNumUpdateMessage {
      Common common = 1;
      Data data = 2;

      message Data {
        uint64 CurrentNumber = 1;
        uint64 AnchorUID = 2;
        string anchor_open_id = 5000;
      }
    }

    message AppointmentNumberUpdateMessage {
      Common common = 1;
      Data data = 2;

      message Data {
        uint64 CurrentNumber = 1;
        uint64 AnchorUID = 2;
        string anchor_open_id = 5000;
      }
    }

    message UpdateFanTicketMessage {
      Common common = 1;
      string room_fan_ticket_count_text = 2;
      uint64 room_fan_ticket_count = 3;
      bool force_update = 4;
    }

    message CoverSuccessMessage {
      Common common = 1;
      uint64 cover_type = 2;
    }

    message UpperRightWidgetDataMessage {
      Common common = 1;
      repeated Data.UpperRightWidgetData upper_right_widget_data_list = 2;
      uint64 random_time = 3;
    }

    message UserPrivilegeChangeMessage {
      Common common = 1;
      int32 user_privilege_type = 2;
      uint64 user_id = 3;
      Data.Image avatar_border = 4;
      Data.Image thumb_avatar_border = 5;
    }

    message VerifyDecisionMessage {
      string decision_conf = 1;
      string check_reason = 2;
      Common common = 3;
      uint64 pop_time = 4;
    }

    message VideoShareMessage {
      Common common = 1;
      Data.User user = 2;
      uint64 item_id = 3;
      string item_id_str = 4;
      uint64 item_type = 5;
      string item_type_str = 6;
      string title = 7;
      uint64 author_id = 8;
      PublicAreaCommon public_area_common = 9;
      string author_open_id = 5000;
    }

    message VirtualGameActorChatMessage {
      Common common = 1;
      uint64 user_id = 2;
      uint64 actor_id = 3;
      string user_nick_name = 4;
      uint64 chat_request_time = 5;
      uint64 room_id = 6;
      string content = 7;
    }

    message VirtualActorBatchCommandMessage {
      Common common = 1;
      uint64 room_id = 2;
      repeated VirtualGameActorCommandMessage command_message_list = 3;
    }

    message VirtualGameActorCommandMessage {
      uint64 command_id = 1;
      string command_type = 2;
      uint64 user_id = 3;
      uint64 actor_id = 4;
      string user_nick_name = 5;
      uint64 actor_create_time = 6;
      uint64 actor_remove_time = 7;
      uint64 command_request_time = 8;
    }

    message VsBusinessConfigureMessage {
      Common common = 1;
      Data.BusinessConfigure business_configure = 2;
      bool all_info = 3;
      uint64 scatter_time = 4;
    }

    message VsInteractiveMessage {
      Common common = 1;
      string extra = 2;
    }

    message VSLinkRoomMessage {
      Common common = 1;
      Data.VSLinkInfo link_info = 2;
      bool all_info = 3;
      uint64 scatter_time = 4;
    }

    message VsPanelMessage {
      Common common = 1;
      string extra = 2;
    }

    message VsScheduleMessage {
      Common common = 1;
      int32 action = 2;
      uint64 match_id = 3;
      repeated uint64 event_ids = 4;
      uint64 content_id = 5;
      string match_id_str = 6;
      string content_id_str = 7;
      repeated string event_ids_str = 8;
    }

    message VsSwitchControlMessage {
      Common common = 1;
      int32 switch = 2;
      bool on = 3;
      string display_text = 4;
      string extra = 20;
    }

    message FreshmanSupportMessage {
      Common common = 1;
      uint64 number = 2;
      uint64 status = 3;
      string icon = 4;
      string extra = 5;
    }

    message MiniAppLineUpMessage {
      Common common = 1;
      string mini_app_id = 2;
      string mini_app_name = 3;
      int32 line_up_status = 4;
      string content = 5;
      uint64 duration = 6;
      map<string, string> extra = 7;
    }

    message MiniAppDetailData {
      uint64 interact_id = 1;
      string name = 2;
      repeated string icon_url = 3;
      uint64 rank = 4;
      uint64 group_type = 5;
      string extra = 6;
      repeated uint64 support_live_entrance_list = 7;
    }

    message MiniAppCommonMessage {
      Common common = 1;
      int32 scene = 2;
      string mini_app_id = 3;
      int32 action = 4;
      MiniAppDetailData data = 5;
      string open_id = 6;
    }

    message InteractOpenAppStatusMessage {
      Common common = 1;
      string app_id = 2;
      int32 status = 3;
      string display_text = 4;
      string anchor_text = 5;
    }

    message InteractOpenChatMessage {
      Common common = 1;
      repeated ChatItem items = 2;

      message ChatItem {
        repeated Data.AppUserInfo app_user_info = 1;
        string sec_nick_name = 2;
        string sec_avatar_url = 3;
        string content = 4;
        int32 timestamp = 5;
      }
    }

    message ActivityCouponInvalidMessage {
      Common common = 1;
      string room_id = 2;
      int32 invalid_type = 3;
      string anchor_toast_content = 4;
    }

    message InteractOpenDiamondMessage {
      Common common = 1;
      string app_id = 2;
      uint64 start_id = 3;
      int32 diamonds = 4;
    }

    message InteractOpenFollowingMessage {
      Common common = 1;
      repeated FollowItem items = 2;

      message FollowItem {
        repeated Data.AppUserInfo app_user_info = 1;
        string sec_nick_name = 2;
        string sec_avatar_url = 3;
        int32 action = 4;
        int32 timestamp = 5;
      }
    }

    message PerformanceFinishMessage {
      Common common = 1;
      string app_id = 2;
      string task_id = 3;
    }

    message InteractOpenRewardMessage {
      Common common = 1;
      string app_id = 2;
      uint64 start_id = 3;
      int32 reward_id = 4;
      int32 reward_count = 5;
      int32 reward_diamonds = 6;
      string reward_name = 7;
    }

    message InteractScreenshotMessage {
      Common common = 1;
      string app_id = 2;
      uint64 recall_id = 3;
    }

    message InteractOpenViolationMessage {
      Common common = 1;
      string room_id = 2;
      string app_id = 3;
      int32 violation_type = 4;
      string anchor_tips_title = 5;
      string anchor_tips_content = 6;
      string audience_tips_title = 7;
      string audience_tips_content = 8;
    }

    message PreloadMessage {
      Common common = 1;
      uint64 scene = 2;
      string param = 3;
    }

    message RoomIndicatorMessage {
      Common common = 1;
      uint64 biz_type = 2;
      uint64 status = 3;
      CommonBizInfo biz_info = 4;
    }

    message CommonBizInfo {
      string jump_schema = 1;
      repeated BizContent contents = 2;
      string extra = 3;
    }

    message HotText {
      uint64 number = 1;
      string text_content = 2;
    }

    message BizContent {
      int32 content_type = 1;
      uint64 number = 2;
      string text_content = 3;
      Data.Image image_content = 4;
      HotText hot_text_content = 5;
    }

    message TrafficSceneMessage {
      Common common = 1;
      uint64 number = 2;
      uint64 status = 3;
      string icon = 4;
      uint64 type = 5;
      bool is_keep = 6;
    }

    message WelfareProjectOperateMessage {
      Common common = 1;
      uint64 op_type = 2;
      Data.WelfareProjectInfo project = 3;
    }

    message WishFinishMessage {
      Common common = 1;
      Data.Image gesture_image_single = 2;
      Data.Image gesture_image_double = 3;
      uint64 display_seconds = 4;
      uint64 effect_id = 5;
    }

    message AudienceGiftSyncData {
      repeated Data.GiftAudienceReceiverItem audience_receiver_list = 1;
      uint64 sync_type = 2;
    }

    message CameraShareStateSyncData {
      int32 share_state = 1;
    }

    message RoomChannelLinkMicSyncData {
      repeated Data.ChannelListUser channel_link_users = 1;
      uint64 placeholder = 2;
      string rtc_room_id_str = 3;
    }

    message ChatCarnivalSyncData {
      ChatCarnivalMessage data = 1;
    }

    message Comment {
      uint64 comment_id = 1;
      User comment_user = 2;
      string text = 3;
      int32 tag = 4;
      bool public = 5;
      uint64 create_timestamp = 6;
      int32 thumbup_number = 7;
      repeated Comment children_comment = 8;
      int32 audit = 9;
      bool first_reply = 10;
      DressInfo dress_info = 11;

      message User {
        uint64 id = 1;
        uint64 short_id = 2;
        string nickname = 3;
        Data.Image avatar_thumb = 5;
        Data.User.AuthenticationInfo authentication_info = 6;
      }

      message DressInfo {
        uint64 cover_id = 1;
        uint64 badge_id = 2;
      }
    }

    message CommentsSyncData {
      repeated string comments = 1;
      uint64 next_timestamp = 2;
      int32 total_comment_number = 3;
    }

    message DoubleLikeDetailV2 {
      bool double_flag = 1;
      int32 seq_id = 2;
      int32 renewals_num = 3;
      int32 triggers_num = 4;
    }

    message DoubleLikeSyncData {
      DoubleLikeDetailV2 doubleLikeStatus = 1;
      Data.Text self_display_text = 2;
      Data.Text normal_display_text = 3;
    }

    message FastChatSyncData {
      int32 chat_support_type = 1;
      string toast = 2;
      string hint = 4;
      string color = 5;
      repeated string fast_chat = 3;
      bool fast_chat_switch = 6;
    }

    message FixedChatSyncData {
      string hint = 1;
      FastChatInfo fast_chat_info = 2;
      FixedChatInfo fixed_chat_info = 3;
    }

    message FastChatInfo {
      bool fast_chat_switch = 1;
      string bubble_color = 2;
      repeated FastChatDetail fast_chat_list = 3;

      message FastChatDetail {
        uint64 type = 1;
        string content = 2;
      }
    }

    message FixedChatInfo {
      repeated string fixed_chat_list = 1;
      repeated EmojiDetail fixed_emoji_list = 2;
      string title_color = 3;
      string text_default_color = 4;
      string text_selected_color = 5;
      Data.Image cancel_icon = 6;

      message EmojiDetail {
        uint64 id = 1;
        Data.Image content = 2;
      }
    }

    message GeneralCarnivalSyncData {
      GeneralCarnivalMessage carnival_message = 1;
      uint64 MillSecondTimeStamp = 2;
    }

    message GeneralCarnivalMessage {
      Common common = 1;
      uint64 seq_id = 2;
      uint64 user_start_timestamp_milliseconds = 3;
      uint64 user_start_milliseconds = 4;
      uint64 duration = 5;
      uint64 min_remaining_duration = 6;
      string background_color = 7;
      string word_color = 8;
      Data.Image title_image = 9;
      uint64 show_webp = 10;
      string pre_content = 11;
      string content = 12;
      bool countdown_exit = 13;
      string exit_content = 14;
      uint64 exit_countdown_duration = 15;
      bool can_jump = 16;
      string schema = 17;
      uint64 move_speed = 18;
      map<int32, CarnivalDanmakuItemList> danmaku_style_map = 19;
      uint64 use_privilege_region = 20;
      repeated CarnivalEggItem egg_style = 21;
      repeated uint64 egg_show_range = 22;
      uint64 can_open_contour = 23;
      SpecialDanmakuPlay special_danmaku_play = 24;
      map<string, string> extra = 25;

      message CarnivalDanmakuItem {
        string content_color = 1;
        FlexImageStruct background = 2;
        uint64 background_hight = 3;
        uint64 background_width = 4;
        uint64 use_rate = 5;
        uint64 font_size = 6;
      }

      message CarnivalDanmakuItemList {
        CarnivalDanmakuItem danmaku_item_list = 1;
      }

      message CarnivalEggItem {
        Data.Image background = 1;
        uint64 background_hight = 2;
        uint64 background_width = 3;
        uint64 use_rate = 4;
        uint64 is_dynamic_egg = 5;
        bool show_alone = 6;
      }

      message SpecialDanmakuPlay {
        uint64 play_type = 1;
        EcomRedPacket ecom_red_packet = 2;

        message EcomRedPacket {
          CarnivalEggItem red_packet = 1;
          string play_content = 2;
        }
      }
    }

    message HighlightContainerSyncData {
      repeated HighlightItem highlight_items = 1;
      uint64 sync_version = 2;
      CarouselInfo carousel_info = 3;
    }

    message HighlightItem {
      uint64 item_id = 1;
      uint64 version = 2;
      uint64 end_time = 3;
      Position position = 4;
      int32 data_type = 100;
      HighlightDataCommonText common_text = 101;
      HighlightDataAppointment appointment_data = 102;
      HighlightDataAnswer answer_data = 103;
      HighlightDataComment comment_data = 104;
      HighlightDataVideo video_data = 105;
      HighlightDataMicroApp micro_app_data = 106;
      HighlightDataImCommon im_common_data = 107;
      HighlightDataCommonPictureText common_picture_text_data = 199;
      map<string, string> buried_point = 200;
    }

    message HighlightTempInfo {
      string item_id = 1;
      string item_cover = 2;
      string item_name = 3;
      string item_content = 4;
      string schema = 5;
    }

    message Position {
      double position_x = 1;
      double position_y = 2;
    }

    message CarouselInfo {
      uint64 time = 1;
      repeated uint64 item_group = 2;
    }

    message OperateInfo {
      Data.Text creator_text = 1;
      uint64 creator_uid = 2;
      string creator_open_uid = 5000;
    }

    message PinCommon {
      Data.Text top_title = 1;
      OperateInfo operate_info = 2;
    }

    message PictureTextStyle {
      Data.Text text = 1;
      Data.Text sub_text = 2;
      Data.Image picture = 3;
      string schema = 4;
    }

    message HighlightDataCommonText {

    }

    message HighlightDataAppointment {
      uint64 appointment_timestamp = 1;
      bool demotion = 2;
      uint64 anchor_uid = 3;
      uint64 current_number = 4;
      string text = 5;
      uint64 appointment_id = 6;
      int32 scheduled_time = 7;
      int32 scheduled_date = 8;
      repeated int32 scheduled_weekdays = 9;
      int32 show_duration = 10;
      string date_text = 11;
      string time_text = 12;
    }

    message HighlightDataAnswer {
      string scene = 1;
      uint64 answer_id = 2;
      string question = 3;
      string answer = 4;
      uint64 audience_number = 5;
      string audience_number_str = 6;
      string nick_name = 7;
      uint64 anchor_id = 8;
      uint64 commenter_id = 9;
      uint64 question_msg_id = 10;
      uint64 answer_msg_id = 11;
      PinCommon pin_common = 255;
      string anchor_open_id = 5000;
      string answer_open_id = 5001;
      string commenter_open_id = 5002;
    }

    message HighlightDataComment {
      string scene = 1;
      uint64 chat_id = 2;
      string content = 3;
      string nick_name = 4;
      uint64 commenter_id = 5;
      uint64 msg_id = 6;
      uint64 pre_id = 7;
      PinCommon pin_common = 255;
      string commenter_open_id = 5000;
    }

    message HighlightDataVideo {
      string scene = 1;
      uint64 video_pin_id = 2;
      string url = 3;
      uint64 item_id = 4;
      uint64 item_type = 5;
      string title = 6;
      string nick_name = 7;
      uint64 msg_id = 8;
      uint64 role = 9;
      PinCommon pin_common = 255;
    }

    message HighlightDataMicroApp {
      string scene = 1;
      uint64 pin_id = 2;
      uint64 msg_id = 3;
      string micro_app_id = 4;
      string micro_app_avatar = 5;
      string micro_app_name = 6;
      string micro_app_introduction = 7;
      string schema = 8;
      string nick_name = 9;
      PinCommon pin_common = 255;
    }

    message HighlightDataImCommon {
      string scene = 1;
      uint64 pin_id = 2;
      uint64 msg_id = 3;
      string title = 4;
      Data.Text display_text = 5;
      PictureTextStyle picture_text_style = 100;
      PinCommon pin_common = 255;
    }

    message HighlightDataCommonPictureText {
      string scene = 1;
      uint64 pin_id = 2;
      string content_id = 3;
      PictureTextStyle picture_text_style = 10;
      PinCommon pin_common = 255;
    }

    message InfoBoxSyncData {
      Common common = 1;
      uint64 scene = 2;
      string sub_scene = 3;
      uint64 msg_type = 4;
      uint64 delay = 5;
      string title = 6;
      string fold_title = 7;
      Data.Text content = 8;
      uint64 drag_type = 9;
      InfoBoxBackGround background = 10;
    }

    message InfoBoxBackGround {
      uint64 background_alpha = 1;
      string background_color = 2;
      Data.Image background_image = 3;
    }

    message InputPanelComponentSyncData {
      PanelComponentItem data = 1;
    }

    message PanelComponentItem {
      int32 type = 1;
      int32 status = 2;
      Data.Image icon = 21;
      string display_text = 22;
      string schema_url = 23;
    }

    message InteractEffectSyncData {
      string anchor_id = 1;
      string room_id = 2;
      map<string, Data.Stickers> anchor_stickers = 3;
      string anchor_open_id = 5000;
    }

    message WebcastInteractControlSyncData {
      Common common = 1;
      string room_id = 2;
      string time_stamp = 3;
      repeated ClientOperation anchor_operation = 4;
      repeated ClientOperation audience_operation = 5;
    }

    message IntercomChangeSyncData {
      uint64 intercom_status = 1;
      uint64 close_reason = 2;
    }

    message KtvDressSyncData {
      Data.MidiSkinDressInfo dress_info = 1;
      uint64 song_id = 2;
      uint64 singer_id = 3;
      string singer_open_id = 5000;
    }

    message KtvMultiChorusSyncData {
      Data.MultiChorusUpdateMessage update_msg = 1;
    }

    message KtvStreamSingSyncData {
      Data.KtvSongStruct song = 1;
      Data.KtvAtmosphereVideoInfo video_info = 2;
      uint64 time_stamp = 3;
      int32 action = 4;
      Data.KTVMVInfo mv_info = 5;
    }

    message LikeEggSyncData {
      string content = 1;
      LikeEggTrayColor trayColor = 2;
      uint64 user_start_timestamp = 3;
      uint64 user_start_second = 4;
      uint64 duration = 5;
      LikeEggJumpDetail jump_detail = 6;
      string prepare_content = 7;
      uint64 prepare_duration = 8;
      string finish_content = 9;
      uint64 finish_duration = 10;
      Common common = 255;
    }

    message LikeEggJumpDetail {
      int32 type = 1;
      GroupPhotoJumpDetail photo_jump_detail = 2;
      TemplatePhotoJumpDetail template_photo_jump_detail = 3;
    }

    message GroupPhotoJumpDetail {
      Data.Image group_photo = 1;
      repeated FieldLocation location_list = 2;
      int32 width = 4;
      int32 height = 5;
      string share_content = 6;
    }

    message TemplatePhotoJumpDetail {
      repeated TemplateInfo template_list = 1;
      string template_panel_title = 2;
      string photo_panel_title = 3;
      Data.Image bg_photo = 4;
    }

    message TemplateInfo {
      string template_id = 1;
      Data.Image template_photo = 2;
      string author_name = 3;
      string template_title = 4;
      bool support_replace = 5;
      string replace_content = 6;
    }

    message LikeEggTrayColor {
      string background_color = 1;
      string bar_color = 2;
    }

    message FieldLocation {
      int32 location_x = 1;
      int32 location_y = 2;
    }

    message RoomLinkMicSyncData {
      repeated Data.ListUser linked_users = 1;
      map<int64, Data.RoomLinkerContent> linker_content_map = 2;
      Data.LinkerBaseInfo linker_base_info = 3;
      repeated Data.LinkmicPositionItem locked_positions = 4;
      repeated Data.LinkmicPositionItem positions = 5;
      uint64 placeholder = 6;
      Data.ClientUIInfo client_ui_info = 7;
      uint64 version = 8;
    }

    message RoomLinkMicAnchorSettingsSyncData {
      repeated Data.LinkmicSetting settings = 1;
    }

    message RoomLinkmicMicDisplayInfo {
      uint64 room_id = 1;
      map<int64, Data.MicDress> mic_dress_info = 2;
      map<string, Data.MicDress> open_mic_dress_info = 5000;
    }

    message RoomLinkmicMicDisplayInfoSyncData {
      uint64 room_id = 1;
      map<int64, RoomLinkmicMicDisplayInfo> room_display_info = 2;
    }

    message RoomLinkMicProfitEggSyncData {
      Data.LinkmicProfitRoomEggInfo room_egg_info = 1;
    }

    message LotteryInfoSyncData {
      uint64 lottery_id = 1;
      uint64 lucky_count = 2;
      uint64 candidate_total_count = 3;
      uint64 last_candidate_total_count_surge_timestamp = 4;
      uint64 lottery_type = 5;
      uint64 prize_count = 6;
      uint64 start_time = 7;
      uint64 draw_time = 8;
      uint64 enabled_dilatation = 9;
      string dilatation_config_detail = 10;
      bool dilatation_now = 11;
      uint64 prize_count_before_dilatation = 12;
      uint64 lucky_count_before_dilatation = 13;
    }

    message MatchDynamicIslandSyncData {
      Common common = 1;
      string data = 2;
    }

    message MicroAppStartSyncData {
      string app_id = 1;
      string audience_start_msg = 2;
      string anchor_start_msg = 3;
    }

    message MoreLiveSyncData {
      Data.MoreLiveEntrance info = 1;
    }

    message OfChannelShowlistSyncData {
      uint64 channel_uid = 1;
      uint64 channel_anchor_id = 2;
      string showlist_text = 3;
      string showlist_schema = 4;
      string showlist_name = 5;
      string channel_name = 6;
      uint64 showlist_id = 7;
      string channel_openid = 5000;
      string channel_anchor_open_id = 5001;
    }

    message OrderSingSyncData {
      Data.OrderSingMVInfo mv_info = 1;
    }

    message PermissionCheckTriggerSyncData {
      uint64 trigger = 1;
      uint64 max_delay_time = 2;
    }

    message PreviewCommentSyncData {
      string hot_comment = 1;
      uint64 hot_comment_time = 2;
      uint64 hot_comment_sequence_id = 3;
    }

    message PreviewControlSyncData {
      uint64 action = 1;
    }

    message PreviewExtendAreaSyncData {
      Data.Image extend_icon = 1;
      string extend_pre_text = 2;
      string extend_text = 3;
      int32 extend_type = 4;
      string extra = 5;
      int32 use_marquee = 6;
      int32 icon_type = 7;
      repeated Part right_part = 8;
      string button_part = 9;
      repeated Part mid_part = 10;
      bool need_delimiter = 11;
      repeated Part bottom_part = 12;
      int32 ui_type = 13;
      int32 version = 14;
      ActionConfig action_cfg = 17;
      bool use_pass_through_extra_json = 18;
      string pass_through_extra_json = 19;
      map<string, string> extra_enter_room = 20;
      string extra_business = 21;

      message Part {
        int32 fontSize = 1;
        int32 interval = 2;
        string text = 3;
        bool cuttable = 4;
        bool deleted = 5;
        string font_color = 6;
        bool bold = 7;
      }

      message ActionConfig {
        int32 areaAction = 1;
        map<string, string> actionPrams = 2;
      }
    }

    message PreviewFeaturedChatSyncData {
      Data.Image icon = 1;
      uint64 type = 2;
      repeated ChatItem featured_chat_list = 3;

      message ChatItem {
        uint64 msg_id = 1;
        string featured_chat = 2;
        uint64 event_time = 3;
        string guide_text = 4;
      }
    }

    message PreviewPromotionSyncData {
      Data.Image icon = 1;
      string text = 2;
      LuckyBag lucky_bag = 3;
      uint64 type = 4;
      repeated ChatItem featured_chat_list = 5;
      LuckyMoney lucky_money = 6;
      CjRp cjrp = 7;

      message LuckyBag {
        uint64 lottery_id = 1;
        uint64 start_at = 2;
        uint64 draw_at = 3;
      }

      message ChatItem {
        uint64 msg_id = 1;
        string featured_chat = 2;
        uint64 event_time = 3;
        string guide_text = 4;
      }

      message LuckyMoney {
        uint64 box_id = 1;
        uint64 start_at = 2;
        uint64 delay_seconds = 3;
        uint64 display_end_at = 4;
        uint64 status = 5;
        string text = 6;
      }

      message CjRp {
        string rp_order_no = 1;
        uint64 send_time = 2;
        uint64 expire_time = 3;
        uint64 display_delay_seconds = 4;
        uint64 status = 5;
        string currency = 6;
        string icon = 7;
        string text = 8;
        uint64 total_amount = 9;
        uint64 left_amount = 10;
        uint64 total_num = 11;
        uint64 left_num = 12;
      }
    }

    message RiskAdviseSyncData {
      uint64 create_time = 1;
      Data.Text advise_text = 2;
    }

    message RoomChannelSettingsSyncData {
      uint64 channel_id = 1;
      bool link_mic_switch = 2;
      bool enter_approve_switch = 3;
      bool member_invite_switch = 4;
    }

    message ScheduleSyncData {
      string schedule_id = 1;
      WebcastStatus target_status = 2;
      int32 scene = 3;

      message WebcastStatus {
        int32 status = 1;
        string appointment_id = 2;
        string room_id = 3;
        string replay_id = 4;
      }
    }

    message ShelfCardAtmosphereSyncData {
      uint64 room_id = 1;
      uint64 card_id = 2;
      repeated Data.Image img = 3;
      uint64 sale_num = 4;
      int32 duration = 5;
    }

    message ShelfCardSupplementSyncData {
      uint64 room_id = 1;
      uint64 card_id = 2;
      map<int32, ShelfSupplementInfo> supplement_map = 3;
      string supplement_card_map_str = 4;
    }

    message ShelfSupplementInfo {
      string context = 1;
      string type_str = 2;
      uint64 amount = 3;
      repeated Data.Image user_img = 4;
    }

    message ShelfCardSupplementMap {
      map<int64, ShelfCardSupplementInfo> card_info_map = 1;
    }

    message ShelfCardSupplementInfo {
      repeated Data.ProductLabelInfo label_list = 1;
    }

    message SandwichBorderMessage {
      Common common = 1;
      SandwichBorder sandwich_border_info = 2;
    }

    message SandwichBorder {
      double top = 1;
      double bottom = 2;
      double left = 3;
      double right = 4;
    }

    message AIAutoReplyMessage {
      Common common = 1;
      uint64 reply_msg_id = 2;
      string reply_content = 3;
      PublicAreaCommon public_area_common = 4;
      string schema = 5;
      map<string, string> tag = 200;
    }

    message AIBootMessage {
      Common common = 1;
      string schema = 2;
      map<string, string> tag = 200;
    }

    message AudioDumpSupportMessage {
      Common common = 1;
      string biz_content = 2;
    }

    message AnchorLinkmicAudioPunishMessage {
      Common common = 1;
      Data.AnchorLinkmicAudioPunishInfo info = 2;
    }

    message AnchorLinkmicBizMessage {
      Common common = 1;
      int32 status = 2;
      int32 biz_type = 3;
      string title = 4;
      string title_schema_url = 5;
      uint64 status_start_time_ms = 6;
      string game_app_id = 7;
    }

    message AnchorLinkmicSilenceMessage {
      Common common = 1;
      int32 silence_action = 2;
      string from_user_id = 3;
      string to_user_id = 4;
      string from_user_open_id = 5000;
      string to_user_open_id = 5001;
    }

    message AnchorRoomDataChangeMessage {
      Common common = 1;
      Data.Text top_text = 2;
      Data.Text bottom_text = 3;
      uint64 message_type = 4;
      string extra = 5;
    }

    message PcRealtimeSuggest {
      string id = 1;
      string text = 2;
      string schema_url = 3;
      string button_text = 4;
      string action_key = 5;
      string send_time = 6;
      int32 duration = 7;
      Data.Image icon = 8;
      map<string, string> params = 9;
      string extra = 10;
    }

    message PcBarStyle {
      string left_icon = 1;
      string right_icon = 2;
      string background_color = 3;
      string text_color = 4;
      bool has_frame = 5;
      string frame_begin = 6;
      string frame_end = 7;
      string background = 8;
    }

    message PcBarMessage {
      int32 pc_show_type = 1;
      string text = 2;
      string button_text = 3;
      string action_key = 4;
      string schema_url = 5;
      int32 duration = 6;
      PcBarStyle bar_style = 7;
      map<string, string> params = 8;
      string tab_key = 9;
      string extra = 10;
    }

    message PcBizMessage {
      string tab_key = 1;
      string content = 2;
      map<string, string> params = 3;
    }

    message PCRoomPanelNotifyMessage {
      Common common = 1;
      PcBizMessage biz_message = 2;
    }

    message LinkmicPlayModeUpdateScoreMessage {
      Common common = 1;
      uint64 live_id = 2;
      uint64 app_id = 3;
      uint64 room_id = 4;
      uint64 anchor_id = 5;
      uint64 from_user_id = 6;
      uint64 to_user_id = 7;
      int32 score_source = 8;
      uint64 hot_score = 9;
      string idempotent_id = 10;
      uint64 msg_t_ms = 11;
      string extra = 12;
      GiftContent gift_content = 13;
      string user_linkmic_unique_id = 14;
      Data.User from_user = 15;
      Data.User to_user = 16;
      string anchor_open_id = 5000;
      string from_user_open_id = 5001;
      string to_user_open_id = 5002;
    }

    message GiftContent {
      uint64 gift_id = 1;
      uint64 gift_count = 2;
      uint64 diamond_count = 3;
    }

    message AvatarRoomLeaveNotify {
      int32 leave_reason = 1;
      uint64 format_id = 2;
      string room_id = 3;
      uint64 last_ping_time = 4;
    }

    message PackageMeta {
      int32 total = 1;
      int32 sequence = 2;
    }

    message AvatarCommon {
      uint64 format_id = 1;
      uint64 room_id = 2;
      uint64 biz_request_id = 3;
    }

    message AvatarAudioMeta {
      string format = 1;
      int32 rate = 2;
      int32 bits = 3;
      int32 channel = 4;
    }

    message AvatarAudioData {
      PackageMeta meta = 1;
      AvatarAudioMeta audio = 2;
      bytes data = 3;
    }

    message AvatarTextData {
      PackageMeta meta = 1;
      bytes data = 2;
    }

    message AvatarWord {
      string word = 1;
      float start = 2;
      float end = 3;
    }

    message AvatarPhone {
      string phone = 1;
      float start = 2;
      float end = 3;
    }

    message AvatarAudioContent {
      bytes data = 1;
      uint64 duration = 2;
      repeated AvatarWord words = 3;
      repeated AvatarPhone phonemes = 4;
      AvatarAudioMeta audio = 5;
    }

    message AvatarChatMessage {
      PackageMeta meta = 1;
      string role = 2;
      string type = 3;
      string content_type = 4;
      string content = 5;
      uint64 time = 6;
      AvatarAudioContent audio = 7;
      int32 word_interval = 8;
    }

    message AvatarInstructionRequest {
      AvatarCommon biz_common = 1;
      int32 instruction = 2;
      string query = 3;
      string answer = 4;
      string extra = 5;
    }

    message AvatarInstructionResponse {
      AvatarCommon biz_common = 1;
      string msg_id = 2;
      int32 instruction = 3;
      int32 code = 10;
      string status = 11;
    }

    message AvatarAudioToTextRequest {
      AvatarCommon biz_common = 1;
      AvatarAudioData audio = 2;
    }

    message AvatarAudioToTextResponse {
      AvatarCommon biz_common = 1;
      int32 code = 2;
      string status = 3;
      AvatarChatMessage data = 4;
      string review_id = 5;
      string his_offset_id = 6;
      string msg_id = 7;
    }

    message AvatarChatRequest {
      AvatarCommon biz_common = 1;
      AvatarTextData text = 2;
    }

    message AvatarChatResponse {
      AvatarCommon biz_common = 1;
      string msg_id = 2;
      int32 code = 10;
      string status = 11;
    }

    message AvatarChatResumeRequest {
      AvatarCommon biz_common = 1;
      int32 type = 2;
      string rsp_id = 3;
      int32 latest_sequence = 4;
      string extra = 5;
    }

    message AvatarChatResumeResponse {
      AvatarCommon biz_common = 1;
      string query = 2;
      bool full_data = 3;
      int32 data_type = 4;
      bool new_segment = 5;
      AvatarChatMessage data = 6;
      string review_id = 7;
      string his_offset_id = 8;
      string msg_id = 9;
      int32 code = 10;
      string status = 11;
    }

    message AvatarRoomStateRequest {
      AvatarCommon biz_common = 1;
    }

    message AvatarRoomStateResponse {
      AvatarCommon biz_common = 1;
      int32 talk_state = 2;
      int32 user_interactive_mode = 3;
      int32 avatar_interactive_mode = 4;
      int32 code = 10;
      string status = 11;
    }

    message AvatarTextToAudioRequest {
      AvatarCommon biz_common = 1;
      string text = 2;
    }

    message AvatarTextToAudioResponse {
      AvatarCommon biz_common = 1;
      int32 code = 2;
      string status = 3;
      AvatarChatMessage data = 4;
    }

    message AvatarChatData {
      AvatarCommon biz_common = 1;
      int32 code = 2;
      string status = 3;
      int32 data_type = 4;
      bool new_segment = 5;
      AvatarChatMessage data = 6;
      string review_id = 7;
      string his_offset_id = 8;
      string msg_id = 9;
    }

    message AvatarMessage {
      Common common = 1;
      int32 cmd = 2;
      bytes payload = 3;
      map<string, string> context = 4;
    }

    message BackupSEIMessage {
      Common common = 1;
      string source = 3;
      string sei_data = 4;
      string stream_id = 5;
    }

    message BattleLikeAnchorMessage {
      Common common = 1;
      Data.Image like_effect = 2;
    }

    message BattleAuxiliaryMessage {
      Common common = 1;
      int32 type = 2;
      InviteContent invite_content = 3;
      ReplyContent reply_content = 4;
      SwitchContent switch_content = 5;
      CloseContent close_content = 6;
      RejectContent reject_content = 7;
      UpdateContent update_content = 8;
      string lynx_data = 9;

      message CloseContent {
        string close_content = 1;
      }

      message InviteContent {
        string invite_string = 1;
        map<int64, Data.AuxiliaryScoreInfo> anchor_auxiliary_score_info = 2;
        string title = 3;
      }

      message ReplyContent {
        string reply_string = 1;
        map<int64, Data.AuxiliaryScoreInfo> anchor_auxiliary_score_info = 2;
        map<int64, Data.AuxiliaryEffectInfo> auxiliary_effect_info = 3;
        Data.BattleAuxiliaryData auxiliary_data = 4;
      }

      message SwitchContent {
        string switch_string = 1;
        string title = 2;
        map<int64, Data.AuxiliaryScoreInfo> anchor_auxiliary_score_info = 3;
      }

      message RejectContent {
        string reject_content = 1;
      }

      message UpdateContent {
        map<int64, Data.AuxiliaryScoreInfo> auxiliary_score_infos = 92;
      }
    }

    message BattleMatchCancelMessage {
      Common common = 1;
      uint64 from_user_id = 2;
      uint64 to_user_id = 3;
      uint64 cancel_type = 4;
      string toast = 5;
      string client_attached_info = 6;
      string from_open_id = 5000;
      string to_open_id = 5001;
    }

    message BattleMatchInviteMessage {
      Common common = 1;
      uint64 from_user_id = 2;
      uint64 from_room_id = 3;
      uint64 to_user_id = 4;
      uint64 to_room_id = 5;
      int32 invite_type = 6;
      int32 match_type = 7;
      uint64 wait_sec = 8;
      string client_attached_info = 9;
      Data.BattleLinkerInviteMessageExtra message_extra = 10;
      string battle_attached_info = 11;
      string from_open_id = 5000;
      string to_open_id = 5001;
    }

    message BattleNotifyPointMessage {
      Common common = 1;
      uint64 user_id = 2;
      string battle_attached_info = 3;
      uint64 msg_type = 4;
      string biz_extra = 5;
      string open_id = 5000;
    }

    message LargeMatchBizExtra {
      repeated LargeMatchUser users = 1;
      uint64 match_type = 2;

      message LargeMatchUser {
        uint64 room_id = 1;
        uint64 user_id = 2;
        string open_id = 5000;
      }
    }

    message SwitchSongVolumeContent {
      uint64 singer_volume = 1;
      uint64 accompaniment_volume = 2;
      uint64 chorus_singers_volume = 3;
    }

    message KtvEffectDegradeContent {
      repeated uint64 effect_types = 1;
      string effect_types_str = 2;
    }

    message PrepareDownloadSongMaterialsContent {
      Data.KtvSongStruct music_list = 1;
    }

    message SwitchAvatarContent {
      uint64 AvatarID = 1;
    }

    message SwitchAvatarActionContent {
      uint64 avatar_id = 1;
      int32 action_type = 2;
      uint64 single_action_id = 3;
      uint64 loop_action_index = 4;
    }

    message SwitchAvatarVADModeContent {
      int32 mode = 1;
    }

    message SwitchUserStatusContent {
      int32 type = 1;
    }

    message SendSignalContent {
      int32 type = 1;
    }

    message TurnOverCameraContent {

    }

    message BigEventVirtualMessage {
      Common common = 1;
    }

    message BroadcastPCUMessage {
      Common common = 1;
      uint64 aweme_live_preview_pcu = 2;
    }

    message RTCInfo {
      string user_id = 1;
      string rtc_extra_info = 2;
      string live_core_extra_info = 3;
    }

    message DeviceViewInfo {
      uint64 device_id = 1;
      string device_model = 2;
      uint64 view_id = 3;
      RTCInfo rtc_info = 4;
    }

    message CameraDirectorNotifyMessage {
      Common common = 1;
      int32 status = 2;
      string toast = 3;
      uint64 connected_num = 4;
      DeviceViewInfo current_device_view = 5;
      DeviceViewInfo main_device_view = 6;
      DeviceViewInfo sub_device_view = 7;
    }

    message RoomVoiceInfo {
      string user_id = 1;
      uint64 voice = 2;
      string open_uid = 5000;
    }

    message AnchorLinkGameVoiceMessage {
      Common common = 1;
      string user_id = 2;
      repeated RoomVoiceInfo voice_infos = 3;
      string open_uid = 5000;
    }

    message ContentOpenBizCommonMessage {
      Common common = 1;
      string biz_define_text = 2;
      string biz_define_id = 3;
      string biz_key = 4;
      string biz_extra = 5;
    }

    message ContentOpenIntentRecognitionMessage {
      Common common = 1;
      repeated ContentOpenIntentRecognitionResult result = 2;
    }

    message ContentOpenIntentRecognitionResult {
      string intent = 1;
      uint64 result = 2;
    }

    message ContentOpenPicoLikeMessage {
      Common common = 1;
      uint64 count = 2;
      string emoji = 3;
      Data.User user = 4;
      Data.EmojiMaterial emojiMaterial = 5;
      uint64 total_count = 6;
      string total_count_desc = 7;
    }

    message ContentOpenPriScreenChatMessage {
      Common common = 1;
      Data.User user = 2;
      string content = 3;
      PublicAreaCommon public_area_common = 4;
      uint64 style = 5;
      uint64 activity_danmu_background = 6;
      Data.Text rtf_content = 7;
      Data.Text rtf_content_v2 = 8;
    }

    message ContentOpenRetainPopupWindowMessage {
      Common common = 1;
      int32 window_type = 2;
    }

    message ContentOpenTrackReportMessage {
      Common common = 1;
      int32 event_type = 2;
      uint64 event_time = 3;
      string unique_id = 4;
      string open_room_id = 5;
      string biz_extra = 255;
    }

    message ContentOpenTreasureTouchMessage {
      Common common = 1;
      repeated Data.ContentOpenTreasureTouchItem items = 2;
      int32 event_type = 3;
      string payload = 4;
    }

    message DiamondScoreMessage {
      Common common = 1;
      string extra = 2;
    }

    message EntertainmentPaidDataMessage {
      Common common = 1;
      EntertainmentPaidData entertainment_paid_data = 2;
    }

    message ProductSimpleInfo {
      string spu_id = 1;
      string sku_id = 2;
    }

    message ItemContentInfo {
      string item_id = 1;
      string series_id = 2;
      int32 episode_rank = 3;
      int32 video_type = 4;
    }

    message EntertainmentPaidData {
      int32 right_type = 1;
      int32 business_type = 2;
      repeated ProductSimpleInfo product_info_list = 3;
      repeated ItemContentInfo item_info_list = 4;
      ItemContentInfo current_item_info = 5;
      int32 payment_order_type = 6;
      int32 purchase_from_source_type = 7;
      string order_id = 8;
    }

    message GameBackgroundImageMessage {
      Common common = 1;
      Data.Image image = 2;
      uint64 change_ms = 3;
    }

    message OnLiveBubbleMessage {
      uint64 msg_id = 1;
      string text = 2;
      string title = 3;
      uint64 msg_type = 4;
      string button_text = 5;
      uint64 button_type = 6;
      string button_jump_url = 7;
      uint64 width = 8;
      uint64 height = 9;
      bool need_ack = 10;
    }

    message GameOnLivePromoteGuideMessage {
      Common common = 1;
      OnLivePromoteGuideMessage on_live_promote_guide_message = 2;
    }

    message GameOnLiveBubbleMessage {
      Common common = 1;
      OnLiveBubbleMessage on_live_bubble_message = 2;
    }

    message GuideMessageGameInfo {
      string game_id = 1;
      string game_icon = 2;
      bool is_tri_contract = 3;
    }

    message OnLivePromoteGuideMessage {
      string title = 1;
      string main_text = 2;
      string sub_text = 3;
      string search_text = 4;
      uint64 window_type = 5;
      GuideMessageGameInfo promote_game_info = 6;
      GuideMessageGameInfo recognition_game_info = 7;
      uint64 ban_end_ts = 8;
      string pc_helper_game_list_page_url = 9;
      string pc_helper_game_promote_page_url = 10;
    }

    message GameRoomStickerOprMessage {
      Common common = 1;
      int32 opr_type = 2;
      int32 sticker_type = 3;
      GameRoomStickerSize sticker_size = 4;
      string data = 5;
      string data_digest = 6;
      string sticker_url = 7;
      string record_id = 8;
      string sei_data = 9;
      string game_id = 10;
    }

    message GameRoomStickerSize {
      uint64 width = 1;
      uint64 height = 2;
    }

    message GiftSortMessage {
      Common common = 1;
      int32 message_type = 2;
      uint64 min_consume_level = 3;
      Data.GiftSortStrategy scene_insert_strategy = 4;
      map<int32, Data.GiftStruct> gift_details = 5;
    }

    message GroupLiveActivityRewardChangeMessage {
      repeated Data.GroupLiveActivityRewardData data = 1;
      Common common = 2;
    }

    message GroupLiveContainerChangeMessage {
      repeated Data.GroupLiveContainerData data = 1;
      Common common = 2;
    }

    message GroupLiveContainerFlowChangeMessage {
      Common common = 1;
      Data.GroupLiveContainerFlowData data = 2;
      uint64 calculate_time = 3;
    }

    message GroupLiveGiftRecipientRecommendMessage {
      Common common = 1;
      uint64 recipient_user_id = 2;
      uint64 change_reason_enum = 3;
      string recipient_user_open_id = 5000;
      map<string, string> extra = 4;
    }

    message GroupLiveIncomeChangeMessage {
      Common common = 1;
      repeated Data.GroupLiveIncomeInfo member_incomes = 2;
      uint64 calculate_time = 3;
    }

    message HotWord {
      uint64 sequence_id = 1;
      uint64 repeat_count = 2;
      string display_count = 3;
      bool mock_counter = 4;
      string pre_content = 5;
      Data.Text rtf_content = 6;
      uint64 show_duration = 7;
    }

    message NewHotGatherMessage {
      Common common = 1;
      repeated HotWord hot_word_list = 2;
      uint64 switch_duration = 3;
    }

    message InteractEffectOpenDataMessage {
      Common common = 1;
      uint64 effect_id = 2;
      string extra = 3;
      string tea_log = 4;
      uint64 message_type = 5;
      uint64 arg1 = 6;
      uint64 arg2 = 7;
      string arg3 = 8;
    }

    message InteractionGameContainerFlowChangeMessage {
      Common common = 1;
      Data.InteractionGameContainerFlowData data = 2;
      uint64 calculate_time = 3;
    }

    message InteractionPlayBanMessage {
      Common common = 1;
      string title = 2;
      string text = 3;
      string detail_url = 4;
    }

    message InteractionPlayInfoMessage {
      Common common = 1;
      int32 status = 2;
      uint64 play_info_id = 3;
    }

    message InteractionPlayAuthEventParam {
      string promote_game_id = 1;
      string game_name = 2;
    }

    message TwoElementAgreement {
      string agreement_text = 1;
      string agreement_url = 2;
    }

    message InteractionPlayRoomStickerOprMessage {
      Common common = 1;
      int32 opr = 2;
      InteractionPlayRoomStickerSize size = 3;
      uint64 play_info_id = 4;
      string extra = 5;
    }

    message InteractionPlayRoomStickerSize {
      uint64 width = 1;
      uint64 height = 2;
    }

    message InteractionPlayToastMessage {
      Common common = 1;
      string toast = 2;
      int32 scene = 3;
    }

    message InteractionPluginGamePlusContainerMessage {
      repeated Data.InteractionPluginGamePlusContainerData data = 1;
      Common common = 2;
    }

    message InteractionPluginCommentMessage {
      Common common = 1;
      repeated string comments = 2;
    }

    message InteractionPluginLikeMessage {
      Common common = 1;
      repeated string likes = 2;
    }

    message InteractionPluginGiftMessage {
      Common common = 1;
      repeated string gifts = 2;
    }

    message InteractionPluginCommonMessage {
      Common common = 1;
      repeated string data = 2;
    }

    message KtvChorusActionMessage {
      Common common = 1;
      int32 type = 2;
      ChorusGiftSentContent gift_sent_content = 101;
      ChorusStageContent stage_update_content = 103;
      ChorusFollowCDNStartContent cdn_start_content = 104;
      ChorusFollowCDNStopContent cdn_stop_content = 105;
      ChorusInitContent init_content = 106;
      ChorusFinishContent finish_content = 107;
    }

    message ChorusStageContent {
      uint64 chorus_id = 1;
      repeated Data.User user_list = 2;
      Data.RealTimeChorusInfo chorus_info = 3;
    }

    message ChorusInitContent {
      uint64 chorus_id = 1;
      Data.RealTimeChorusInfo chorus_info = 2;
    }

    message ChorusFollowCDNStartContent {
      uint64 room_id = 1;
      string task_id = 2;
    }

    message ChorusFollowCDNStopContent {
      uint64 room_id = 1;
    }

    message ChorusGiftSentContent {
      bool has_sent_order_gift = 1;
      bool has_sent_join_gift = 2;
    }

    message KtvChorusMessage {
      Common common = 1;
      uint64 message_type = 2;
      ChorusMidiRankContent chorus_midi_rank_content = 3;
      ChorusFinishContent chorus_finish_content = 4;
      ChorusUserChangedContent chorus_user_changed_content = 5;
      Data.RealTimeChorusInfo chorus_info = 101;
    }

    message ChorusMidiRankContent {
      repeated Data.ChorusMidiRank chorus_midi_rank = 1;
      uint64 display_duration = 2;
      uint64 user_num = 3;
      uint64 song_id = 4;
      string song_name = 5;
      string chorus_total_score = 6;
    }

    message ChorusFinishContent {
      uint64 chorus_id = 1;
    }

    message ChorusUserChangedContent {
      uint64 chorus_id = 1;
      string prompt = 2;
      uint64 user_num = 3;
      string score_str = 4;
      string user_num_str = 5;
    }

    message KtvChorusPermissionMessage {
      Common common = 1;
      int32 order_permission_type = 2;
      int32 join_permission_type = 3;
      Data.RealTimeChorusGiftDetail order_song_gift = 4;
      Data.RealTimeChorusGiftDetail join_chorus_gift = 5;
    }

    message KtvChorusSingerMessage {
      Common common = 1;
      uint64 room_id = 2;
      uint64 chorus_id = 3;
      uint64 segment = 4;
      repeated Data.UserChorusInfo chorus_infos = 5;
    }

    message KTVStageHideLyricsSwitchChangedContent {
      bool open = 1;
    }

    message LinkerAudienceWaitingListChangeContent {
      uint64 total_waiting_cnt = 1;
    }

    message LinkerCrossLinkInfoUpdateContent {
      uint64 cross_link_timer_start = 1;
    }

    message LinkerAudioAvatarNoticeContent {
      bool support_audio_avatar = 1;
    }

    message LinkerCrossLinkFinishContent {
      string finish_toast = 1;
      string guest_finish_toast = 2;
      int32 reason = 3;
      uint64 finish_room_id = 4;
      uint64 finish_user_id = 5;
      string finish_open_id = 5000;
    }

    message LinkerRTCActionJoinRTCContent {
      bool join_rtc = 1;
      string rtc_ext_info = 2;
      string live_core_ext_info = 3;
      string linkmic_id_str = 4;
      Data.MultiRtcInfo multi_rtc_info = 5;
      Data.MultiLiveCoreInfo multi_live_core_info = 6;
    }

    message LinkerRTCActionContent {
      int32 type = 1;
      LinkerRTCActionJoinRTCContent join_rtc_content = 2;
    }

    message LinkerInitChatRoomContent {
      uint64 room_id = 1;
      int32 scene = 2;
      int32 init_source = 3;
      int32 ui_layout = 4;
    }

    message LinkmicBattleFinishExtra {
      map<string, bool> is_follow_lead = 1;
      map<string, bool> is_show_like = 2;
    }

    message CrossLinkGuideBubbleContent {
      Data.Text text = 1;
      string schema = 2;
    }

    message CrossLinkGuideAudioBubbleAnimationContent {
      uint64 show_time_ms = 1;
    }

    message LinkmicAnnounceMessage {
      Common common = 1;
      int32 message_type = 2;
      Data.AnnounceInfo showing_announce = 3;
    }

    message LinkmicAsrSummary {
      string summary = 1;
      int32 quality_level = 2;
      int32 show_state = 3;
      string summary_id = 4;
      string generate_time_stamp = 5;
    }

    message LinkmicAsrSummaryMessage {
      Common common = 1;
      LinkmicAsrSummary summary = 2;
    }

    message BattleEndPunishMessage {
      Common common = 1;
      BattleSettings battle_settings = 2;
      int32 end_battle_punish_reason = 3;
    }

    message LinkMicBizCancelMessage {
      Common common = 1;
      int32 biz_type = 2;
    }

    message LinkMicBizInviteMessage {
      Common common = 1;
      int32 biz_type = 2;
      int32 invite_type = 3;
      uint64 invite_uid = 6;
      string invite_name = 7;
      repeated Data.BattleRivalTag tags = 8;
      Data.ListUser invite_user = 9;
      string invite_title = 10;
      string invite_sub_title = 11;
      uint64 wait_sec = 12;
      Data.BizOpenGameInfo biz_game_info = 13;
      Data.LinkMicBizExtra battle_config_setting = 14;
      Data.LinkMicBizExtra link_mic_biz_extra = 15;
      string desc = 16;
      string event_tracking_info = 17;
      LinkMicBizGameInfo game_info = 18;
      string game_app_id = 19;
      string game_name = 20;
      string invite_open_uid = 5000;
    }

    message LinkMicBizGameInfo {
      Data.Image icon = 1;
      string name = 2;
    }

    message LinkMicBizMatchInviteMessage {
      Common common = 1;
      Data.LinkMicBizExtra battle_config_setting = 5;
    }

    message LinkMicBizMatchReplyMessage {
      Common common = 1;
      int32 rep_code = 4;
      Data.LinkMicBizExtra battle_config_setting = 5;
    }

    message LinkMicBizReplyMessage {
      Common common = 1;
      int32 biz_type = 2;
      int32 invite_type = 3;
      int32 rep_code = 4;
      Data.LinkMicBizExtra battle_config_setting = 5;
      string reject_prompts = 6;
      string kicked_users_unique_id = 7;
      string game_app_id = 8;
    }

    message XplayHamletAvatarInitContent {
      repeated uint64 all_avatar_ids = 1;
      uint64 avatar_id = 2;
      bool multi_avatar_mode = 3;
    }

    message XplayInitContent {
      string channel = 1;
      string game_id = 2;
      string init_param = 5;
      int32 init_type = 6;
      string rtc_app_id = 7;
      string video_simulcast = 8;
      uint64 video_simulcast_index = 9;
      XplayHamletAvatarInitContent hamlet_avatar_init = 10;
    }

    message HamletAvatarStartContent {
      bool multi_avatar_mode = 1;
    }

    message LinkmicGuestLinkMessage {
      Common common = 1;
      int32 msg_type = 2;
      LinkmicGuestLinkInvitationGuideContent invitation_guide_content = 50;
      LinkmicGuestLinkInviteContent invite_content = 51;
      LinkmicGuestLinkReplyContent reply_content = 52;
      LinkmicGuestLinkMatchmakingContent matchmaking_content = 53;
      LinkmicGuestChannelInfoUpdateContent channel_update_content = 54;
      LinkmicGuestLinkReplyMatchmakingContent reply_matchmaking_content = 55;
      LinkmicGuestLinkJoinLinkedChannelContent join_linked_channel_content = 56;
      LinkmicGuestChannelFinishContent finish_channel_content = 57;
    }

    message LinkmicGuestLinkInvitationGuideContent {
      Data.LinkmicGuestLinkUser target_link_user = 1;
      uint64 call_duration = 2;
      uint64 link_threshold = 3;
    }

    message LinkmicGuestLinkInviteContent {
      repeated LinkmicGuestLinkInviter inviter_list = 1;
      uint64 call_duration = 2;
      uint64 link_threshold = 3;
    }

    message LinkmicGuestLinkInviter {
      Data.LinkmicGuestLinkUser inviter_info = 1;
      string source = 2;
    }

    message LinkmicGuestLinkReplyContent {
      int32 reply_type = 1;
      string toast = 2;
    }

    message LinkmicGuestLinkMatchmakingContent {
      repeated Data.User matchmaking_users = 1;
      int32 user_role = 2;
      uint64 call_duration = 3;
      uint64 link_threshold = 4;
    }

    message LinkmicGuestChannelInfoUpdateContent {
      Data.GuestLinkChannelInfo channel_info = 1;
      uint64 current_time_ms = 3;
    }

    message LinkmicGuestLinkReplyMatchmakingContent {
      int32 reply_type = 1;
      uint64 call_duration = 2;
      uint64 link_threshold = 3;
    }

    message LinkmicGuestChannelFinishContent {
      string reason = 1;
      string linked_user_toast = 2;
      string channel_user_toast = 3;
    }

    message LinkmicGuestLinkJoinLinkedChannelContent {
      uint64 channel_id = 1;
      string rtc_ext_info = 2;
      string live_core_info = 3;
      uint64 score = 4;
      uint64 call_duration = 5;
      uint64 link_threshold = 6;
      Data.AudioBGData channel_background = 7;
    }

    message LinkmicGuestLinkBannerInfo {
      int32 banner_type = 1;
      repeated Data.User channel_users = 2;
      uint64 server_time_ms = 3;
    }

    message LinkmicStarWishWrdsMessage {
      Data.LinkmicStarWishInfo starwish_info = 1;
      Data.StarwishStageToast stage_toast = 2;
      int32 msg_type = 3;
    }

    message LinkmicStarWishGiftItemChangedContent {
      string item_id = 1;
      int32 type = 2;
    }

    message LiveMountMicroAppLimitDataMessage {
      Common common = 1;
      Data.LiveMountMicroAppLimitData data = 2;
    }

    message LiveplaysSDKGiftMessage {
      Common common = 1;
      map<string, string> header = 2;
      Payload payload = 3;

      message Payload {
        string msg_id = 1;
        string sec_openid = 2;
        string sec_gift_id = 3;
        uint64 gift_num = 4;
        uint64 gift_value = 5;
        string avatar_url = 6;
        string nickname = 7;
        uint64 timestamp = 8;
        bool test = 9;
        string audience_sec_open_id = 10;
      }
    }

    message LiveplaysSDKCommentMessage {
      Common common = 1;
      map<string, string> header = 2;
      Payload payload = 3;

      message Payload {
        string msg_id = 1;
        string sec_openid = 2;
        string content = 3;
        string avatar_url = 4;
        string nickname = 5;
        uint64 timestamp = 6;
      }
    }

    message LiveplaysSDKLikeMessage {
      Common common = 1;
      map<string, string> header = 2;
      Payload payload = 3;

      message Payload {
        string msg_id = 1;
        string sec_openid = 2;
        uint64 like_num = 3;
        string avatar_url = 4;
        string nickname = 5;
        uint64 timestamp = 6;
      }
    }

    message LiveplaysSDKFansclubMessage {
      Common common = 1;
      map<string, string> header = 2;
      Payload payload = 3;

      message Payload {
        string msg_id = 1;
        string sec_openid = 2;
        string avatar_url = 3;
        string nickname = 4;
        uint64 timestamp = 5;
        uint64 fansclub_reason_type = 6;
        uint64 fansclub_level = 7;
      }
    }

    message LiveplaysSDKTeamMessage {
      Common common = 1;
      map<string, string> header = 2;
      Payload payload = 3;

      message Payload {
        string msg_id = 1;
        string app_id = 2;
        uint64 room_id = 3;
        string sec_openid = 4;
        string avatar_url = 5;
        string nickname = 6;
        string group_id = 7;
        uint64 timestamp = 8;
      }
    }

    message LuckyBoxPermitMessage {
      Common common = 1;
      repeated uint64 box_id = 2;
      repeated string box_id_str = 3;
      string user_id = 4;
      uint64 box_tab_type = 5;
      string user_open_id = 5000;
    }

    message RoomMsgExtra {
      RoomMsgGiftExtra gift_extra = 1;
    }

    message RoomMsgGiftExtra {
      uint64 gift_id = 1;
      string gift_name = 2;
      uint64 gift_count = 3;
      Data.Image image = 4;
      Data.Image webp_image = 5;
      uint64 group_id = 6;
      int32 client_gift_source = 7;
      string describe = 8;
      uint64 diamond_count = 9;
    }

    message ScreenChatMessageContentExt {
      string schema = 1;
      Data.Image jump_icon = 2;
      int32 hover_second = 3;
    }

    message MangoMatchResultMessage {
      Common common = 1;
      bytes biz_msg = 2;
    }

    message NoReplyIntentMessage {
      Common common = 1;
      repeated NoReplyIntentChat chat_list = 2;
    }

    message NoReplyIntentChat {
      Data.User user = 1;
      string content = 2;
      uint64 time = 3;
    }

    message PKPlayAnchorPanelMessage {
      Common common = 1;
      PkPlayPlayerData self_player_game_data = 2;
      PkPlayPlayerData rival_player_game_data = 3;
      GameRole self_player_game_role = 4;
      GameRole rival_player_game_role = 5;
      bool enable_pk_data = 6;
      bool is_paused = 7;
      string detail_panel_schema = 8;
      bool is_open_error = 9;
      string error_msg = 10;
      bool need_setup = 11;
      int32 open_failed_type = 12;
      string error_prompt = 13;
      string error_schema = 14;
      string button_text = 15;
      string error_title = 16;
      string setting_text = 17;
      string setting_schema = 18;
    }

    message TeamPlayPopup {
      string title = 1;
      string content = 2;
      repeated string highlight_words = 3;
      string button_text = 4;
    }

    message GameRole {
      Role role = 1;
      DoulinkBindConf doulink_bind_conf = 2;
      string rank_level = 3;
      string rank_grade = 4;
      string display_role_region = 5;

      message Role {
        string game_user_id = 1;
        string role_id = 2;
        string role_name = 3;
        string role_level = 4;
        string role_region = 5;
        string icon_url = 6;
        uint64 update_time = 7;
        string account_type = 8;
      }

      message DoulinkBindConf {
        int32 doulink_type = 1;
        repeated int32 login_types = 2;
        bool is_auth = 3;
        string client_key = 4;
        string scopes = 5;
        string comment_id = 6;
        bool only_jump_wx = 7;
        string tx_game_code = 8;
      }
    }

    message GameRoleCheckInfo {
      bool is_bind_role = 1;
      bool is_meet_team_requirement = 2;
      string reason = 3;
    }

    message PKPlayDetailPanelMessage {
      Common common = 1;
      PkPlayPlayerData self_player_game_data = 2;
      PkPlayPlayerData rival_player_game_data = 3;
      bool enable_pk_data = 4;
      bool is_paused = 5;
      string PkStatusDesc = 6;
      PkPlayDetailAnchorTab anchor_tab = 7;
      PkPlayDetailTeamTab team_tab = 8;
    }

    message PkPlayPlayerData {
      string nick_name = 1;
      string game_battle_id = 2;
      int32 camp = 3;
      PkPlayDataKv pk_play_data = 4;
      string icon_url = 5;
      string hero_icon_url = 6;
    }

    message PkPlayDataKv {
      string key = 1;
      uint64 value = 2;
    }

    message PkPlayDetailAnchorTab {
      repeated PkPlayDimensionData self_dimension_data_list = 1;
      repeated PkPlayDimensionData rival_dimension_data_list = 2;
      PkPlayDetailHeroData self_player_game_data = 3;
      PkPlayDetailHeroData rival_player_game_data = 4;
    }

    message PkPlayDimensionData {
      string key = 1;
      double value = 2;
      int32 value_percent = 3;
    }

    message PkPlayDetailTeamTab {
      int32 self_camp_score = 1;
      int32 rival_camp_score = 2;
      repeated PkPlayDetailHeroData self_team_game_data_list = 3;
      repeated PkPlayDetailHeroData rival_team_game_data_list = 4;
    }

    message PkPlayDetailHeroData {
      string nick_name = 1;
      string hero_icon_url = 2;
      int32 camp = 3;
      repeated string equip_icon_url_list = 4;
      repeated PkPlayDataItem pk_play_data_list = 5;
      int32 kill_cnt = 6;
      int32 death_cnt = 7;
      int32 assist_cnt = 8;
      int32 hero_type = 9;
    }

    message PkPlayDataItem {
      string key = 1;
      string value = 2;
      double rate = 3;
      int32 value_percent = 4;
    }

    message PKPlayUpdateConfigMessage {
      Common common = 1;
      int32 update_type = 2;
      AnchorPKPlayConfig pk_play_config = 3;
      string update_msg = 4;
    }

    message AnchorPKPlayConfig {
      bool enable_pk_data = 1;
      string pk_name = 2;
      string pk_data = 3;
    }

    message PreviewBlockMessage {
      Common common = 1;
      uint64 roomID = 2;
      uint64 toUserID = 3;
      string to_user_open_id = 5000;
    }

    message PreviewCjRpMessage {
      CjRp cjrp = 1;
      Common common = 2;

      message CjRp {
        string rp_order_no = 1;
        uint64 send_time = 2;
        uint64 expire_time = 3;
        uint64 display_delay_seconds = 4;
        uint64 status = 5;
        string currency = 6;
        string icon = 7;
        string text = 8;
        uint64 total_amount = 9;
        uint64 left_amount = 10;
        uint64 total_num = 11;
        uint64 left_num = 12;
      }
    }

    message ProfitOpenGameRoleChangeMessage {
      Common conmon = 1;
      map<string, Data.AnchorOpenGameRoleInfo> anchor_id_to_open_game_role_info = 2;
    }

    message ProfitGameRoundStatusMessage {
      Common common = 1;
      string app_id = 2;
      string room_id = 3;
      string round_id = 4;
      int32 round_status = 5;
      uint64 start_time = 6;
      uint64 end_time = 7;
    }

    message ProfitGameUserJoinRoundMessage {
      Common common = 1;
      string app_id = 2;
      string room_id = 3;
      string round_id = 4;
      string user_id = 5;
      string group_id = 6;
      string open_id = 5000;
    }

    message ProfitGameCompleteUserRoundDataReportMessage {
      Common common = 1;
      string app_id = 2;
      string room_id = 3;
      string round_id = 4;
      int32 report_status = 5;
      uint64 complete_time = 6;
    }

    message BarMessage {
      string text = 1;
      int32 duration = 2;
      map<string, string> params = 3;
    }

    message RealtimeStatusPanelMessage {
      Common common = 1;
      string tab_key = 2;
      string content = 3;
      map<string, string> params = 4;
    }

    message BarStyle {
      Data.Image left_icon = 7;
      Data.Image right_icon = 1;
      string background_color = 2;
      string text_color = 3;
      bool has_frame = 4;
      string frame_begin = 5;
      string frame_end = 6;
    }

    message CommonBubbleMessage {
      Common common = 1;
      Data.ItemBubbleInfo bubble_info = 2;
    }

    message RoomTextBg {
      uint64 id = 1;
      string title = 2;
      string description = 3;
      Data.RoomTextBgStyle title_style = 4;
      Data.RoomTextBgStyle description_style = 5;
      uint64 version = 6;
      string show_id = 7;
    }

    message RoomTextBgMessage {
      Common common = 1;
      RoomTextBg text_bg = 2;
      uint64 placeholder = 3;
      string source = 4;
    }

    message TeamPlayNewApplyMessage {
      Common common = 1;
      uint64 user_id = 2;
      string nickname = 3;
      bool need_notify_to_apply = 4;
      string user_open_id = 5000;
    }

    message TeamPlayApplySortStrategyChangeMessage {
      Common common = 1;
    }

    message TeamPlayApplyPermitMessage {
      Common common = 1;
      string schema = 2;
    }

    message TeamPlayInteractiveBarMessage {
      Common common = 1;
    }

    message TogetherLiveChangeMemberMessage {
      Common common = 1;
      uint64 is_together_live = 2;
      repeated Data.User user_list = 3;
      string title = 4;
      string schema_url = 5;
      uint64 scene = 6;
    }

    message TogetherLiveRemindMessage {
      Common common = 1;
      int32 ban_remind_type = 2;
      Data.User user = 3;
      string title = 4;
      string content = 5;
    }

    message VisibilityRangeChangeMessage {
      Common common = 1;
      uint64 visibility_range = 2;
    }

    message VrTransferMessage {
      uint64 time_stamp = 1;
      uint64 materail_id = 2;
      string material_url = 3;
      map<int64, int64> layer_status = 4;
    }

    message ChatLikeMessage {
      Common common = 1;
      map<int64, Data.ChatLikeCount> total_msg_data = 2;
    }

    message DslMockMessage {
      Common common = 1;
      Data.DSLDetail dsl_detail = 2;
    }

    message FinishOpenGameMessage {
      Common common = 1;
      string app_id = 2;
    }

    message GameRuntimeMessage {
      Common common = 1;
      int32 runtime_type = 2;
      uint64 room_id = 3;
      uint64 game_id = 5;
      string app_id = 6;
      uint64 link_game_id = 7;
      string game_extra = 10;
    }

    message OpenStreamPushMessage {
      Common common = 1;
      string room_id = 2;
      Data.StreamUrl stream_url = 3;
      string pull_data_extra = 4;
      string push_data_extra = 5;
    }

    message ProfitGameStatusMessage {
      Common common = 1;
      int32 status = 2;
      string room_id = 3;
      Data.StreamUrl stream_url = 4;
      uint64 game_id = 5;
      string app_id = 6;
      uint64 link_game_id = 7;
      Data.StreamUrl ios_stream_url = 8;
      Data.StreamUrl android_stream_url = 9;
      string game_extra = 10;
      int32 push_stream_type = 11;
      string linker_extra = 12;
      uint64 game_type = 13;
      string init_param = 14;
      string anchor_open_id = 15;
      int32 reason = 16;
      bool server_rtc_stream = 17;
      map<string, string> track_info = 18;
      uint64 channel_id = 19;
      int32 biz_type = 20;
    }

    message RealTimeChatLikeMessage {
      Common common = 1;
      map<int64, Data.ChatLikeCount> need_refresh = 2;
    }

    message UpdateGameScoreMessage {
      Common common = 1;
      string app_id = 2;
      repeated GameScoreInfo game_scores = 3;
      uint64 round_id = 4;
      int32 game_status = 5;
      uint64 msg_time_stamp = 6;

      message GameScoreInfo {
        string join_uid = 1;
        bool join_game = 2;
        string score = 3;
        string join_open_id = 5000;
      }
    }
  }

  message Data {

    message PatternRef {
      string key = 1;
      string default_pattern = 2;
    }

    message TextFormat {
      string color = 1;
      bool bold = 2;
      bool italic = 3;
      int32 weight = 4;
      int32 italic_angle = 5;
      int32 font_size = 6;
      bool use_heigh_light_color = 7;
      bool use_remote_clor = 8;
      bool ignore_color_mapping = 9;
    }

    message TextPieceUser {
      User user = 1;
      bool with_colon = 2;
      bool self_show_real_name = 3;
      int32 left_show_extension = 4;
      string left_additional_content = 5;
      string right_additional_content = 6;
    }

    message TextPieceGift {
      uint64 gift_id = 1;
      PatternRef name_ref = 2;
    }

    message TextPieceHeart {
      string color = 1;
    }

    message TextPiecePatternRef {
      string key = 1;
      string default_pattern = 2;
    }

    message TextPieceImage {
      Image image = 1;
      float scaling_rate = 2;
    }

    message TextPiece {
      int32 type = 1;
      TextFormat format = 2;
      string value_ref = 3;
      string string_value = 11;
      TextPieceUser user_value = 21;
      TextPieceGift gift_value = 22;
      TextPieceHeart heart_value = 23;
      TextPiecePatternRef pattern_ref_value = 24;
      TextPieceImage image_value = 25;
      string schema_key = 100;
    }

    message Text {
      string key = 1;
      string default_pattern = 2;
      TextFormat default_format = 3;
      repeated TextPiece pieces = 4;
      map<string, SchemaInfo> schema_infos = 20;
    }

    message CombinedText {
      DisplayItem display_items = 1;
      SchemaInfo schema_info = 10;
      ComboInfo combo_info = 11;
    }

    message DisplayItem {
      int32 display_item_type = 1;
      bool combo_fresh = 20;
      SchemaInfo schema_info = 21;
      AggregateInfo aggregate_info = 22;
      bool number_roll = 23;
      ImagesItem images_item = 50;
      TextItem text_item = 51;
      DisplayItemFormat format = 100;
    }

    message DisplayItemFormat {
      bool enable_left_space = 1;
      uint64 left_space = 2;
    }

    message ImagesItem {
      repeated Image images = 1;
      ImagesTag tag = 19;
      int32 display_style = 20;
    }

    message ImagesTag {
      string text = 1;
    }

    message TextItem {
      Text text = 1;
    }

    message SchemaInfo {
      string schema_url = 1;
    }

    message ComboInfo {
      uint64 combo_seq = 1;
      uint64 combo_order = 2;
    }

    message AggregateInfo {
      string aggregate_seq = 1;
      bool can_aggregate = 2;
    }

    message User {
      uint64 id = 1;
      uint64 short_id = 2;
      string nickname = 3;
      int32 gender = 4;
      string signature = 5;
      int32 level = 6;
      uint64 birthday = 7;
      string telephone = 8;
      Image avatar_thumb = 9;
      Image avatar_medium = 10;
      Image avatar_large = 11;
      bool verified = 12;
      int32 experience = 13;
      string city = 14;
      int32 status = 15;
      uint64 create_time = 16;
      uint64 modify_time = 17;
      int32 secret = 18;
      string share_qrcode_uri = 19;
      int32 income_share_percent = 20;
      repeated Image badge_image_list = 21;
      FollowInfo follow_info = 22;
      PayGrade pay_grade = 23;
      FansClub fans_club = 24;
      Border border = 25;
      string special_id = 26;
      Image avatar_border = 27;
      Image medal = 28;
      repeated Image real_time_icons = 29;
      repeated Image new_real_time_icons = 30;
      uint64 top_vip_no = 31;
      UserAttr user_attr = 32;
      OwnRoom own_room = 33;
      uint64 pay_score = 34;
      uint64 ticket_count = 35;
      AnchorInfo anchor_info = 36;
      int32 link_mic_stats = 37;
      string display_id = 38;
      bool with_commerce_permission = 39;
      bool with_fusion_shop_entry = 40;
      uint64 total_recharge_diamond_count = 41;
      AnchorLevel webcast_anchor_level = 42;
      string verified_content = 43;
      AuthorStats author_stats = 44;
      repeated User top_fans = 45;
      string sec_uid = 46;
      int32 user_role = 47;
      XiguaParams xigua_info = 48;
      ActivityInfo activity_reward = 49;
      NobleLevelInfo noble_info = 50;
      BrotherhoodInfo brotherhood_info = 51;
      Image personal_card = 52;
      AuthenticationInfo authentication_info = 53;
      int32 authorization_info = 54;
      int32 adversary_authorization_info = 55;
      PoiInfo poi_info = 56;
      repeated Image media_badge_image_list = 57;
      int32 adversary_user_status = 58;
      UserVIPInfo user_vip_info = 59;
      repeated uint64 commerce_webcast_config_ids = 60;
      repeated Image badge_image_list_v2 = 61;
      IndustryCertification industry_certification = 62;
      string location_city = 63;
      FansGroupInfo fans_group_info = 64;
      string remark_name = 65;
      int32 mystery_man = 66;
      string web_rid = 67;
      string desensitized_nickname = 68;
      JAccreditInfo j_accredit_info = 69;
      Subscribe subscribe = 70;
      bool is_anonymous = 71;
      int32 consume_diamond_level = 72;
      string webcast_uid = 73;
      ProfileStyleParams profile_style_params = 74;
      UserDressInfo user_dress_info = 75;
      BizRelation biz_relation = 76;
      MemberEntranceInfo member_entrance_info = 77;
      PublicAreaBadgeInfo public_area_badge_info = 78;
      ExtraInfo extra_info = 79;
      UserSettingInfo user_setting_info = 80;
      uint64 public_area_oper_freq = 81;
      UserPermissionGrant user_permission_grant_info = 82;
      bool user_canceled = 83;
      bool allow_be_located = 1001;
      bool allow_find_by_contacts = 1002;
      bool allow_others_download_video = 1003;
      bool allow_others_download_when_sharing_video = 1004;
      bool allow_share_show_profile = 1005;
      bool allow_show_in_gossip = 1006;
      bool allow_show_my_action = 1007;
      bool allow_strange_comment = 1008;
      bool allow_unfollower_comment = 1009;
      bool allow_use_linkmic = 1010;
      AnchorLevel anchor_level = 1011;
      Image avatar_jpg = 1012;
      string bg_img_url = 1013;
      string birthday_description = 1014;
      bool birthday_valid = 1015;
      int32 block_status = 1016;
      int32 comment_restrict = 1017;
      string constellation = 1018;
      int32 disable_ichat = 1019;
      uint64 enable_ichat_img = 1020;
      int32 exp = 1021;
      uint64 fan_ticket_count = 1022;
      bool fold_stranger_chat = 1023;
      uint64 follow_status = 1024;
      bool hotsoon_verified = 1025;
      string hotsoon_verified_reason = 1026;
      int32 ichat_restrict_type = 1027;
      string id_str = 1028;
      bool is_follower = 1029;
      bool is_following = 1030;
      bool need_profile_guide = 1031;
      uint64 pay_scores = 1032;
      bool push_comment_status = 1033;
      bool push_digg = 1034;
      bool push_follow = 1035;
      bool push_friend_action = 1036;
      bool push_ichat = 1037;
      bool push_status = 1038;
      bool push_video_post = 1039;
      bool push_video_recommend = 1040;
      UserStats stats = 1041;
      bool verified_mobile = 1042;
      string verified_reason = 1043;
      bool with_car_management_permission = 1044;
      int32 age_range = 1045;
      uint64 watch_duration_month = 1046;
      int32 foreign_user = 1047;
      string user_open_id = 5000;
      OpenHostInfo host_info = 5001;

      message UserPermissionGrant {
        bool hide_on_private_room = 1;
      }

      message FollowInfo {
        uint64 following_count = 1;
        uint64 follower_count = 2;
        uint64 follow_status = 3;
        uint64 push_status = 4;
        string remark_name = 5;
        string follower_count_str = 6;
        string following_count_str = 7;
        bool invalid_follow_status = 8;
        string follwer_count_display = 9;
      }

      message PayGrade {
        uint64 total_diamond_count = 1;
        Image diamond_icon = 2;
        string name = 3;
        Image icon = 4;
        string next_name = 5;
        uint64 level = 6;
        Image next_icon = 7;
        uint64 next_diamond = 8;
        uint64 now_diamond = 9;
        uint64 this_grade_min_diamond = 10;
        uint64 this_grade_max_diamond = 11;
        uint64 pay_diamond_bak = 12;
        string grade_describe = 13;
        repeated GradeIcon grade_icon_list = 14;
        uint64 screen_chat_type = 15;
        Image im_icon = 16;
        Image im_icon_with_level = 17;
        Image live_icon = 18;
        Image new_im_icon_with_level = 19;
        Image new_live_icon = 20;
        uint64 upgrade_need_consume = 21;
        string next_privileges = 22;
        Image background = 23;
        Image background_back = 24;
        uint64 score = 25;
        GradeBuffInfo buff_info = 26;
        bool grade_describe_shining = 27;
        string grade_banner = 1001;
        Image profile_dialog_bg = 1002;
        Image profile_dialog_bg_back = 1003;

        message GradeIcon {
          Image icon = 1;
          uint64 icon_diamond = 2;
          uint64 level = 3;
          string level_str = 4;
        }
      }

      message FansClub {
        FansClubData data = 1;
        map<int32, FansClubData> prefer_data = 2;

        message FansClubData {
          string club_name = 1;
          int32 level = 2;
          int32 user_fans_club_status = 3;
          UserBadge badge = 4;
          repeated uint64 available_gift_ids = 5;
          uint64 anchor_id = 6;
          int32 badge_type = 7;
          int32 user_guard_status = 8;
          uint64 guard_expired_time = 9;
          string anchor_open_id = 5000;

          message UserBadge {
            map<int32, Image> icons = 1;
            string title = 2;
          }
        }
      }

      message Border {
        Image icon = 1;
        uint64 level = 2;
        Image thumb_icon = 3;
        string dress_id = 4;
      }

      message UserAttr {
        bool is_muted = 1;
        bool is_admin = 2;
        bool is_super_admin = 3;
        repeated int32 admin_privileges = 4;
      }

      message OwnRoom {
        repeated uint64 room_ids = 1;
        repeated string room_ids_str = 2;
        repeated int32 room_ids_display = 3;
      }

      message AnchorInfo {
        uint64 level = 1;
      }

      message AnchorLevel {
        uint64 level = 1;
        uint64 experience = 2;
        uint64 lowest_experience_this_level = 3;
        uint64 highest_experience_this_level = 4;
        uint64 task_start_experience = 5;
        uint64 task_start_time = 6;
        uint64 task_decrease_experience = 7;
        uint64 task_target_experience = 8;
        uint64 task_end_time = 9;
        Image profile_dialog_bg = 10;
        Image profile_dialog_bg_back = 11;
        Image stage_level = 12;
        Image small_icon = 13;
      }

      message AuthorStats {
        uint64 video_total_count = 1;
        uint64 video_total_play_count = 2;
        uint64 video_total_share_count = 3;
        uint64 video_total_series_count = 4;
        uint64 variety_show_play_count = 5;
        uint64 video_total_favorite_count = 6;
      }

      message XiguaParams {
        string user_auth_info = 1;
        uint64 ugc_publish_media_id = 2;
        uint64 media_id = 3;
        string author_desc = 4;
        string description = 5;
        bool user_verified = 6;
        UserExtendInfo user_extend_info = 7;
        uint64 xigua_uid = 8;
        string nick_name = 9;
        Image avatar_thumb = 10;
        Image avatar_medium = 11;
        Image avatar_large = 12;

        message UserExtendInfo {
          string share_url = 1;
          string r_schema_url = 2;
          RocketSchema rocket_schema_info = 3;

          message RocketSchema {
            string r_schema = 1;
            string r_token = 2;
            string download_url = 3;
          }
        }
      }

      message ActivityInfo {
        Image Badge = 1;
        Image StoryTag = 2;
      }

      message NobleLevelInfo {
        Image noble_background = 1;
        uint64 noble_level = 2;
        Image noble_icon = 3;
        string noble_name = 4;
        uint64 expire_time = 5;
        Image noble_big_icon = 6;
        Image noble_icon_with_back = 7;
        Image noble_boarder = 8;
        repeated string noble_background_color = 9;
      }

      message BrotherhoodInfo {
        string name = 1;
        uint64 level = 2;
        Image background = 3;
        string font_color = 4;
      }

      message AuthenticationInfo {
        string custom_verify = 1;
        string enterprise_verify_reason = 2;
        Image authentication_badge = 3;
        int32 level_list = 4;
        AccountTypeInfo account_type_info = 10;
        Image authentication_badge_v2 = 11;
        string account_cert_info = 12;

        message AccountTypeInfo {
          map<int64, bool> account_type_map = 1;
        }
      }

      message PoiInfo {
        bool is_poi_enabled = 1;
        uint64 poi_id = 2;
        string poi_name = 3;
        string poi_id_str = 4;
        uint64 follower_count_permission = 5;
        uint64 white_user_permission = 6;
      }

      message FansGroupInfo {
        string list_fans_group_url = 1;
      }

      message JAccreditInfo {
        int32 JAccreditBasic = 1;
        int32 JAccreditAdvance = 2;
        int32 JAccreditContent = 3;
        int32 JAccreditLive = 4;
      }

      message Subscribe {
        bool is_member = 1;
        uint64 level = 2;
        uint64 identity_type = 3;
        uint64 buy_type = 4;
        uint64 open = 5;
      }

      message ProfileStyleParams {
        uint64 profile_style = 1;
        uint64 smart_switch = 2;
      }

      message UserDressInfo {
        repeated string dress_wear_ids = 1;
        repeated string dress_own_ids = 2;
      }

      message BizRelation {
        bool shop_fans_club_reverse = 1;
      }

      message PublicAreaBadgeInfo {
        map<int64, Image> badge_info_map = 1;
        repeated uint64 badge_list = 2;
        repeated WebcastDslBadgeList webcast_dsl_badge_list = 3;

        message WebcastDslBadgeList {
          repeated uint64 badge_list = 1;
          DslRule target_dsl_rule = 2;
          DslRule filter_dsl_rule = 3;

          message DslRule {
            repeated uint64 app_id = 1;
            repeated uint64 version_code = 2;
            map<string, string> ab_params = 3;
          }
        }
      }

      message ExtraInfo {
        bool is_contract = 1;
      }

      message UserStats {
        uint64 id = 1;
        string id_str = 2;
        uint64 following_count = 3;
        uint64 follower_count = 4;
        uint64 record_count = 5;
        uint64 total_duration = 6;
        uint64 daily_fan_ticket_count = 7;
        uint64 daily_income = 8;
        uint64 item_count = 9;
        uint64 favorite_item_count = 10;
        uint64 diamond_count = 11;
        uint64 diamond_consumed_count = 12;
        uint64 tuwen_item_count = 13;
        string open_id = 5000;
        string open_id_str = 5001;
      }

      message UserSettingInfo {
        uint64 live_visitor_switch = 1;
      }
    }

    message MemberEntranceInfo {
      uint64 type = 1;
      bool show_entrance = 2;
      string schema = 3;
      Image single_entrance_icon = 4;
      Image double_entrance_icon = 5;
      bool is_member = 6;
      map<string, string> tracking_params = 50;
    }

    message IndustryCertification {
      IndustryCertificationProfile profile = 1;
      IndustryCertificationRoom room = 2;
    }

    message IndustryCertificationProfile {
      Image icon = 1;
      string content = 2;
      string schema = 3;
      string content_color = 4;
      string bg_color = 5;
      uint64 cert_type = 6;
    }

    message IndustryCertificationRoom {
      RoomOwner room_owner = 1;

      message RoomOwner {
        Image title = 1;
        string sub_title = 2;
        string left_color = 3;
        string right_color = 4;
        int32 anchor_industry_type = 5;
        Image brand_store_title = 6;
        Image brand_store_background = 7;
        Image anchor_reds_icon = 8;
        Image anchor_reds_small_icon = 9;
      }
    }

    message Image {
      repeated string url_list = 1;
      string uri = 2;
      uint64 height = 3;
      uint64 width = 4;
      string avg_color = 5;
      int32 image_type = 6;
      string open_web_url = 7;
      Content content = 8;
      bool is_animated = 9;
      repeated NinePatchSetting flex_setting_list = 10;
      repeated NinePatchSetting text_setting_list = 11;

      message Content {
        string name = 1;
        string font_color = 2;
        uint64 level = 3;
        string alternative_text = 4;
      }

      message NinePatchSetting {
        repeated uint64 setting_list = 1;
      }
    }

    message AnchorLinkmicUserSettings {
      bool is_turn_on = 1;
      bool accept_multi_linkmic = 2;
      bool accept_not_follower_invite = 3;
      bool allow_gift_to_other_anchors = 4;
      bool accept_friend_invite = 5;
      bool accept_hourly_rank_invite = 6;
      bool accept_popularity_rank_invite = 7;
      bool accept_recommend_search_invite = 8;
      bool accept_big_small_layout = 9;
      bool linkmic_allow_gift_to_other_anchors = 10;
      bool pk_allow_gift_to_other_anchors = 11;
      bool auto_start_prop_card = 12;
    }

    message BattleUserSettings {
      bool is_turn_on = 1;
      bool accept_not_follower_invite = 2;
      bool allow_gift_to_other_anchors = 3;
      bool accept_friend_invite = 4;
      bool accept_hourly_rank_invite = 5;
      bool accept_popularity_rank_invite = 6;
      uint64 invite_reject_permanent_total = 7;
      uint64 invite_reject_temporary_total = 8;
      string invite_reject_temporary_text = 9;
      bool pk_accept_volume_up = 10;
      bool pk_auto_confirm = 11;
      bool accept_union_recommend_invite = 12;
      bool linkmic_allow_gift_to_other_anchors = 13;
      bool pk_allow_gift_to_other_anchors = 14;
      bool auto_start_prop_card = 15;
    }

    message RivalExtraInfo {
      string text = 1;
      int32 text_type = 2;
      string label = 3;
      int32 anchor_layer = 4;
      LinkerInfo linker_info = 5;
      AnchorLinkmicUserSettings linkmic_user_settings = 6;
      BattleUserSettings battle_user_settings = 7;
      uint64 video_show_score = 8;
      GameInfo game_info = 9;
      string sign_extra = 10;
      string recommend_info = 11;
      int32 from_server_invite_type = 12;

      message LinkerInfo {
        repeated UserInfo linked_users = 1;

        message UserInfo {
          uint64 user_id = 1;
          string nick_name = 2;
          Image avatar_thumb = 3;
        }
      }

      message GameInfo {
        string game_text = 1;
        string game_name = 2;
      }
    }

    message MultiPKModeInfo {
      int32 mode_tab = 1;
      map<int64, int64> user_id_to_team_id = 2;
      uint64 version = 3;
      int32 switch_source = 4;
      string version_str = 5;
      string battle_config_setting = 6;
    }

    message GameInviteInfo {
      int32 invite_source = 1;
    }

    message LinkmicInfo {
      string rtc_ext_info = 1;
      string live_core_info = 2;
    }

    message MultiChannelInfo {
      bool use_multi_channel = 1;
      map<int64, string> linkmic_infos = 2;
    }

    message LinkIconConfig {
      string yellow_dots = 1;
    }

    message LinkmicUIConfig {
      Image room_bg_full_image = 1;
      Image room_bg_top_image = 2;
      Image room_bg_bottom_image = 3;
    }

    message VIPBadge {
      map<int64, Image> icons = 1;
    }

    message UserVIPInfo {
      uint64 vip_level = 1;
      string vip_level_name = 2;
      int32 status = 3;
      uint64 start_time = 4;
      uint64 end_time = 5;
      uint64 remaining_days = 6;
      uint64 total_consume = 7;
      uint64 target_consume = 8;
      VIPBadge badge = 9;
      map<int64, bool> privileges = 10;
    }

    message GradeBuffInfo {
      uint64 buff_level = 1;
      int32 status = 2;
      uint64 end_time = 3;
      map<int64, int64> stats_info = 4;
      Image buff_badge = 5;
    }

    message GameExtra {
      int32 kind = 1;
      int32 status = 2;
      uint64 game_id = 3;
      int32 gift_limit = 4;
      uint64 round_id = 5;
      int32 game_kind = 6;
      uint64 chat = 7;
      uint64 loader = 8;
      uint64 reload = 9;
      map<string, string> data = 10;
    }

    message MatchRoomInfo {
      MatchTabFrame match_tab_frame = 1;
      MatchTitle match_title = 2;
      ToutiaoMatchData match_data = 3;
      map<int64, int64> match_host_channel = 4;
      string match_hash_tag = 5;
      repeated Image background_image_url_list = 6;
      Image share_icon = 7;
      MatchRoomImInfo im_info = 8;
      MatchShareBackground match_share_background = 9;
      string theme_id = 10;
      MatchShareBackground match_live_share_background = 11;
      uint64 match_id = 12;
    }

    message MainCameraMatchInfo {
      ToutiaoMatchData match_data = 1;
      uint64 match_id = 2;
      repeated uint64 event_ids = 3;
      uint64 content_id = 4;
      LeagueInfo league_info = 5;
      bool is_display_score_type = 6;
      repeated uint64 hide_tab_ids = 7;
      string match_id_str = 8;
      string content_id_str = 9;
    }

    message LeagueInfo {
      uint64 league_id = 1;
      string cnn_name = 2;
      string enn_name = 3;
      string season = 4;
    }

    message MatchRoomImInfo {
      Image icon = 1;
      string title = 2;
    }

    message MatchTabFrame {
      repeated MatchTab tabs = 1;
      repeated MatchTab replay_tabs = 2;
      string color = 3;
      string background_color = 4;
    }

    message ClientComponent {
      map<string, ClientComponentInfo> portrait_component_map = 1;
      map<string, ClientComponentInfo> landscape_component_map = 2;
      bool is_open = 3;
      uint64 template_id = 4;
      map<string, Data.ClientComponentInfo> preview_default_component_map = 5;
    }

    message ClientComponentInfo {
      string container_id = 1;
      ClientComponentFunctionInfo function_detail = 2;
      bool is_open = 3;
      DSLDetail dsl_detail = 4;
      string dsl_layout = 5;
      ContainerLayout container_layout = 6;
    }

    message ClientComponentFunctionInfo {
      string function_id = 1;
      map<string, string> data = 2;
    }

    message Room {
      uint64 id = 1;
      string id_str = 2;
      uint64 status = 3;
      uint64 owner_user_id = 4;
      string title = 5;
      uint64 user_count = 6;
      uint64 create_time = 7;
      uint64 linkmic_layout = 8;
      uint64 finish_time = 9;
      RoomExtra extra = 10;
      string dynamic_cover_uri = 11;
      map<int64, string> dynamic_cover_dict = 12;
      uint64 last_ping_time = 13;
      uint64 live_id = 14;
      uint64 stream_provider = 15;
      uint64 os_type = 16;
      uint64 client_version = 17;
      bool with_linkmic = 18;
      bool enable_room_perspective = 19;
      Image cover = 20;
      Image dynamic_cover = 21;
      Image dynamic_cover_low = 22;
      string share_url = 23;
      string anchor_share_text = 24;
      string user_share_text = 25;
      uint64 stream_id = 26;
      string stream_id_str = 27;
      StreamUrl stream_url = 28;
      uint64 mosaic_status = 29;
      string mosaic_tip = 30;
      uint64 cell_style = 31;
      LinkMic link_mic = 32;
      uint64 luckymoney_num = 33;
      repeated Decoration deco_list = 34;
      repeated TopFan top_fans = 35;
      RoomStats stats = 36;
      string sun_daily_icon_content = 37;
      string distance = 38;
      string distance_city = 39;
      string location = 40;
      string real_distance = 41;
      Image feed_room_label = 42;
      string common_label_list = 43;
      RoomUserAttr living_room_attrs = 44;
      repeated uint64 admin_user_ids = 45;
      User owner = 46;
      string private_info = 47;
      bool has_commerce_goods = 48;
      bool live_type_normal = 49;
      bool live_type_linkmic = 50;
      bool live_type_audio = 51;
      bool live_type_third_party = 52;
      bool live_type_screenshot = 53;
      bool live_type_sandbox = 54;
      bool live_type_official = 55;
      uint64 group_id = 59;
      uint64 orientation = 60;
      uint64 category = 61;
      repeated uint64 tags = 62;
      uint64 start_time = 63;
      uint64 popularity = 64;
      string popularity_str = 65;
      uint64 fcdn_appid = 66;
      bool sell_goods = 68;
      uint64 web_count = 69;
      string vertical_cover_uri = 70;
      uint64 base_category = 71;
      RoomAuthStatus room_auth = 72;
      repeated RoomTab room_tabs = 73;
      string introduction = 74;
      BurstInfo burst = 75;
      RoomHealthScoreInfo health_score = 76;
      bool is_replay = 77;
      string vid = 78;
      uint64 group_source = 79;
      uint64 lottery_finish_time = 80;
      RoomActivityTag activity_tag = 81;
      Image portrait_cover = 82;
      Image background = 83;
      uint64 layout = 84;
      string wait_copy = 85;
      Image guide_button = 86;
      string preview_copy = 87;
      bool is_show_inquiry_ball = 88;
      MatchInfo match_info = 89;
      bool use_filter = 90;
      uint64 gift_msg_style = 91;
      string distance_km = 92;
      string finish_url = 93;
      OfficialRoomInfo official_room_info = 94;
      bool is_show_user_card_switch = 95;
      string video_feed_tag = 96;
      string forum_extra_data = 97;
      uint64 fansclub_msg_style = 98;
      uint64 follow_msg_style = 99;
      uint64 share_msg_style = 100;
      uint64 room_layout = 101;
      string short_title = 102;
      RoomShortTouchAreaConfig short_touch_area_config = 103;
      uint64 book_time = 104;
      uint64 book_end_time = 105;
      uint64 room_audit_status = 106;
      repeated uint64 live_distribution = 107;
      TVStation tv = 108;
      bool replay = 109;
      string challenge_info = 110;
      uint64 like_count = 111;
      uint64 search_id = 112;
      string anchor_scheduled_time_text = 113;
      string hot_sentence_info = 114;
      uint64 replay_location = 115;
      uint64 stream_close_time = 116;
      string content_tag = 117;
      Image content_label = 118;
      Image operation_label = 119;
      int32 anchor_tab_type = 120;
      GameExtra game_extra = 121;
      OfficialChannelInfo official_channel = 122;
      string stamps = 123;
      CommentBox comment_box = 124;
      int32 business_live = 125;
      bool with_ktv = 126;
      bool with_draw_something = 127;
      uint64 webcast_comment_tcs = 128;
      uint64 room_tag = 129;
      map<string, int64 > linker_map = 130;
      int32 finish_reason = 131;
      RoomCart room_cart = 132;
      string scroll_config = 133;
      string relation_tag = 134;
      uint64 owner_device_id = 135;
      uint64 auto_cover = 136;
      uint64 app_id = 137;
      uint64 webcast_sdk_version = 138;
      uint64 comment_name_mode = 139;
      string room_create_ab_param = 140;
      uint64 pre_enter_time = 141;
      uint64 ranklist_audience_type = 142;
      uint64 preview_flow_tag = 143;
      Image preview_tag_url = 144;
      QuizExtra quiz_extra = 145;
      map<string, string> AnchorABMap = 146;
      LinkerUsers linker_users = 147;
      uint64 linkmic_display_type = 148;
      AudioBGData AudioRoomBGImage = 149;
      LinkerUsers city_top_linker_users = 150;
      BorderInfo border_info = 151;
      Image city_top_background = 152;
      string city_top_distance = 153;
      uint64 live_room_mode = 154;
      Bonus bonus = 155;
      bool highlight = 156;
      bool is_official_channel_room = 157;
      ActivityRoomSkinInfo activity_room_skin_info = 158;
      repeated uint64 fans_group_admin_user_ids = 159;
      RoomReplayInfo replay_info = 160;
      uint64 official_channel_uid = 161;
      string live_platform_source = 162;
      uint64 acquaintance_status = 163;
      CommentWallInfo comment_wall_info = 164;
      CommentWallPosition comment_wall_position = 165;
      bool live_type_vs_live = 166;
      bool live_type_vs_premiere = 167;
      EpisodeExtraInfo episode_extra = 168;
      repeated int32 vs_roles = 169;
      string item_explicit_info = 170;
      ShortTouchAuth short_touch_auth = 171;
      uint64 sofa_layout = 172;
      AnnouncementInfo announcement_info = 173;
      bool is_need_check_list = 174;
      LiveStatusInfo live_status_info = 175;
      RoomIMInfo im_info = 176;
      LabelInfo assist_label = 177;
      InteractOpenExtra interact_open_extra = 178;
      VerticalTypeInfo vertical_type_info = 179;
      repeated FilterWord filter_words = 180;
      LabelInfo dynamic_label = 181;
      LinkerDetail linker_detail = 182;
      int32 visibility_range = 183;
      CornerMarkReach corner_mark_reach = 184;
      PreviewExposeData preview_expose = 185;
      WelfareProjectInfo welfare_project_info = 186;
      int32 game_room_type = 187;
      PaidLiveData paid_live_data = 188;
      EasterEggData easter_egg_data = 189;
      bool title_recommend = 190;
      uint64 danmaku_detail = 191;
      AvatarLiveInfo avatar_live_info = 192;
      CircleInfo circle_info = 193;
      uint64 has_promotion_games = 194;
      Image screenshot_sover = 195;
      Appearance appearance = 196;
      EcomData ecom_data = 197;
      IndustryServiceInfo industry_service_info = 198;
      RelevantRecommendation relevant_recommendation = 199;
      RoomSpecificSceneTypeInfo scene_type_info = 200;
      GameCPData game_cp = 201;
      GamePlayData game_play = 202;
      UnionLiveInfo union_live_info = 203;
      BeautifyInfo beautify_info = 204;
      ToolBarData toolbar_data = 205;
      AnchorTabLabel anchor_tab_label = 206;
      LifeGrouponInfo life_groupon_info = 207;
      VipData vip_data = 208;
      uint64 toutiao_cover_recommend_level = 209;
      uint64 toutiao_title_recommend_level = 210;
      repeated UpperRightWidgetData upper_right_widget_data_list = 211;
      FeedbackCard live_feedback_card = 212;
      repeated LabelInfo assist_label_list = 213;
      DesireInfo desire_info = 214;
      HotRoomInfo hot_room_info = 215;
      bool with_aggregate_column = 216;
      CastScreenData cast_screen_data = 217;
      OfficialChannelExtraInfo official_channel_extra = 218;
      string auth_city = 219;
      ActivityLiveRecommendConfig activity_live_recommend_config = 220;
      RoomChannelData room_channel = 221;
      PackMetaInfo pack_meta = 222;
      ActivityData activity_data = 223;
      LikeDisplayConfig like_display_config = 224;
      RoomViewStats room_view_stats = 225;
      MatchRoomData match = 226;
      CommentaryRoomInfo commentary_room_info = 227;
      uint64 redpacket_audience_auth = 228;
      MatchChatConfig match_chat_config = 229;
      uint64 vs_main_replay_id = 230;
      string screen_capture_sharing_title = 231;
      ShareResource share_resource = 232;
      repeated string sharing_music_id_list = 233;
      PublicScreenBottomInfo public_screen_bottom_info = 234;
      StreamUrl push_stream_hkt = 235;
      RoomBasisData basis = 300;
      RoomInteractData interact = 301;
      RoomRevenueData revenue = 302;
      RoomReqUserData req_user = 303;
      RoomAnchorData anchor_data = 304;
      RoomOthersData others = 305;
      PicoInfo pico_info = 306;
      RoomGameData game_data = 307;
      RoomFeedData feed_data = 308;
      OpenContentData open_content_data = 309;
      ClientComponent client_component_data = 310;
      RoomPlatformComponentsData platform_components_data = 311;
      IOSClientComponent ios_client_component_data = 312;
      string owner_open_id = 5000;
      repeated string admin_user_open_ids = 5001;
      repeated string fans_group_admin_user_open_ids = 5002;
      string official_channel_open_id = 5003;
      Image cover_gauss = 5004;
    }

    message GroupLiveData {
      uint64 is_group_live = 1;
      int32 group_live_mode = 2;
    }

    message FeaturedPublicScreenConf {
      uint64 status = 1;
    }

    message PublicScreenSpeedConf {
      uint64 update_interval = 1;
      int32 scroll_size = 2;
      int32 fold_size = 3;
      int32 scroll_speed = 4;
    }

    message ShareComponentInfo {
      uint64 int64String = 1;
    }

    message RoomPlatformComponentsData {
      RoomTitle room_title = 1;
      RoomViewStats room_count = 2;
      RoomAvator room_avator = 3;
      RoomPublicScreenInfo public_screen_info = 4;
      RoomFullVideoBTN full_video_btn = 5;
      RoomBanner banner = 6;
      RoomCore core = 7;
      ShareComponentInfo share_component_info = 8;
    }

    message PaidLiveSubscribe {
      uint64 paid_live_type = 1;
      uint64 subscribe_event_time = 2;
    }

    message RoomTitle {
      string title = 1;
      string introduction = 2;
      uint64 left_tag = 3;
      string left_period = 4;
      string left_toast = 5;
      TitleIcon left_icon = 6;
      int32 ui_type = 7;
      bool portrait_show = 8;
      bool landscape_show = 9;
    }

    message RoomAvator {
      Image avatar = 1;
      Image authentication_info = 2;
      string nick_name = 3;
      bool has_fans_club = 4;
      uint64 follow_status = 5;
      bool invalid_follow_status = 6;
      uint64 follow_report_scene = 7;
      AvatorBorder border = 8;
      repeated uint64 first_label = 9;
      repeated uint64 second_label = 10;
      uint64 fans_club_type = 11;
      uint64 animation_type = 12;
      uint64 uid = 13;
      string sec_uid = 14;
      uint64 fan_ticket = 15;
      uint64 like_count = 16;
      string total_user_str = 17;
      int32 secret = 18;
      AnchorTabLabel first_tab_label = 19;
      AnchorTabLabel second_tab_label = 20;
      repeated ProfileViewData profile_view_data = 21;
      string open_id = 5000;
    }

    message ProfileViewData {
      Text title = 2;
      Text sub_title = 3;
      uint64 show_duration = 4;
      int32 source = 5;
    }

    message RoomFeedData {
      LabelInfo relation_label = 1;
      FollowTopAppearance follow_top_appearance = 2;
      StreamCutPosition cut_position = 3;
      DrawerConfig drawer_config = 4;
      bool can_show_inner_card = 5;
      uint64 share_count = 6;

      message StreamCutPosition {
        double x1 = 1;
        double y1 = 2;
        double x2 = 3;
        double y2 = 4;
        int32 source_width = 5;
        int32 source_height = 6;
      }

      message FollowTopAppearance {
        int32 style = 1;
        StreamCutPosition cut_position = 2;
        Image image = 3;
      }

      message DrawerConfig {
        AvatarArea avatar_area = 1;
        EntranceIcon entrance_icon = 2;
        EntranceTitle entrace_title = 3;
        ArrowView arrow_view = 4;
        EntranceLayout entrance_layout = 5;
        SpecialConfig special_config = 6;

        message SpecialConfig {
          EntranceTitle entrace_title = 1;
          int32 more_live_tab = 2;
          int32 insert_room_reason = 3;
          FreqInfo freq_info = 4;
          string current_talent = 5;
        }

        message AvatarArea {
          int32 can_show_follow = 1;
        }

        message EntranceIcon {
          Image image = 1;
          int32 anim_show_method = 2;
          int32 anim_stop_method = 3;
          string height = 4;
        }

        message EntranceTitle {
          string text = 1;
        }

        message ArrowView {
          int32 visibility = 1;
        }

        message EntranceLayout {
          int32 layout_params = 1;
        }

        message FreqInfo {
          int32 show_duration = 1;
          string freq_key = 2;
          int32 freq_duration = 3;
        }
      }
    }

    message PicoInfo {
      uint64 pico_live_type = 1;
      string pico_virtual_live_bg_image_uri = 2;
      string pico_create_scene = 3;
      string custom_info = 4;
      string pico_virtual_live_bg_image_digest = 5;
      VirtualLiveBgImages virtual_live_bg_images = 6;
      float pitch = 7;
      uint64 client_live_type = 8;
      int32 pico_vr_transfer = 9;
      uint64 pico_live_mode = 11;
      map<string, string> stream_mapping = 13;

      message VirtualLiveBgImages {
        Image original_image = 1;
        string original_digest = 2;
        bool is_upright = 3;
        repeated Image converted_images = 4;
        repeated ConvertedImage converted_list = 5;

        message ConvertedImage {
          uint64 quality = 1;
          Image image = 2;
          string digest = 3;
        }
      }
    }

    message OpenContentData {
      OpenActivityData open_activity_data = 1;
    }

    message OpenActivityData {
      Image cover_label = 1;
    }

    message PublicScreenBottomInfo {
      BottomCard bottom_cards = 1;

      message BottomCard {
        string name = 1;
        uint64 priority = 2;
        uint64 duration = 3;
        string biz_params = 4;
      }
    }

    message ShareResource {
      Image toast_background = 1;
      map<string, string> qrcode = 2;
      string ug_share_info = 3;
    }

    message MatchChatConfig {
      string main_group_icon_url = 1;
      string main_group_background_url = 2;
      string guest_group_icon_url = 3;
      string guest_group_background_url = 4;
      repeated string aggregate_icon_url = 5;
    }

    message CommentaryRoomInfo {
      uint64 user_id = 1;
      Image avatar = 2;
      string nickname = 3;
      string title = 4;
      uint64 room_id = 5;
    }

    message RoomBasisData {
      uint64 next_ping = 1;
      bool is_customize_audio_room = 2;
      uint64 need_request_luckybox = 3;
      uint64 secret_room = 4;
      uint64 foreign_user_room = 5;
    }

    message RoomInteractData {
      uint64 landscape_comment_style = 1;
      EpisodeExtraInfo vs_component_extra = 2;
      FeaturedPublicScreenConf featured_public_screen_data = 3;
      PublicScreenSpeedConf public_screen_speed_conf = 4;
      RoomIntroLabel public_room_intro_label = 5;
      InputDefaultConfig input_default_config = 6;
    }

    message RoomRevenueData {
      OpenGame open_game = 1;
      AnchorLinkmic anchor_linkmic = 2;
    }

    message RoomReqUserData {
      float user_share_room_score = 1;
      int32 enter_user_device_type = 2;
    }

    message RoomAnchorData {
      string finish_schema = 1;
      GameAnchorInfo game_anchor_info = 2;
      string frame_scale = 3;
      string group_id_list = 4;
    }

    message GameAnchorInfo {
      string category_id = 1;
      bool is_key_anchor = 2;
    }

    message RoomOthersData {
      DecotationDetail deco_detail = 1;
      MorePanelData more_panel_info = 2;
      AppointmentData appointment_info = 3;
      WebSkinData web_skin = 4;
      WebProgramme programme = 5;
      LiveMatrixInfo live_matrix_info = 6;
      WebLivePortOptimization web_live_port_optimization = 7;
      GiftPanelTopperTray gift_panel_topper_tray = 8;
      EnterGiftAnimation enter_gift_animation = 9;
      PaidLiveSubscribe paid_live_subscribe = 10;
      GroupLiveData group_live_data = 11;
      uint64 lvideo_item_id = 12;
      WebEnterBenefitPointData web_enter_benefit_point_data = 13;
      StreamRecognitionContainers recognition_containers = 14;
      AnchorBottomToolBar anchor_bottom_tool_bar = 15;
      AnchorTogetherLive anchor_together_live = 16;
      uint64 mosaic_version = 17;
      WebData web_data = 18;
      MetricTrackerData metric_tracker_data_list = 19;
    }

    message WebLivePortOptimization {
      map<string, WebLivePortConfig> strategy_config = 1;
      string strategy_extra = 2;
    }

    message WebLivePortConfig {
      int32 strategy_type = 1;
      bool use_config_duration = 2;
      string pause_monitor_duration = 3;
    }

    message WebSkinData {
      bool enable_skin = 1;
    }

    message WebProgramme {
      bool enable_programme = 1;
    }

    message LiveMatrixInfo {
      uint64 id = 1;
      string name = 2;
    }

    message RoomGameData {
      RoomGameDataChannelConfig room_game_data_channel_config = 1;
      GameTagInfo game_tag_info = 2;
      SandwichBorderInfo sandwich_border_info = 3;
      GameRoomSticker game_room_sticker = 4;
    }

    message AppointmentData {
      uint64 appointment_id = 1;
      bool is_subscribe = 2;
    }

    message MorePanelData {
      int32 load_strategy = 1;
    }

    message ActivityData {
      bool xg_play = 1;
      MatchRoomData match = 2;
    }

    message CastScreenData {
      string show_text = 1;
      repeated uint64 allow_list = 2;
      int32 sdk_version = 3;
      CastOttPermission permission = 4;
      int32 force_cast_only = 5;
    }

    message CastOttPermission {
      bool enable = 1;
      string failure_toast = 2;
    }

    message DesireInfo {
      uint64 desire_id = 1;
      string desire_id_str = 2;
    }

    message FeedbackCard {
      string title = 1;
      uint64 feedback_id = 2;
      repeated Question question = 3;
      Condition condition = 4;
      uint64 room_id = 5;
      Room room_data = 6;
      string negative_text = 7;
      Image bgm = 8;
      int32 feedback_type = 9;
      int32 inflow_feedback_type = 10;
      int32 anchor_feedback_type = 11;

      message ClientImpression {
        uint64 ignore_submit_counts = 1;
        uint64 ignore_submit_show_interval = 2;
        uint64 ending_page_show_duration = 3;
      }

      message Option {
        string key = 1;
        string text = 2;
        uint64 sub_question_id = 3;
        bool negative = 4;
        string toast_text = 5;
        int32 tendency = 6;
      }

      message RoomCardStruct {
        Room data = 1;
        string title = 2;
        string sub_title = 3;
      }

      message Question {
        string question_key = 1;
        string question_text = 2;
        uint64 type = 3;
        repeated Option options = 4;
        uint64 question_id = 5;
        repeated RoomCardStruct room_cards = 6;
      }

      message Condition {
        uint64 from_time = 1;
        uint64 to_time = 2;
        uint64 action_ids = 3;
        uint64 action_type = 4;
        uint64 preview_time = 5;
        uint64 pcu_lower_threshold = 6;
        ClientImpression client_impression = 7;
      }
    }

    message UpperRightWidgetData {
      string name = 1;
      int32 widget_type = 2;
      string extra = 3;
      int32 priority = 4;
    }

    message VipData {
      int32 vip_room = 1;
    }

    message AnchorTabLabel {
      string content = 1;
      Image label = 2;
      Image icon = 3;
      int32 style = 4;
      int32 type = 5;
      string key = 6;
      string accessible_content = 7;
      map<string, string> track_params = 8;
      DSLDetail dsl_label = 9;
    }

    message BeautifyInfo {
      bool use_filter = 1;
      bool commerce_use_filter = 2;
    }

    message UnionLiveInfo {
      repeated GuestAnchor guest_anchors = 1;
      string avatar_description = 2;
      bool fixed_sort = 3;
      string tag = 4;
      int32 type = 5;

      message GuestAnchor {
        User user = 1;
        string tag = 2;
        int32 status = 3;
      }
    }

    message RoomSpecificSceneTypeInfo {
      bool is_union_live_room = 1;
      bool is_life = 2;
      int32 is_protected_room = 3;
      int32 is_lasted_goods_room = 4;
      int32 is_desire_room = 5;
      bool commentary_type = 6;
      int32 is_sub_orientation_vertical_room = 7;
    }

    message RelevantRecommendation {
      int32 relevant_type = 1;
      int32 bottom_bar_category = 2;
      Image icon = 3;
      string bar_text_prefix = 4;
      string bar_text_postfix = 5;
      HighLightInfo high_light_info = 6;
      EcomInfo ecom_info = 7;
      VsInfo vs_info = 8;
      WhiteCategoryInfo white_category_info = 9;

      message HighLightInfo {
        string main_url = 1;
        string bak_url = 2;
      }

      message EcomInfo {
        uint64 product_id = 1;
        string product_name = 2;
      }

      message Episode {
        uint64 episode_id = 1;
        string episode_name = 2;
        Image episode_cover = 3;
        string current_period = 4;
        uint64 season_id = 5;
        string item_id = 6;
      }

      message VsInfo {
        repeated Episode episodes = 1;
      }

      message WhiteCategoryInfo {
        uint64 first_level_tag_id = 1;
      }
    }

    message IndustryServiceInfo {
      bool entrance_open = 1;
      Image icon_image = 2;
      ConsultInfo consult_info = 3;

      message ConsultInfo {
        string biz_info = 1;
        int32 consult_role = 2;
      }
    }

    message EcomData {
      EcomLiveCard live_card = 1;
      EcomPop pop = 2;
      EcomGoodsCard goods_card = 3;
      repeated RedsShowInfo reds_show_infos = 4;
      RoomCartV2 room_cart_v2 = 5;
      int32 instant_type = 6;
      string route_rule = 7;
    }

    message AvatarLiveInfo {
      string type = 1;
      string text = 2;
      int32 text_size = 3;
      Image image = 4;
    }

    message WelfareProjectInfo {
      uint64 project_id = 1;
      uint64 show_frequency = 2;
      string container_card_url = 3;
      string welfare_detail_page_url = 4;
      string project_id_str = 5;
    }

    message CornerMarkReach {
      bool need_reach = 1;
      uint64 duration = 2;
      uint64 elem_type = 3;
    }

    message VerticalTypeInfo {
      string name = 1;
      uint64 tab_type = 2;
      uint64 tag_id = 3;
      bool is_sub_tag = 4;
      Image icon = 5;
      uint64 valid_time = 6;
      uint64 priority = 7;
      string extra = 8;
      string event_extra = 9;
    }

    message FilterWord {
      string id = 1;
      bool is_selected = 2;
      string name = 3;
    }

    message LabelInfo {
      uint64 label_type = 1;
      uint64 display_type = 2;
      SpliceLabel splice_label = 3;
      Image whole_label = 4;
      string extra = 5;
      ProfilePicSpliceLabel profile_pic_splice_label = 6;
      map<string, string> et_extra = 7;
    }

    message VSLinkInfo {
      string title = 1;
      string tab_title = 2;
      repeated VSLinkNode rooms = 3;
      int32 pattern = 4;
    }

    message VSLinkNode {
      uint64 room_id = 1;
      string room_id_str = 2;
      string title = 3;
      uint64 live_room_mode = 4;
      User owner = 5;
    }

    message SpliceLabel {
      string text = 1;
      string text_color = 2;
      Image background_image = 3;
      Image icon_image = 4;
      string background_color = 5;
      uint64 icon_width = 6;
      uint64 icon_height = 7;
      uint64 icon_raduis = 8;
      uint64 text_front_size = 9;
      uint64 text_front_bold = 10;
      uint64 text_front_italic = 11;
    }

    message ProfilePicSpliceLabel {
      LabelProfileItem profile_list = 1;
    }

    message LabelProfileItem {
      uint64 user_id = 1;
      string nick_name = 2;
      Image profile_pic = 3;
      string open_id = 5000;
    }

    message LiveStatusInfo {
      int32 live_status = 1;
      User live_user = 2;
      map<int32, Image> live_notify_light = 3;
      string preview_text = 4;
    }

    message ShortTouchAuth {
      int32 commerce_lottery = 1;
    }

    message EpisodeMod {
      int32 episode_stage = 1;
      int32 episode_type = 2;
      int32 episode_sub_type = 3;
      int32 episode_record_type = 4;
    }

    message ToolbarItemConfig {
      int32 toolbar_type = 1;
      Image icon = 2;
      string jump_schema = 3;
      int32 display_type = 4;
      Image dynamic_icon = 5;
      Image icon_vertical = 6;
      Image dynamic_bottom_icon = 7;
      Image bottom_icon = 8;
      repeated Toast toast_list = 9;
      string extra = 10;
    }

    message Toast {
      uint64 start_time = 1;
      uint64 end_time = 2;
      string content = 3;
      string schema = 4;
      string toast_id = 5;
    }

    message WatchInfo {
      string desc = 1;
      string count = 2;
      string count_with_backup = 3;
      int32 real_count = 4;
      uint64 real_count_int64 = 5;
      int32 live_count_display_type = 6;
      uint64 display_type_start_time = 7;
      string format_count = 8;
    }

    message EpisodeExtraInfo {
      EpisodeMod episode_mod = 1;
      string current_period = 2;
      string title = 3;
      string episode_list_h5 = 4;
      WatchInfo watch_info = 5;
      uint64 episode_id = 6;
      string episode_id_str = 7;
      string item_id = 8;
      string selection_url = 9;
      string relation_place_text = 10;
      repeated string operation_place_text_list = 11;
      ToolbarItemConfig toolbar_list = 12;
      bool collected = 13;
      uint64 season_id = 14;
      string finish_url = 15;
      string release_time = 16;
      uint64 watch_period = 17;
      uint64 latest_period = 18;
      string show_name = 19;
      int32 current_period_raw = 20;
      int32 video_code = 21;
      string season_id_str = 22;
      string watch_pv_raw = 23;
      uint64 next_special_episode_id = 24;
      Image cover = 25;
      Image cover_vertical = 26;
      int32 style = 27;
      EpisodePremierePlay play_control = 28;
      EpisodePreviewImage preview_image = 29;
      VSGiftPannel gift_pannel = 30;
      VSPannelIcon pannel_icon = 31;
      repeated ToolbarItemConfig pannel_toolbar = 32;
      EpisodePreviewBottom preview_bottom = 33;
      string draw_sub_title = 34;
      Image season_cover_vertical = 35;
      repeated VSCameraInfo camera_infos = 36;
      uint64 default_camera_id = 37;
      uint64 default_camera_id_str = 38;
      string default_camera_id_str_v2 = 39;
      VSCameraInfo priority_camera = 40;
      string multi_season_tag = 41;
      Image preview_background = 42;
      Image background = 43;
      EpisodeMod mod = 44;
      Image item_comment_icon = 45;
      VSWatermark vs_watermark = 46;
      VSItemComment item_comment = 47;
      string season_type_name = 48;
      VSBar vs_bar = 49;
      WatchInfo season_watch_info = 50;
      VSLinkInfo link_room_info = 51;
      CommentConfig comment_config = 52;
      string camera_infos_table_title = 53;
      int32 episode_status = 54;
      MatchRoomInfo match_room_info = 55;
      MultiCameraBasicInfo multi_camera_basic_info = 56;
      SharePosterInfo share_poster_info = 57;
      VSPremiereToast premiere_toast = 58;
      string preview_bottom_text = 59;
      repeated BusinessConfigure business_configure = 60;
      string public_screen_color = 61;
      string chat_tray_color = 62;
      MultiTab multi_tab = 63;
      Image main_camera_cover = 64;
      string main_camera_title = 65;
      map<int32, PrivilegeInfo> privilege_info = 66;
      bool is_interact_config_exist = 67;
      MainCameraMatchInfo main_camera_match_info = 68;
      uint64 group_id = 69;
      VSConfigDrawer vs_config_drawer = 70;
      TitleIcon title_icon = 71;
      string group_id_str = 72;
      map<string, Data.PrivilegeInfo> privilege_info_v2 = 73;
    }

    message TitleIcon {
      Image icon = 1;
      int32 size_type = 2;
    }

    message VSConfigDrawer {
      MatchDrawer drawer = 1;
      Image drawer_label = 2;
      Image drawer_background = 3;
    }

    message VSPremiereToast {
      string left_top_toast = 1;
      string player_toast = 2;
      string player_top_toast = 3;
      Image icon = 4;
    }

    message CommentConfig {
      repeated CommentColor comment_colors = 1;
      repeated CommentRole comment_roles = 2;
      string role_suffix = 3;
      string role_title = 4;
      string unlock_role_tip = 5;
      repeated CommentMedal comment_medals = 6;
      string medal_title = 7;
    }

    message CommentMedal {
      string name = 1;
      Image image = 2;
      map<string, string> jump_schema = 3;
      Image keyboard_image = 4;
    }

    message CommentColor {
      string name = 1;
      string color = 2;
    }

    message CommentRole {
      uint64 role_id = 1;
      string name = 2;
      Image avatar = 3;
    }

    message Bonus {
      uint64 bonus_type = 1;
      BonusAuthor author = 2;
      string title = 3;
      string sub_title = 4;
      string text = 5;
      string style = 6;
      BonusCommerce commerce_info = 7;
      string open_url = 8;
      string token = 9;
      uint64 source = 10;
      Image label = 11;
      uint64 scene_id = 12;
      bool maybe_carp = 13;
      uint64 countdown_second = 14;
    }

    message BonusCommerce {
      uint64 id = 1;
    }

    message BonusAuthor {
      uint64 id = 1;
      string name = 2;
      Image avatar_larger = 3;
      Image avatar_thumb = 4;
      Image avatar_medium = 5;
    }

    message BorderInfo {
      uint64 border_type = 1;
      StaticBorderInfo static_border = 2;
      DynamicBorderInfo dynamic_border = 3;
      uint64 duration = 4;
    }

    message StaticBorderInfo {
      Image top = 1;
      Image bottom = 2;
      Image left = 3;
      Image right = 4;
    }

    message DynamicBorderInfo {
      uint64 id = 1;
    }

    message LinkerUsers {
      uint64 count = 1;
      repeated User users_info = 2;
    }

    message OfficialChannelInfo {
      User channel_user = 1;
      string channel_name = 2;
      string channel_intro = 3;
      uint64 end_timestamp = 4;
      uint64 forbidden_before_end = 5;
      int32 current_show_id = 6;
      uint64 max_enter_time = 7;
      uint64 max_next_time = 8;
      map<int64, int64> delay_enter_time = 9;
      bool host_permission = 10;
      uint64 backup_room_id = 11;
      User living_user = 12;
      bool host_can_accept_gift = 13;
      repeated uint64 host_uids = 14;
      string backup_room_id_str = 15;
      bool enable_host = 16;
      repeated string host_open_ids = 5000;
    }

    message OfficialChannelExtraInfo {
      uint64 show_start_ts = 1;
      string showlist_schema = 2;
      uint64 showlist_id = 3;
      string showlist_name = 4;
    }

    message RoomShortTouchAreaConfig {
      map<int32, Element> elements = 1;
      map<int32, ForbiddenType> forbidden_types_map = 3;
      map<int32, TempStateCondition> temp_state_condition_map = 4;
      map<int32, TempStateStrategy> temp_state_strategy = 5;
      repeated string strategy_feat_whitelist = 6;
      TempStateGlobalCondition temp_state_global_condition = 7;

      message Element {
        int32 type = 1;
        int32 priority = 2;
      }

      message ForbiddenType {
        int32 type = 1;
        string reason = 2;
      }

      message TempStateType {
        int32 strategy_type = 1;
        int32 priority = 2;
      }

      message TempStateCondition {
        TempStateType type = 1;
        int32 minimum_gap = 2;
      }

      message TempStateStrategy {
        int32 short_touch_type = 1;
        map<int32, TempStateStrategyInfo> strategy_map = 2;

        message TempStateStrategyInfo {
          RoomShortTouchAreaConfig.TempStateType type = 1;
          int32 duration = 2;
          string strategy_method = 3;
        }
      }

      message TempStateGlobalCondition {
        int32 duration_gap = 1;
        int32 allow_count = 2;
        int32 ignore_strategy_types = 3;
      }
    }

    message MatchInfo {
      MatchSkinInfo skin = 1;
    }

    message MatchSkinInfo {
      FollowBtnSkin unfollow_skin = 1;
      FollowBtnSkin followed_skin = 2;
      string tab_selected_color = 3;
      string tab_unselected_color = 4;
      string comment_place_holder_color = 5;
      string anchor_name_color = 6;
      string anchor_info_color = 7;
      Image user_banner_image = 8;
      Image tool_bar_image = 9;
      string comment_place_holder_bg_color = 10;
      Image share_icon = 11;

      message FollowBtnSkin {
        string left_color = 1;
        string right_color = 2;
        string font_color = 3;
      }
    }

    message RoomActivityTag {
      int32 activity_type = 1;
      string name = 2;
      string url = 3;
      string extra = 4;
      Image icon = 5;
    }

    message RoomAuthStatus {
      bool Chat = 1;
      bool Danmaku = 2;
      bool Gift = 3;
      bool LuckMoney = 4;
      bool Digg = 5;
      bool RoomContributor = 7;
      bool Props = 8;
      bool UserCard = 9;
      bool POI = 10;
      uint64 MoreAnchor = 11;
      uint64 Banner = 12;
      uint64 Share = 13;
      uint64 UserCorner = 14;
      uint64 Landscape = 15;
      uint64 LandscapeChat = 16;
      uint64 PublicScreen = 17;
      uint64 GiftAnchorMt = 18;
      uint64 RecordScreen = 19;
      uint64 DonationSticker = 20;
      uint64 HourRank = 21;
      uint64 CommerceCard = 22;
      uint64 AudioChat = 23;
      uint64 DanmakuDefault = 24;
      uint64 KtvOrderSong = 25;
      uint64 SelectionAlbum = 26;
      uint64 Like = 27;
      uint64 MultiplierPlayback = 28;
      uint64 DownloadVideo = 29;
      uint64 Collect = 30;
      uint64 TimedShutdown = 31;
      uint64 Seek = 32;
      uint64 Denounce = 33;
      uint64 Dislike = 34;
      uint64 OnlyTa = 35;
      uint64 CastScreen = 36;
      uint64 CommentWall = 37;
      uint64 BulletStyle = 38;
      uint64 ShowGamePlugin = 39;
      uint64 VSGift = 40;
      uint64 VSTopic = 41;
      uint64 VSRank = 42;
      uint64 AdminCommentWall = 43;
      uint64 CommerceComponent = 44;
      uint64 DouPlus = 45;
      uint64 GamePointsPlaying = 46;
      uint64 Poster = 47;
      uint64 Highlights = 48;
      uint64 TypingCommentState = 49;
      uint64 StrokeUpDownGuide = 50;
      uint64 UpRightStatsFloatingLayer = 51;
      uint64 CastScreenExplicit = 52;
      uint64 Selection = 53;
      uint64 IndustryService = 54;
      uint64 VerticalRank = 55;
      uint64 EnterEffects = 56;
      uint64 FansClub = 57;
      uint64 EmojiOutside = 58;
      uint64 CanSellTicket = 59;
      uint64 DouPlusPopularityGem = 60;
      uint64 MissionCenter = 61;
      uint64 ExpandScreen = 62;
      uint64 FansGroup = 63;
      uint64 Topic = 64;
      uint64 AnchorMission = 65;
      uint64 Teleprompter = 66;
      uint64 ChatDynamicSlideSpeed = 67;
      uint64 SmallWindowDisplay = 68;
      uint64 MessageDispatch = 69;
      uint64 RoomChannel = 70;
      uint64 ChatDispatch = 71;
      uint64 LinkmicGuestLike = 72;
      uint64 MediaLinkmic = 73;
      uint64 VideoShare = 74;
      uint64 ChatGuideEmoji = 75;
      uint64 ChatGuideImage = 76;
      uint64 PCPlay = 77;
      uint64 PadPlay = 78;
      uint64 LongTouch = 79;
      uint64 FirstFeedHistChat = 80;
      uint64 MoreHistChat = 81;
      uint64 WordAssociation = 82;
      uint64 LandscapeScreenCapture = 83;
      uint64 LandscapeScreenRecording = 84;
      uint64 ScreenProjectionBarrage = 85;
      uint64 SmallWindowPlayer = 86;
      uint64 ChatOperate = 87;
      uint64 EcomFansClub = 88;
      uint64 AudioChatTotext = 89;
      uint64 CommonCard = 90;
      uint64 ShortTouch = 91;
      uint64 HostTeamChannel = 92;
      uint64 LandscapeChatDynamicSlideSpeed = 93;
      uint64 HostTeam = 94;
      uint64 AnchorHotMessageAggregated = 95;
      uint64 AnchorColdMessageTiled = 96;
      uint64 ScreenBottomInfo = 97;
      uint64 PreviewHotCommentSwitch = 98;
      uint64 RoomWidget = 99;
      RoomAuthOffReasons OffReason = 100;
      RoomAuthSpecialStyle SpecialStyle = 101;
      uint64 PanelECService = 102;
      uint64 FixedChat = 103;
      uint64 LandscapeGift = 104;
      uint64 HotChatTray = 105;
      uint64 ItemShare = 106;
      uint64 ShortTouchTempState = 107;
      uint64 StickyMessage = 108;
      uint64 ProjectionBtn = 109;
      uint64 ChatDynamicSlideSpeedAnchor = 110;
      uint64 PosterCache = 111;
      uint64 MediaHistoryMessage = 112;
      uint64 ToolbarBubble = 113;
      uint64 ImHeatValue = 114;
      uint64 InteractiveComponent = 115;
      uint64 ChatReply = 116;
      uint64 ChatMention = 117;
      uint64 FrequentlyChat = 118;
      uint64 StreamAdaptation = 119;
      uint64 VideoAmplificationType = 120;
      uint64 FeaturedPublicScreen = 121;
      uint64 LandscapeScreenShare = 122;
      uint64 VerticalScreenShare = 123;
      uint64 AnchorAudioChat = 124;
      uint64 PreviewChatExpose = 125;
      uint64 FusionEmoji = 126;
      uint64 MyLiveEntrance = 127;
      uint64 ChatIdentity = 128;
      uint64 MarkUser = 129;
      uint64 LongPressOption = 130;
      uint64 ClearEntranceOption = 131;
      uint64 PlayerRankList = 132;
      uint64 AIClone = 133;
      uint64 GiftVote = 134;
      uint64 TextGift = 135;
      uint64 FansClubLetter = 136;
      uint64 FansClubBlessing = 137;
      uint64 FansClubNotice = 138;
      uint64 FansClubDeclaration = 139;
      uint64 MessageGift = 140;
      uint64 EnhancedTouch = 141;
      uint64 ChatMentionV2 = 142;
      uint64 RoomChatOperatePanel = 143;
      uint64 RoomChatLikeDisplay = 144;
      uint64 RoomSecretChat = 145;
      uint64 VsCommentBar = 200;
      uint64 VsWelcomeDanmaku = 201;
      uint64 VsFansClub = 202;
      uint64 VsExtensionEnableFollow = 203;
      uint64 VsDouPlus = 204;
      uint64 QuizGamePointsPlaying = 205;
      uint64 UgcVSReplayDelete = 206;
      uint64 UgcVsReplayVisibility = 207;
      uint64 InteractionGift = 208;
      uint64 SubscribeCardPackage = 209;
      uint64 ShowQualification = 210;
      uint64 UseHostInfo = 301;
      uint64 CountType = 5000;

      message RoomAuthOffReasons {
        string gift = 1;
      }

      message RoomAuthSpecialStyle {
        Style Chat = 1;
        Style Gift = 2;
        Style RoomContributor = 3;
        Style Like = 4;
        Style RoomChannel = 5;
        Style Share = 6;
        Style CastScreenAuth = 7;
        Style Landscape = 8;

        message Style {
          int32 UnableStyle = 1;
          string Content = 2;
          int32 OffType = 3;
          int32 AnchorSwitch = 4;
          string SwitchStatusTipMsg = 5;
          string SwitchStatusAnchorTipMsg = 6;
          int32 AnchorSwitchForPaidLive = 7;
          string ContentForPaidLive = 8;
        }
      }
    }

    message MoreEntrance {
      string Title = 1;
      uint64 Type = 2;
    }

    message RoomTab {
      int32 tab_type = 1;
      string tab_name = 2;
      string tab_url = 3;
    }

    message RoomExtra {
      bool is_sandbox = 1;
      RegionRestriction enter_region_restriction = 2;
      RegionMatch enter_region_match = 3;
      SafeReason filter_with_no_context = 4;
      uint64 xigua_uid = 5;
      uint64 limit_strategy = 6;
      string limit_appid = 7;
      int32 geo_block = 8;
      int32 vr_type = 9;
      bool is_virtual_anchor = 10;
      string create_scene = 11;
      bool realtime_replay_enabled = 12;
      uint64 realtime_playback_shift = 13;
      uint64 realtime_playback_start_shift = 14;
      repeated StreamUrl.LiveCoreSDKData.PullData.Options.Quality realtime_playback_qualities = 15;
      int32 facial_unrecognised = 16;
      uint64 vs_type = 17;
      LocationInfo location_info = 18;
    }

    message SafeReason {
      int32 safe_type = 1;
    }

    message RegionRestriction {
      uint64 type = 1;
      repeated string white_list = 2;
      repeated string black_list = 3;
    }

    message RegionMatch {
      uint64 type = 1;
      repeated string allow_list = 2;
      repeated string deny_list = 3;
    }

    message StreamUrl {
      uint64 provider = 1;
      uint64 id = 2;
      string id_str = 3;
      map<string, string> resolution_name = 4;
      string default_resolution = 5;
      StreamUrlExtra extra = 6;
      string rtmp_push_url = 7;
      string rtmp_pull_url = 8;
      map<string, string> flv_pull_url = 9;
      repeated string candidate_resolution = 10;
      string hls_pull_url = 11;
      string hls_pull_url_params = 12;
      string rtmp_pull_url_params = 13;
      map<string, string> flv_pull_url_params = 14;
      string rtmp_push_url_params = 15;
      string push_urls = 16;
      LiveCoreSDKData live_core_sdk_data = 17;
      map<string, string> hls_pull_url_map = 18;
      repeated string complete_push_urls = 19;
      int32 stream_control_type = 20;
      int32 stream_orientation = 21;
      int32 push_stream_type = 22;
      map<string, LiveCoreSDKData.PullData> pull_datas = 23;
      PlaySetting play = 24;
      map<string, LiveCoreSDKData.PushData> push_datas = 25;
      int32 vr_type = 26;
      OpenStreamUrlEncrypt open_stream_url_encrypt = 5000;

      message StreamUrlExtra {
        uint64 height = 1;
        uint64 width = 2;
        uint64 fps = 3;
        uint64 max_bitrate = 4;
        uint64 min_bitrate = 5;
        uint64 default_bitrate = 6;
        uint64 bitrate_adapt_strategy = 7;
        uint64 anchor_interact_profile = 8;
        uint64 audience_interact_profile = 9;
        bool hardware_encode = 10;
        uint64 video_profile = 12;
        SuperResolution super_resolution = 14;
        bool h265_enable = 15;
        uint64 gop_sec = 16;
        bool bframe_enable = 17;
        bool roi = 18;
        bool sw_roi = 19;
        bool bytevc1_enable = 20;
        AnchorClientInfo anchor_client_info = 21;
        AdaptionInfo adaption_info = 22;

        message SuperResolution {
          bool enable = 1;
          uint64 strength = 2;
          bool antialiasing = 3;
        }

        message AnchorClientInfo {
          string custom_info = 1;
        }

        message AdaptionInfo {
          int32 vertical_resize_mode = 1;
        }
      }

      message LiveCoreSDKData {
        PullData pull_data = 1;
        PushData push_data = 2;
        string size = 3;

        message PullData {
          string stream_data = 1;
          Options options = 2;
          uint64 version = 3;
          map<string, string> hls_data_unencrypted = 4;
          int32 kind = 5;
          Extension extension = 6;
          repeated PlayInfo Hls = 7;
          repeated PlayInfo Flv = 8;
          string codec = 9;
          Display display = 10;
          string compensatory_data = 11;

          message Options {
            Quality default_quality = 1;
            repeated Quality qualities = 2;
            bool vpass_default = 3;

            message Quality {
              string name = 1;
              string sdk_key = 2;
              string v_codec = 3;
              string resolution = 4;
              int32 level = 5;
              int32 v_bit_rate = 6;
              string additional_content = 7;
              int32 fps = 8;
              int32 disable = 9;
            }
          }

          message Clip {
            float x = 1;
            float y = 2;
            float w = 3;
            float h = 4;
          }

          message CameraHorizontalPosition {
            int32 anchor = 1;
            float x = 2;
            float y = 3;
            float w = 4;
            float h = 5;
          }

          message Extension {
            Clip game_clip = 1;
            Clip camera_clip = 2;
            int32 camera_hidden = 3;
            string ts = 4;
            uint64 refresh = 5;
            int32 display_mode = 6;
            int32 game_hidden = 7;
            string game_room_id = 8;
            int32 layout = 9;
            Clip camera_clip_custom = 10;
            int32 camera_vertical_type = 11;
            CameraHorizontalPosition camera_horizontal_position = 12;
            int32 camera_horizontal_hidden = 13;
            int32 camera_horizontal_type = 14;
          }

          message PlayInfo {
            string url = 1;
            string quality_name = 2;
            string params = 3;
          }

          message Display {
            uint64 scale_width = 1;
            uint64 scale_height = 2;
          }
        }

        message PushData {
          map<string, ResolutionParams> resolution_params = 1;
          int32 push_stream_level = 2;
          bool pre_schedule = 3;
          string rtmp_push_url = 4;
          string push_params = 5;
          int32 kind = 6;
          uint64 stream_id = 7;
          string stream_id_str = 8;

          message ResolutionParams {
            uint64 width = 1;
            uint64 height = 2;
            uint64 default_bitrate = 3;
            uint64 min_bitrate = 4;
            uint64 max_bitrate = 5;
            uint64 fps = 6;
          }
        }
      }

      message PlaySetting {
        string horizontal = 1;
        string vertical = 2;
      }
    }

    message VSCameraInfo {
      uint64 camera_id = 1;
      string camera_id_str = 2;
      string title = 3;
      Image cover = 4;
      Image cover_vertical = 5;
      StreamUrl stream_info = 6;
      uint64 start_time = 7;
      uint64 end_time = 8;
      int32 style = 9;
      RoomAuthStatus camera_room_auth = 10;
      int32 vr_type = 11;
      CameraPaidInfo camera_paid_info = 12;
      CameraMatchInfo camera_match_info = 13;
      uint64 group_id = 14;
      int32 camera_type = 15;
      Image label = 16;
      uint64 pcu = 17;
      bool is_subscribed = 18;
      string group_id_str = 19;
      EpisodePreviewImage preview_image = 20;
      bool ban_switch = 21;
      uint64 paid_live_type = 22;
    }

    message CameraPaidInfo {
      int32 max_duration = 1;
      uint64 duration = 2;
      PriceInfo price_info = 3;
      PaidLiveBaseInfo paid_live_base_info = 4;
      PaidLiveBizExtra paid_live_biz_extra = 5;
      AsyncAuthData async_auth_data = 6;

      message PriceInfo {
        string amount = 1;
        string currency = 2;
      }

      message PaidLiveBizExtra {
        string ticket_panel_six_jump_url = 1;
        bool is_replay = 2;
        string paid_conversion_jump_url = 3;
        string prepay_cashier_jump_url = 4;
      }
    }

    message CameraMatchInfo {
      uint64 match_id = 1;
      uint64 content_id = 2;
      repeated uint64 event_ids = 3;
      repeated uint64 hide_tab_ids = 4;
      string match_id_str = 5;
    }

    message PaidLiveBaseInfo {
      int32 paid_live_type = 1;
      uint64 ticket_session_id = 2;
      uint64 ticket_price = 3;
      int32 view_right = 4;
      int32 delivery = 5;
      string ticket_session_id_str = 6;
    }

    message LinkMic {
      uint64 channel_id = 1;
      LinkMicChannelInfo channel_info = 2;
      repeated LinkMicBattleScore battle_scores = 3;
      LinkMicBattleSetting battle_settings = 4;
      uint64 rival_anchor_id = 5;
      uint64 linkmic_anchor_count = 6;
      string rival_anchor_open_id = 5000;

      message LinkMicChannelInfo {
        uint64 layout = 1;
        uint64 vendor = 2;
        uint64 dimension = 3;
      }

      message LinkMicBattleScore {
        uint64 user_id = 1;
        uint64 score = 2;
        string open_id = 5000;
      }

      message LinkMicBattleSetting {
        uint64 channel_id = 1;
        uint64 duration = 2;
        uint64 start_time = 3;
        uint64 start_time_ms = 4;
        string theme = 5;
        uint64 finished = 6;
        uint64 battle_id = 7;
        uint64 match_type = 8;
        uint64 play_mode = 9;
        uint64 team_mode = 10;
        uint64 activity_mode = 11;
      }
    }

    message Reservation {
      uint64 appointment_id = 1;
      uint64 anchor_id = 2;
      uint64 room_id = 3;
      uint64 start_time = 4;
      uint64 end_time = 5;
      repeated uint64 btn_rect = 6;
      string btn_color = 7;
      bool is_reserved = 8;
    }

    message DecotationDetail {
      Decoration text_decoration = 1;
      Decoration image_decoration = 2;
    }

    message Decoration {
      uint64 id = 1;
      Image image = 2;
      uint64 type = 3;
      repeated uint64 input_rect = 4;
      uint64 text_size = 5;
      string text_color = 6;
      string content = 7;
      uint64 max_length = 8;
      uint64 status = 9;
      uint64 h = 10;
      uint64 x = 11;
      uint64 w = 12;
      uint64 y = 13;
      uint64 kind = 14;
      uint64 sub_type = 15;
      Reservation reservation = 16;
      Image nine_patch_image = 17;
      repeated uint64 text_special_effects = 18;
      uint64 text_image_adjustable_start_position = 19;
      uint64 text_image_adjustable_end_position = 20;
      DecorationFontConfig text_font_config = 21;
      string audit_text_color = 22;
    }

    message DecorationFontConfig {
      uint64 FontID = 1;
      string DownloadUrl = 2;
      uint64 Status = 3;
      string font_name = 4;
    }

    message RoomStats {
      uint64 id = 1;
      string id_str = 2;
      uint64 fan_ticket = 3;
      uint64 money = 4;
      uint64 total_user = 5;
      uint64 gift_uv_count = 6;
      uint64 follow_count = 7;
      UserCountComposition user_count_composition = 8;
      uint64 watermelon = 9;
      uint64 digg_count = 10;
      uint64 enter_count = 11;
      string dou_plus_promotion = 12;
      string total_user_desp = 13;
      uint64 like_count = 14;
      string total_user_str = 15;
      string user_count_str = 16;
      uint64 comment_count = 17;
      uint64 welfare_donation_amount = 18;
      string up_right_stats_str = 19;
      string up_right_stats_str_complete = 20;

      message UserCountComposition {
        double city = 1;
        double video_detail = 2;
        double my_follow = 3;
        double other = 4;
      }
    }

    message RoomViewStats {
      bool is_hidden = 1;
      string display_short = 2;
      string display_middle = 3;
      string display_long = 4;
      uint64 display_value = 5;
      uint64 display_version = 6;
      bool incremental = 7;
      int32 display_type = 8;
      string display_short_anchor = 9;
      string display_middle_anchor = 10;
      string display_long_anchor = 11;
    }

    message TopFan {
      uint64 fan_ticket = 1;
      User user = 2;
    }

    message RoomUserAttr {
      uint64 room_id = 1;
      string room_id_str = 2;
      uint64 silence_flag = 3;
      uint64 admin_flag = 4;
      uint64 rank = 5;
    }

    message BurstInfo {
      uint64 burst_time_remain_seconds = 1;
      uint64 multiple = 2;
      uint64 property_definition_id = 3;
      Image property_icon = 4;
    }

    message RoomHealthScoreInfo {
      double score = 1;
      string bubble_message = 2;
      string jump_url = 3;
    }

    message TVStation {
      bool is_idle = 1;
      string state_desc = 2;
    }

    message CommentBox {
      Image icon = 1;
      string placeholder = 2;
    }

    message RoomCartV2 {
      int32 show_cart = 1;
    }

    message RoomCart {
      bool contain_cart = 1;
      uint64 total = 2;
      uint64 flash_total = 3;
      string cart_icon = 4;
      int32 show_cart = 5;
      CartVertical vertical = 6;
      CartHorizontal horizontal = 7;
      GlobalCustomIcons global_custom_icons = 8;
    }

    message CartVertical {
      bool allow_show_cart = 1;
    }

    message CartHorizontal {
      bool allow_show_cart = 1;
    }

    message GlobalCustomIcons {
      string static_icon_url = 1;
      string animated_icon_url = 2;
      string animated_common_icon_url = 3;
    }

    message ShortTouchBigCard {
      string big_card_url = 1;
      int32 container_type = 2;
      int32 width = 3;
      int32 height = 4;
      int32 duration = 5;
    }

    message TextViewModel {
      string text = 1;
      string text_color = 2;
      int32 text_size = 3;
      string bg_color = 4;
    }

    message ShortTouchBubble {
      string bubble_id = 1;
      TextViewModel ui_model = 2;
      int32 strategy = 3;
      int32 duration = 4;
    }

    message ShortTouchArea {
      int32 type = 1;
      uint32 priority = 2;
      uint64 min_webcast_sdk_version = 3;
      int32 short_touch_type = 4;
      ShortTouchInfo short_touch_info = 5;
      ShortTouchBigCard short_touch_big_card = 6;
      string container_payload = 7;
      int32 load_type = 8;
      ShortTouchBubble bubble_params = 9;
      string name = 10;
      int32 hide_mode = 11;
      int32 enhanced_touch = 12;
      uint64 dynamic_priority = 13;
    }

    message ShortTouchImageLayers {
      repeated Layer layers = 1;
      int32 base_width = 2;
      int32 base_height = 3;

      message Layer {
        string url = 1;
        int32 x = 2;
        int32 y = 3;
        int32 width = 4;
        int32 height = 5;
        int32 radius = 6;
      }
    }

    message ShortTouchInfo {
      string short_touch_url = 1;
      string short_touch_fallback_url = 2;
      int32 container_type = 3;
      uint32 width = 4;
      uint32 height = 5;
      string img_url = 6;
      string jump_schema = 7;
      int32 show_animation = 8;
      int32 animation_type = 9;
      repeated string sub_item_list = 10;
      ShortTouchImageLayers img_layers = 11;
      uint32 animation_quota = 12;
      string accessible_name = 13;
    }

    message QuizExtra {
      string quiz_infos = 1;
    }

    message AudioSpeakingImageList {
      SpeakingImage male_speaking_image = 1;
      SpeakingImage female_speaking_image = 2;
      SpeakingImage unknown_speaking_image = 3;
      SpeakingImage audio_stage_speaking_image = 4;

      message SpeakingImage {
        Image speaking_low_image = 1;
        Image speaking_default_image = 2;
        Image speaking_high_image = 3;
      }
    }

    message ShowArea {
      uint64 x = 1;
      uint64 y = 2;
      uint64 h = 3;
      uint64 w = 4;
    }

    message AnimatedBgInfo {
      ShowArea showArea = 1;
      string fileFormat = 2;
      Image animatedBg = 3;
    }

    message AudioBGData {
      uint64 id = 1;
      string image_uri = 2;
      int32 img_type = 3;
      Image image = 4;
      Image imageThumbnail = 5;
      Image imageAnimatedBG = 6;
      Image imageNormalAvatar = 7;
      Image imageStartupAvatar = 8;
      Image imageChatJoinIcon = 9;
      Image imageStaticBG = 10;
      AudioSpeakingImageList speakingImageList = 11;
      string status_color_value = 12;
      string public_screen_color_value = 13;
      int32 time_limit = 14;
      int32 bg_type = 15;
      string empty_start_color = 16;
      string empty_end_color = 17;
      Image imageColdBG = 18;
      string micBGColorValue = 19;
      repeated Image iconMicNormals = 20;
      Image iconMicLock = 21;
      string colorMicText = 22;
      string colorMicLine = 23;
      string colorMicBG = 24;
      string themeLabel = 25;
      int32 bgStatus = 26;
      AnimatedBgInfo animateInfo = 27;
      string idStr = 28;
      int32 play_mode = 29;
      string theme_tag = 30;
      uint64 start_time = 31;
      uint64 end_time = 32;
      int32 format_type = 33;
      AudioSpeakingImageList speaking_image_v2 = 34;
    }

    message ActivityRoomSkinInfo {
      map<int32, Image> vertical_screen = 1;
      map<int32, Image> horizontal_screen = 2;
    }

    message RoomReplayInfo {
      uint64 replay_duration = 1;
      string replay_url = 2;
      string content_uniq_id = 3;
    }

    message CommentWallInfo {
      string content = 1;
      uint64 id = 2;
      uint64 comment_msg_id = 3;
      uint64 commenter_id = 4;
      string commenter_nickname = 5;
      uint64 event_time = 6;
      uint64 msg_time = 7;
      uint64 end_time = 8;
      int32 countdown_style = 9;
      uint64 operator_id = 10;
      string operator_nickname = 11;
      string operator_openid = 5000;
      string commenter_open_id = 5001;
    }

    message CommentWallPosition {
      double x = 1;
      double y = 2;
      uint64 event_time = 3;
    }

    message AnnouncementInfo {
      string scheduled_time_text = 1;
      string content = 2;
      bool subscribed = 3;
      uint64 appointment_id = 4;
      int32 scheduled_time = 5;
      int32 scheduled_date = 6;
      repeated int32 scheduled_weekdays = 7;
    }

    message RoomIMInfo {
      repeated string welcome_messages = 1;
      string room_tag = 2;
      string hide_gift_message = 3;
    }

    message InteractOpenExtra {
      map<string, string> debug_info = 1;
    }

    message PropsBGData {
      string image_uri = 1;
      int32 img_type = 2;
      Image image = 3;
      Image imageThumbnail = 4;
    }

    message LinkerDetail {
      repeated uint64 linker_play_modes = 1;
      int32 big_party_layout_config_version = 2;
      bool accept_audience_pre_apply = 3;
      uint64 linker_ui_layout = 4;
      int32 enable_audience_linkmic = 5;
      string function_type = 6;
      map<string, string> linker_map_str = 7;
      string ktv_lyric_mode = 8;
      string init_source = 9;
      bool forbid_apply_from_other = 10;
      int32 ktv_exhibit_mode = 11;
      uint64 enlarge_guest_turn_on_source = 12;
      map<string, string> playmode_detail = 13;
      string client_ui_info = 14;
      uint64 manual_open_ui = 15;
      uint64 feature_list = 16;
    }

    message PreviewExposeData {
      int32 style = 1;
      PreviewGuide preview_guide = 2;
      repeated Meta metas = 3;
      repeated ChatMessage chat_msgs = 4;
      repeated Meta force_insertion = 5;
      int32 scroll_after_ms = 6;
      bool need_realtime = 7;
      int32 message_scroll_after_ms = 8;
      int32 message_scroll_interval_ms = 9;
      string preview_intro = 10;
      PreviewExtendArea preview_extend_area = 11;
      int32 show_uv_pv = 12;
      int32 show_name_abbreviation = 13;
      PreviewSwitch switch = 14;
      int32 is_preview_use_websocket = 15;
      bool is_aweme_video_feed = 16;
      bool show_preview_cards = 17;
      PreviewPromotion preview_promotion = 18;
      PreviewIMExtend preview_im_extend = 19;
      EtData et_data = 20;
      int32 alive_checker = 21;
      EnterPublicAreaAnimation enter_public_area_animation = 22;
      PreviewPromotionSyncData preview_promotion_sync_data = 23;
      GrowthTask growth_task = 24;
      PreviewExitGuide preview_exit_guide = 25;
      repeated PreviewExitGuide preview_exit_guide_list = 26;
      ClientComponent client_component = 27;
      IOSClientComponent ios_client_component = 28;


      message PreviewGuide {
        Image icon = 1;
        string tip = 2;
        uint64 type = 3;
        repeated string roll_tips = 4;
        uint64 coupon_mate_id = 5;
        uint64 user_tag_get_coin = 6;
        uint64 live_mession_style = 7;
        string et_type = 8;
        string extra = 9;
        map<string, string> et_extra = 10;
        string enter_tip = 11;
        repeated string enter_roll_tips = 12;
      }

      message Meta {
        int32 type = 1;
        Host host = 2;
        string content = 3;

        message Host {
          Image icon = 1;
          string tip = 2;
          string color = 3;
        }
      }

      message ChatMessage {
        string nick_name = 1;
        string nick_name_color = 2;
        string content = 3;
      }

      message PreviewExtendArea {
        Image extend_icon = 1;
        string extend_pre_text = 2;
        string extend_text = 3;
        int32 extend_type = 4;
        string extra = 5;
        int32 use_marquee = 6;
        int32 icon_type = 7;
        repeated Part right_part = 8;
        string button_part = 9;
        repeated Part mid_part = 10;
        bool need_delimiter = 11;
        repeated Part bottom_part = 12;
        int32 ui_type = 13;
        int32 version = 14;
        ActionConfig action_cfg = 17;
        bool use_pass_through_extra_json = 18;
        string pass_through_extra_json = 19;
        map<string, string> extra_enter_room = 20;
        string extra_business = 21;
        bool no_need_poll = 22;
        map<string, string> et_extra = 23;
        int32 clickable_area = 24;

        message Part {
          int32 fontSize = 1;
          int32 interval = 2;
          string text = 3;
          bool cuttable = 4;
          bool deleted = 5;
          string font_color = 6;
          bool bold = 7;
          int32 part_type = 8;
          Image image = 9;
          string background_color = 10;
          Image left_image = 11;
        }

        message ActionConfig {
          int32 areaAction = 1;
          map<string, string> actionPrams = 2;
        }
      }

      message PreviewSwitch {
        int32 title = 1;
        int32 preview_guide = 2;
        int32 dynamic_label = 3;
        int32 assist_label = 4;
        int32 extend_area = 5;
      }

      message PreviewPromotion {
        repeated Image avatar_icons = 1;
        string text = 2;
        repeated string fast_comments = 3;
        repeated EmojiDetail fast_comments_emoji = 4;
      }

      message PreviewIMExtend {
        uint64 im_extend_type = 1;
        Image icon = 2;
        string main_title = 3;
        string sub_title = 4;
        string extra = 5;
      }

      message EtData {
        string type_enter_room = 1;
        string type_mob_params = 2;
        string type_params = 3;
        string type_first_room_params = 4;
        string type_first_room_mob_params = 5;
        string type_first_show_room_params = 6;
        string type_first_show_mob_params = 7;
      }

      message GrowthTask {
        string task_key = 1;
        string main_text = 2;
        string sub_text = 3;
        map<string, string> extra = 4;
      }

      message PreviewPromotionSyncData {
        Image icon = 1;
        string text = 2;
        LuckyBag lucky_bag = 3;
        uint64 type = 4;
        LuckyMoney lucky_money = 5;

        message LuckyBag {
          uint64 lottery_id = 1;
          uint64 start_at = 2;
          uint64 draw_at = 3;
        }

        message LuckyMoney {
          uint64 box_id = 1;
          uint64 start_at = 2;
          uint64 delay_seconds = 3;
          uint64 display_end_at = 4;
          uint64 status = 5;
          string text = 6;
        }
      }

      message PreviewExitGuide {
        Image icon = 1;
        string main_text = 2;
        string sub_text = 3;
        string schema_url = 4;
        int32 type = 5;
        string button_text = 6;
        uint64 latest_live_record = 7;
        repeated User user_list = 8;
        string tag = 9;
        int32 less_freq = 10;
      }
    }

    message PaidLiveData {
      int32 paid_type = 1;
      int32 view_right = 2;
      uint64 duration = 3;
      TicketData ticket_session = 4;
      OrderData order_data = 5;
      int32 delivery = 6;
      bool need_delivery_notice = 7;
      int32 anchor_right = 8;
      int32 pay_ab_type = 9;
      map<string, PrivilegeInfo> privilege_info = 10;
      map<string, PrivilegeInfo> privilege_info_map = 11;
      AsyncAuthData async_auth_data = 12;
      ProductsData products_data = 13;
      uint64 max_preview_duration = 14;
    }

    message AsyncAuthData {
      uint64 keep_alive_time = 1;
      uint64 async_authentication_operate = 2;
      uint64 async_authentication_ab_type = 3;
      uint64 keep_alive_time_stamp = 4;
      uint64 buffer = 5;
    }

    message PaidLivePriceInfo {
      int32 start_time = 1;
      int32 end_time = 2;
      uint64 price = 3;
      int32 claim_ddl = 4;
      uint64 sku_id = 5;
    }

    message TicketData {
      uint64 ticket_session_id = 1;
      string title = 2;
      string sub_title = 3;
      string price = 4;
      uint64 raw_release_time = 5;
      string tags = 6;
      string ticket_explanation_card_jump_url = 7;
      string ticket_panel_jump_url = 8;
      string ticket_session_id_str = 9;
      int32 sell_status = 10;
      string cover_uri = 11;
      string cover_uri_vertical = 12;
      string Introduction = 13;
      uint64 raw_show_start_time = 14;
      uint64 raw_show_end_time = 15;
      uint64 raw_sale_start_time = 16;
      uint64 raw_sale_end_time = 17;
      uint64 raw_refund_deadline = 18;
      uint64 raw_early_bird_start_time = 19;
      uint64 raw_early_bird_end_time = 20;
      uint64 raw_full_price_start_time = 21;
      uint64 raw_full_price_end_time = 22;
      uint64 raw_activity_start_time = 23;
      uint64 raw_activity_end_time = 24;
      string early_bird_price = 25;
      string activity_price = 26;
      int32 status = 27;
      string show_start_time = 28;
      string show_end_time = 29;
      string sale_start_time = 30;
      string sale_end_time = 31;
      string early_bird_start_time = 32;
      string early_bird_end_time = 33;
      string full_price_start_time = 34;
      string full_price_end_time = 35;
      string activity_start_time = 36;
      string activity_end_time = 37;
      string refund_deadline = 38;
      string activity_title = 39;
      string activity_jump_url = 40;
      string release_time = 41;
      int32 ticket_explanation_card_status = 42;
      int32 last_duration = 43;
      string paid_conversion_jump_url = 44;
      string ticket_panel_six_jump_url = 45;
      string ticket_panel_nine_jump_url = 46;
      Image cover = 47;
      int32 ios_pay_type = 48;
      int32 android_pay_type = 49;
      int32 ios_pay_price = 50;
      int32 android_pay_price = 51;
      int32 right_duration = 52;
      PaidLivePriceInfo friend_priceInfo = 53;
      PaidLivePriceInfo helping_priceInfo = 54;
      map<int64, PaidLivePriceInfoV2> price_info = 55;
      uint64 ticket_anchor_id = 56;
      string extra = 57;
      repeated TicketSkuDetail sku_details = 58;
      PaidLivePriceInfoV2 final_price_info = 59;
      uint64 parent_ticket_session_id = 60;
      string parent_ticket_session_id_str = 61;
      int32 ticket_category = 62;
      string prepay_cashier_jump_url = 63;
      SubscribeMemberMark subscribe_member_mark = 64;
      string ticket_anchor_open_id = 5000;

      message PaidLivePriceInfoV2 {
        string amount = 1;
        string currency = 2;
        uint64 pos = 3;
        repeated int32 pay_type = 4;
      }

      message TicketSkuDetail {
        int32 ticket_type = 1;
        string ticket_name = 2;
        uint64 start_sell_time = 3;
        uint64 closing_sell_time = 4;
        int32 sell_status = 5;
        TicketData.PaidLivePriceInfoV2 price_info = 6;
        TicketData.PaidLivePriceInfoV2 dou_price_info = 7;
        uint64 sku_id = 8;
      }
    }

    message OrderData {
      string order_id = 1;
    }

    message Appearance {
      Bubble head_bubble = 1;
      uint64 up_right_stats_display_type = 2;
      MoreEntrance entrance = 3;
      repeated ToolbarItemConfig toolbar_list = 4;
      uint64 preview_style = 5;
      Image cover_gauss = 6;
      repeated ContentTag content_tags = 7;
      PreviewLabel preview_label = 8;
      Image cover_dynamic_mask = 9;
      Image horizontal_background = 10;
      repeated WideCover wide_cover_list = 11;
      Image blur_placeholder_img = 12;

      message Bubble {
        int32 type = 1;
        repeated string roll_tips = 2;
        Image icon = 3;
        int32 roll_after_ms = 4;
        uint64 coupon_mate_id = 5;
        string et_type = 6;
        string extra = 7;
      }

      message ContentTag {
        string text = 1;
      }

      message WideCover {
        Image cover = 1;
        uint64 cover_type = 2;
      }
    }

    message GameCPData {
      int32 is_live_a_promoted_a = 1;
      string game_id = 2;
      string game_name = 3;
      uint64 promote_instance_id = 4;
    }

    message GamePlayData {
      int32 play_type = 1;
      uint64 play_id = 2;
      uint64 game_id = 3;
    }

    message RoomGameDataChannelConfig {
      string fusion_tag_id = 1;
      string game_id = 2;
      uint64 live_stay_limit = 3;
    }

    message ToolBarComponentData {
      int32 group_id = 1;
      int32 component_type = 2;
      int32 op_type = 3;
      string text = 4;
      string schema_url = 5;
      Image icon = 6;
      uint64 show_type = 7;
      uint64 data_status = 8;
      string extra = 99;
    }

    message ToolBarData {
      repeated ToolBarComponentData entrance_list = 1;
      repeated ToolBarComponentData more_panel = 2;
      int32 max_entrance_cnt = 3;
      repeated ToolBarComponentData landscape_up_right = 4;
      map<int32, ComponentSkin> skin_resource = 5;
      int32 max_entrance_cnt_landscape = 6;
      ToolbarPermutation permutation = 7;
      ToolbarExtraInfo extra_info = 100;
    }

    message LifeGrouponInfo {
      uint64 permission_status = 1;
      uint64 agg_card_id = 2;
      string icon_url = 3;
      string dynamic_url = 4;
      string life_live_pack_component_config = 5;
    }

    message PreviewLabel {
      int32 type = 1;
      repeated string label_tips = 2;
      int32 label_type = 3;
      Image label_image = 4;
      bool hit_test = 5;
    }

    message HotRoomInfo {
      uint64 BitMap = 1;
    }

    message ActivityLiveRecommendConfig {
      string name = 1;
      string level = 2;
      uint64 start_time = 3;
      uint64 end_time = 4;
      int32 live_type = 5;
      repeated uint64 actor_uids = 6;
      EpisodeInfo episode_info = 7;
      repeated string actor_openids = 5000;

      message EpisodeInfo {
        int32 content_type = 1;
        string content = 2;
      }
    }

    message RoomChannelData {
      int32 status = 1;
      repeated RoomChannelInfo channel_list = 2;
      int32 support_room_channel_mode = 3;
      int32 limit_of_num = 4;
      bool can_create = 5;
      Image background = 6;
      bool tab_landing = 7;
      bool can_link_mic = 8;
      bool hide_landscape = 101;
    }

    message PackMetaInfo {
      string scene = 1;
      string env = 2;
      string dc = 3;
      string trace_id = 4;
      string cluster = 5;
      map<string, string> extras = 6;
    }

    message LikeDisplayConfig {
      int32 show_text = 1;
      string display_text = 2;
    }

    message MatchRoomData {
      MatchDrawer drawer = 1;
      ToutiaoMatchData match = 2;
      Image drawer_label = 3;
      string pcu_str = 4;
      Image drawer_official_label = 5;
      Image match_background = 6;
      MatchUserInfo match_user_info = 7;
    }

    message MatchUserInfo {
      TeamInfo user_team_info = 1;
      map<int64, int64> user_quiz_info = 2;
      bool is_activity_account = 3;
      bool need_retry = 4;
    }

    message TeamInfo {
      uint64 team_id = 1;
      string team_name = 2;
      string schema_url = 3;
      Image team_icon = 4;
      Image team_badge = 5;
      Image team_background = 6;
      string system_msg = 7;
      string team_id_str = 8;
      Image team_avatar_box = 9;
    }

    message EnterPublicAreaAnimation {
      string public_area_effect_url = 1;
    }

    message GiftPanelTopperTray {
      string panel_schema = 1;
      repeated PeriodText period_texts = 2;
      int32 display_duration = 3;
      string jump_schema = 4;
      string animation_type = 5;
      int32 animation_gap = 6;
      int32 animation_freq = 7;
      int32 text_round_period = 8;
      string extra = 9;

      message PeriodText {
        string text = 1;
        int32 daily_show_times = 2;
        int32 priority = 3;
        int32 panel_enum = 4;
        int32 key = 5;
        string extra = 6;
      }
    }

    message GameTagInfo {
      int32 is_game = 1;
      uint64 game_tag_id = 2;
      string game_tag_name = 3;
    }

    message EnterGiftAnimation {
      int32 gift_effect_id = 1;
      int32 display_gap = 2;
      int32 display_freq = 3;
    }

    message EmojiDetail {
      uint64 id = 1;
      Image content = 2;
    }

    message CircleInfo {
      uint64 id = 1;
      string name = 2;
      Image cover_img = 3;
      string description = 4;
    }

    message EasterEggData {
      bool has_easter_egg = 1;
      uint64 stage = 2;
      uint64 total_stage = 3;
      uint64 effects_num = 4;
      uint64 start_count = 5;
      uint64 end_count = 6;
      uint64 count = 7;
      string panel_url = 8;
      Image entrance_icon = 9;
    }

    message EcomLiveCard {
      EcomProduct product = 1;
      EcomIcon icon = 2;
      EcomCampaign campaign = 3;
    }

    message EcomProduct {
      uint64 promotion_id = 1;
      uint64 product_id = 2;
      string title = 3;
      string cover_image = 4;
      EcomPrice price = 5;
      uint64 regular_price = 6;
      uint64 deposit_price = 7;
    }

    message EcomPrice {
      string prefix = 1;
      string suffix = 2;
      uint64 by_cent = 3;
      string format_price = 4;
    }

    message EcomIcon {
      string url = 1;
    }

    message EcomCampaign {
      uint64 remaining_seconds = 1;
      EcomAuction auction = 2;
      uint64 type = 3;
    }

    message EcomAuction {
      uint64 price = 1;
      string price_label = 2;
      string button_label = 3;
      EcomBidder user = 4;
      uint64 status = 5;
    }

    message EcomBidder {
      string name = 1;
      EcomAvatar avatar = 2;
    }

    message EcomAvatar {
      string url = 1;
      uint64 width = 2;
      uint64 height = 3;
    }

    message EcomPop {
      uint64 product_id = 1;
      uint64 promotion_id = 2;
      string title = 3;
      string cover = 4;
      EcomPrice min_price = 5;
      string selling_point = 6;
      string jumanji_json = 7;
    }

    message Coupon {
      string icon = 1;
      string start_time = 2;
      string expire_time = 3;
      string coupon_name = 4;
      string url = 5;
      string coupon_string = 6;
      uint64 countdown = 7;
      uint64 show_type = 8;
      string coupon_meta_id = 9;
      string coupon_type = 10;
    }

    message Redpack {
      uint64 redpack_type = 1;
      uint64 redpack_activity_id = 2;
      string redpack_activity_display_text = 3;
      uint64 start_apply_time = 4;
      uint64 end_apply_time = 5;
      uint64 preheat_time = 6;
      uint64 server_time = 7;
      uint64 has_applied = 8;
      string icon_url = 9;
    }

    message EcomGoodsCard {
      uint64 product_id = 1;
      string title = 2;
      string cover = 3;
      EcomPrice min_price = 4;
      Coupon coupon = 5;
      uint64 promotion_id = 6;
      uint64 jump_destination = 7;
      uint64 card_type = 8;
      Redpack redpack = 9;
    }

    message RedsShowInfo {
      int32 data_type = 1;
      string full_text = 2;
    }

    message SwitchExtraBase {
      string schema_for_check = 1;
    }

    message SwitchExtraForOpen {
      string schema_for_open = 1;
    }

    message GameInvite {
      uint64 id = 1;
      uint64 kind = 2;
      uint64 create_time = 3;
      uint64 now_time = 4;
      uint64 expire_time = 5;
      uint64 status = 6;
      uint64 room_id = 7;
      string id_str = 8;
    }

    message InvitationSwitch {
      uint64 id = 1;
      int32 game_kind = 2;
      uint64 game_id = 3;
      uint64 play_kind = 4;
      uint64 status = 5;
      string message = 6;
      SwitchExtraBase extra_base = 7;
      SwitchExtraForOpen extra_for_open = 8;
      string id_str = 9;
    }

    message OfficialRoomInfo {
      bool is_show_more_anchor = 1;
      bool is_use_server_subtitle = 2;
      string server_subtitle = 3;
    }

    message VsEpisodeHighLight {
      uint64 location = 1;
      string description = 2;
      Image image = 3;
      string pid = 4;
    }

    message EpisodePremierePlay {
      repeated VsEpisodeHighLight highlights = 1;
      int32 play_type = 2;
      uint64 start_time = 3;
      string play_text = 4;
      uint64 text_duration = 5;
    }

    message VSWatermark {
      uint64 position = 1;
      uint64 landscape_dis = 2;
      uint64 vertical_dis = 3;
      repeated VSWatermarkIcon watermark_icon = 4;
    }

    message VSWatermarkIcon {
      Image icon = 1;
      uint64 icon_width = 2;
      uint64 icon_type = 3;
      uint64 landscape_dis = 4;
      uint64 vertical_dis = 5;
    }

    message VSBar {
      VSItemBar item_comment = 1;
      VSItemBar item_bar = 2;
    }

    message VSItemComment {
      Image item_comment_icon_dark = 1;
      Image item_comment_icon_light = 2;
    }

    message VSItemBar {
      Image icon_dark = 1;
      Image icon_light = 2;
      string title = 3;
      string seperator = 4;
      string detail = 5;
      uint64 watch_info_pv = 6;
      string watch_info_heat = 7;
      uint64 collection_id = 8;
      int32 tab_id = 9;
      string content_type = 10;
    }

    message EpisodePreviewImage {
      Image preview_uri_up = 1;
      Image preview_uri_down = 2;
      int32 preview_type = 3;
      string preview_word_up = 4;
      string preview_word_down = 5;
      Image preview_background_uri = 6;
    }

    message VSGiftPannel {
      repeated string background_colors = 1;
      Image background = 2;
      Image selected = 3;
      Image top_title = 4;
      Image background_bottom = 5;
      Image background_top = 6;
    }

    message EpisodePreviewBottom {
      string watch_period_str = 1;
      string latest_period_str = 2;
    }

    message VSPannelIcon {
      Image sp_landscape_icon = 1;
      Image sp_vertical_icon = 2;
      Image landscape_vertical_switch_icon = 3;
      Image lock_screen_icon = 4;
      Image landscape_more_icon = 9;
      Image vertical_more_icon = 10;
      Image landscape_comment_icon = 11;
      Image vertical_comment_icon = 12;
      Image vertical_landscape_switch_icon = 13;
      Image vertical_lock_screen_icon = 14;
    }

    message MultiCameraBasicInfo {
      Image icon = 1;
      string icon_background_color = 2;
      string panel_background_color = 3;
      Image icon_pad = 4;
      bool ban_xgs = 5;
      bool support_vs_core = 6;
      string name = 7;
      int32 default_display_duration = 8;
    }

    message CollectionItem {
      string collection_id = 1;
      int32 collection_type = 2;
      string title = 3;
      Image cover_img = 4;
      string original_vid = 5;
      string video_duration = 6;
      string collection_timing = 7;
      string tmpl_vid = 8;
      repeated int32 reflow_tag_list = 10;
      string room_id = 11;
      int32 collection_source = 12;
      string original_vid_url = 13;
      int32 collection_tag = 14;
      string episode_id = 15;
      string share_info = 16;
      uint64 create_time = 17;
      int32 status = 18;
      string ug_share_info = 19;
      string degrade_vid_url = 20;
      uint64 event_time = 21;
    }

    message SharePosterInfo {
      PosterData data = 1;

      message PosterData {
        repeated Image poster = 1;
        repeated Image decorator = 2;
      }
    }

    message BusinessConfigure {
      uint64 BusinessID = 1;
      uint64 BusType = 2;
      int32 DelaySecond = 3;
      uint64 PreciseTime = 4;
      int32 DisplaySecond = 5;
      ResourceConfigure ResConfig = 6;
      uint64 DelType = 7;
    }

    message ResourceConfigure {
      uint64 ResourceID = 1;
      BarrageConfigure BarrageConf = 2;
      ScreenBarConfigure ScreenBarConf = 3;
    }

    message BarrageConfigure {
      Image Logo = 1;
      string Text = 2;
      string AtomsBGColor = 3;
      string AtomsFrame = 4;
      string AtomsText = 5;
      Image Image = 6;
      string schema = 7;
      Image jump_icon = 8;
    }

    message ScreenBarConfigure {
      Image Image = 1;
      int32 IsDynamicImg = 2;
      string schema = 3;
      string jump_prompt = 4;
    }

    message MultiTab {
      string tab_title_color = 1;
      repeated TabItem tabs = 2;
      int32 switch_on = 3;
      int32 disable_background = 4;
      int32 disable_project = 5;

      message Bubble {
        int32 switch = 1;
        uint64 bubble_id = 2;
        uint64 duration = 3;
        uint64 delay = 4;
        string bubble_text = 5;
      }

      message TabItem {
        uint64 tab_type = 1;
        string tab_name = 2;
        string jump_link = 3;
        uint64 tab_id = 4;
        int32 tab_show_type = 5;
        uint64 hide_camera_ids = 6;
        Bubble bubble = 7;
        int32 disable_preload = 8;
        string color = 9;
        uint64 expire_time = 10;
        repeated int32 scene = 11;
        string h5_color = 12;
      }
    }

    message ToolbarBizSkin {
      Image icon = 1;
    }

    message ComponentSkin {
      map<string, ToolbarBizSkin> vertical = 1;
      map<string, ToolbarBizSkin> landscape = 2;
      map<string, ToolbarBizSkin> general = 3;
    }

    message ToolbarPermutation {
      Rule vertical = 1;
      Rule landscape = 2;
      Rule general = 3;
      repeated int32 on_demand_component_list = 4;

      message Rule {
        repeated int32 GroupPriority = 1;
        repeated int32 ComponentSequence = 2;
      }
    }

    message RoomChannelInfo {
      uint64 channel_id = 1;
      string token = 2;
      bool is_owner = 3;
      uint64 member_count = 4;
      repeated User top_user = 5;
      string channel_name = 6;
      int32 room_channel_mode = 7;
      User need_approval_user = 8;
      User owner = 9;
      uint64 max_member_count = 10;
      uint64 create_type = 11;
      SecretChatInfo secret_chat_info = 12;
      string channel_id_str = 13;
      RtcExtInfo rtc_ext_info = 200;
    }

    message RtcExtInfo {
      string link_mic_id_str = 1;
      string rtc_ext_info = 2;
      string live_core_exr_info = 3;
      string rtc_strategy = 4;
      string public_stream_id = 5;
    }

    message SecretChatInfo {
      uint64 owner_uid = 1;
      uint64 guest_uid = 2;
      uint64 status = 3;
      map<int64, Image> user_avatar_thumb_map = 4;
      string owner_user_openid = 5000;
      string guest_user_openid = 5001;
      map<string, Image> open_user_avatar_thumb_map = 5002;
    }

    message PlayByPlayItemInfo {
      uint64 timestamp = 1;
      uint64 player_id = 2;
      uint64 ref_player_id = 3;
      int32 incident_type = 4;
      double elapsed = 5;
      double elapsed_plus = 6;
      string player_name = 7;
      string ref_player_name = 8;
      string player_id_str = 9;
      string ref_player_id_str = 10;
      uint64 start_time_pts = 11;
      uint64 end_time_pts = 12;
      uint64 start_time_sei = 13;
      uint64 end_time_sei = 14;
    }

    message PlayerInfo {
      uint64 id = 1;
      string name = 2;
      int32 shirt = 3;
      string position = 4;
      int32 lineup_type = 5;
      Image portrait = 6;
      PlayByPlayItemInfo last_event = 7;
      double x_axis = 8;
      double y_axis = 9;
      int32 position_num = 10;
      double playing_time = 11;
      PlayerStats player_stats = 12;
      string player_id_str = 13;
      PlayByPlayItemInfo last_up_event = 14;
      repeated PlayByPlayItemInfo event_list = 15;
      int32 age = 16;
      double worth = 17;
      string club_name = 18;
      bool superstar_flag = 19;
      Image superstar_img = 20;
      string superstar_name = 21;
      string superstar_desc = 22;
    }

    message GoalStageDetail {
      string first_half_goal = 1;
      string second_half_goal = 2;
      string overtime = 3;
      string shots = 4;
      string total = 5;
    }

    message Against {
      string left_name = 1;
      Image left_logo = 2;
      string left_goal = 3;
      repeated PlayerInfo left_players = 4;
      GoalStageDetail left_goal_stage_detail = 5;
      string right_name = 6;
      Image right_logo = 7;
      string right_goal = 8;
      repeated PlayerInfo right_players = 9;
      GoalStageDetail right_goal_stage_detail = 10;
      uint64 timestamp = 11;
      uint64 version = 12;
      uint64 left_team_id = 13;
      uint64 right_team_id = 14;
      uint64 diff_sei2abs_second = 15;
      int32 final_goal_stage = 16;
      int32 current_goal_stage = 17;
      int32 left_score_addition = 18;
      int32 right_score_addition = 19;
      uint64 left_goal_int = 20;
      uint64 right_goal_int = 21;
      BasketBallGoalStageDetail left_score_detail = 22;
      BasketBallGoalStageDetail right_score_detail = 23;
      BasketballStage basketball_stage = 24;
      ESportsStage esport_stage = 25;
    }

    message ToutiaoMatchData {
      uint64 match_id = 1;
      string match_title = 2;
      Against against = 3;
      string started_time = 4;
      string city = 5;
      string venue_name = 6;
      string referee = 7;
      TeamStats team_stats = 8;
      repeated PlayerStats player_stats = 9;
      string match_group = 10;
      string match_round = 11;
      string match_phase_name = 12;
      bool can_subscribe = 13;
      int32 display_status = 14;
      string bjt_format = 15;
      string local_time_format = 16;
      int32 live_status = 17;
      int32 match_status = 18;
      string match_id_str = 19;
      uint64 started_time_unix = 20;
      int32 left_score_addition = 21;
      int32 right_score_addition = 22;
      string duration = 23;
      repeated uint64 event_ids = 24;
      uint64 winner_id = 25;
      string winner_id_str = 26;
      Image winner_icon = 27;
      string event_name = 28;
      string bo_num = 29;
    }

    message TeamStats {
      uint64 team_id = 1;
      double possession = 2;
      double shot_on = 3;
      double shot_off = 4;
      double free_kick = 5;
      double corner = 6;
      double counter = 7;
      double saves = 8;
      double offside = 9;
      double foul_commit = 10;
      double yellow_cards = 11;
      double redCards = 12;
      double pass = 13;
      double key_pass = 14;
      double passes_completed = 15;
      double steal = 16;
      double intercept = 17;
      double shots = 18;
      double possession_five_min = 19;
    }

    message PlayerStats {
      uint64 player_id = 1;
      uint64 team_id = 2;
      double minutes_played = 3;
      double goals = 4;
      double assists = 5;
      double shots = 6;
      double shots_on = 7;
      double y_cards = 8;
      double r_cards = 9;
      double offsides = 10;
      double fouls_committed = 11;
      double own_goals = 12;
      double saves = 13;
      double caught_ball = 14;
      double clean_sheets = 15;
      double pass = 16;
      double key_pass = 17;
      double passes_completed = 18;
      double steal = 19;
      double intercept = 20;
      double clearances = 21;
    }

    message MatchShareBackground {
      Image vertical_img = 1;
      Image horizontal_img = 2;
    }

    message MatchTitle {
      string room_title = 1;
      TitleIcon title_icon = 2;

      message TitleIcon {
        string url = 1;
        int32 size_type = 2;
      }
    }

    message MatchTab {
      string title = 1;
      string schema = 2;
      uint64 id = 3;
    }

    message MatchDrawer {
      string entry_name = 1;
      Image entry_icon = 2;
      string drawer_title = 3;
      Image drawer_background = 4;
      string return_btn_text = 5;
      int32 display_mode = 6;
    }

    message BasketBallGoalStageDetail {
      int32 first_period = 1;
      int32 second_period = 2;
      int32 third_period = 3;
      int32 forth_period = 4;
      int32 overtime = 5;
      int32 total = 6;
    }

    message BasketballStage {
      int32 current_stage = 1;
      int32 final_stage = 2;
    }

    message ESportsStage {
      int32 current_stage = 1;
      int32 final_stage = 2;
    }

    message PaidLiveItemInfo {
      uint64 item_id = 1;
      int32 item_type = 2;
      string item_id_str = 3;
    }

    message PrivilegeInfo {
      uint64 entity_id = 1;
      repeated PaidLiveItemInfo item_list = 2;
      int32 paid_live_type = 3;
      PrivilegeBaseInfo paid_live_info = 4;
      string extra = 5;
      PrivilegeUrl privilege_url = 6;
      PaidLiveUIBaseConfig ui_config = 7;
      PaidLiveConfig entity_config = 8;
      string entity_id_str = 9;
    }

    message PrivilegeBaseInfo {
      int32 paid_live_type = 1;
      int32 view_right = 2;
      int32 delivery = 3;
    }

    message PrivilegeUrl {
      string privilege_panel_schema = 1;
      string privilege_card_schema = 2;
      string prepay_cashier_jump_url = 3;
    }

    message PaidLiveConfig {
      uint64 spu_id = 1;
      string spu_id_str = 2;
      uint64 sku_id = 3;
      string sku_id_str = 4;
      string title = 5;
      string sub_title = 6;
      repeated string tags = 7;
      Image cover = 8;
      int32 sell_status = 9;
      int32 status = 10;
      repeated PriceInfo ios_pay_price_info = 11;
      repeated PriceInfo android_pay_price_info = 12;
      UserRight user_right = 13;

      message PriceInfo {
        int32 pay_type = 1;
        uint64 price = 2;
        int32 right_duration = 3;
      }

      message UserRight {
        int32 view_right = 1;
        uint64 duration = 3;
        int32 delivery = 6;
        bool need_delivery_notice = 7;
      }
    }

    message PaidLiveUIBaseConfig {
      int32 paid_live_type = 1;
      Image paid_live_icon = 2;
      string paid_live_icon_title = 3;
      uint64 duration = 4;
      string no_right_end_title = 5;
      string no_right_end_sub_title = 6;
      string has_right_end_title = 7;
      string has_right_end_sub_title = 8;
      string paid_conversion_jump_url = 9;
      string panel_six_jump_url = 10;
      string feed_page_purchase_btn_word = 11;
      string purchase_btn_word = 12;
      string im_share_top_title = 13;
      string im_share_bottom_title = 14;
      string search_card_top_title = 15;
      string panel_feed_jump_url = 16;
      string panel_im_card_jump_url = 17;
      string panel_in_room_jump_url = 18;
      string panel_search_card_jump_url = 19;
    }

    message RoomPublicScreenInfo {
      RoomPublicScreenAttachments attachments = 1;
      string background_color = 2;
      string long_press_color = 3;
    }

    message RoomPublicScreenAttachments {
      uint64 hot_message_tray = 1;
      uint64 height_setting = 2;
      uint64 first_message_show_opt = 3;
      uint64 anchor_cold_message_show_opt = 4;
    }

    message RoomFullVideoBTN {
      uint64 show = 1;
      Image icon = 2;
      Image disable_icon = 3;
      uint64 show_type = 4;
    }

    message RoomBanner {
      uint64 AuthMsg = 1;
    }

    message AvatorBorder {
      Image icon = 1;
      uint64 level = 2;
      Image thumb_icon = 3;
      string dress_id = 4;
    }

    message RoomCore {
      uint64 room_id = 1;
      uint64 anchor_id = 2;
      string anchor_open_id = 5000;
    }

    message IOSFragment {
      string name = 1;
      bool is_open = 2;
    }

    message IOSContainerLayoutRule {
      repeated string items = 1;
      bool rule_replace = 2;
      string target = 3;
      string rule_type = 4;
    }

    message IOSContainerLayout {
      string name = 1;
      IOSContainerLayoutRule layout_rule = 2;
      int32 dsl = 3;
    }

    message IOSClientComponent {
      repeated IOSFragment fragments = 1;
      repeated IOSContainerLayout landscape_layout = 2;
      repeated IOSContainerLayout portrait_layout = 3;
      bool is_open = 4;
      uint64 template_id = 5;
      repeated IOSFragment elements = 6;
    }

    message ProductsData {
      ToolBar tool_bar = 1;
      ExplainCard explain_card = 2;
      ToolBar product_list_tool_bar = 3;
      int32 bring_product_switch_status = 4;
      int32 paid_live_bringing_product_flag = 5;

      message ToolBar {
        string panel_jump_url = 1;
        string six_jump_url = 2;
        string nine_jump_url = 3;
      }

      message ExplainCard {
        int32 status = 1;
        string card_jump_url = 2;
        int32 last_duration = 3;
        Product product = 4;
      }
    }

    message Product {
      ProductBasicInfo basic_info = 1;
      ProductPriceStruct price_info = 2;
      LiveInfo live_info = 3;
      ItemInfo item_info = 4;
      ContentInfo content_info = 5;
      PaymentArea payment_arrea = 6;
      ProductPriceRichText price_rich_info = 7;
      ProductComments product_comments = 8;
      ShareTicket share_ticket = 29;
      PrivilegeTicket privilege = 30;
      Combined combined = 31;
      Comments comments = 32;
      Rating rating = 33;
      User user = 35;
      repeated Author authors = 36;
      ProductBanner banner = 37;
      repeated SKU sku_list = 17;
      SubscribeMember subscribe_member = 18;
      FilterReason filter_node = 999;

    }

    message FilterReason {
      bool failed = 1;
      bool can_show = 2;
      string reason = 3;
      int32 werr_code = 4;
      string filter_name = 5;
    }

    message ProductBasicInfo {
      uint64 id = 1;
      string id_str = 2;
      uint64 owner_user_id = 3;
      int32 status = 4;
      int32 biz = 5;
      int32 category = 6;
      string category_content = 7;
      string title = 8;
      int32 source = 9;
      string cover_uri = 10;
      Image cover = 11;
      int32 review_status = 12;
      int32 performance_status = 13;
      int32 disable_reason = 14;
      uint64 sale_start_time = 15;
      uint64 sale_end_time = 16;
      uint64 refund_deadline = 17;
      string introduction_text = 18;
      repeated Introduction introduction = 19;
      repeated HeaderMedia header_media = 20;
      ProductTag tags = 21;
      string content_title = 22;
      string content_category = 23;
      string content_extent_info = 24;
      int32 sale_status = 26;
      uint64 service_period = 27;
      bool geo_ban = 28;
      int32 combined_view_right = 29;
      string jump_schema = 30;
      string detail_schema = 31;
      int32 new_product = 32;
      string content_extent_info_color = 33;
      uint64 create_time = 34;
      uint64 show_start_time = 35;
      repeated ContentTip content_tips = 36;
      string prepay_cashier_jump_url = 37;
      repeated ProductSellingPoint selling_points = 38;
      ProductSaleInfo sale_info = 39;
      repeated RecentPurchasedUser recent_purchased_user = 40;
      string owner_open_id = 5000;
    }

    message ParentProductSimpleData {
      string product_id = 1;
      string title = 2;
      string sub_title = 3;
      Image cover = 4;
      int32 status = 5;
      uint64 view_right = 6;
      int32 bind_sub_product_count = 7;
      PurchaseSimpleData data = 8;
      string sub_title_tag = 9;
      int32 current_show_num = 10;
      int32 remain_sub_tickets_count = 11;
      uint64 latest_finish_time = 12;
    }

    message PurchaseSimpleData {
      int32 type = 1;
      string name = 2;
      repeated ProductTag tags = 3;
      uint64 start_sell_time = 4;
      uint64 closing_sell_time = 5;
      int32 sell_status = 6;
      int32 purchase_status = 7;
      ProductPriceStruct price_info = 8;
    }

    message BindSubProductData {
      string product_id = 1;
      string parent_product_id = 2;
      string title = 3;
      int32 live_status = 4;
      int32 ticket_status = 5;
      string detail = 6;
      string vid = 7;
      string room_id = 8;
      int32 delivery_status = 9;
      uint64 live_time = 10;
      uint64 end_time = 11;
      uint64 live_start_time = 12;
      uint64 live_end_time = 13;
      uint64 view_right = 14;
      bool is_replay = 15;
      uint64 replay_id = 16;
      string replay_id_str = 17;
      int32 disable_reason = 18;
      string camera_id = 19;
    }

    message Combined {
      repeated BindSubProductData bind_sub_ticket_list = 1;
      ParentProductSimpleData parent_ticket_panel_data = 2;
      bool bind_sub_ticket_list_has_more = 3;
      int32 bind_sub_ticket_total = 4;
    }

    message ShareTicket {
      bool has_share = 1;
      User from_user = 2;
      string package_record_id = 3;
      bool has_grab_share = 4;
    }

    message PrivilegeTicket {
      repeated string sku_id = 1;
      repeated PrivilegeConfigure privilege_conf = 2;
      bool privilege_has_paid = 3;

      message PrivilegeConfigure {
        Image icon = 1;
        string name = 2;
        int32 entity_type = 3;
        uint64 privilege_tab_key = 4;
        int32 privilege_type = 5;
      }
    }

    message Rating {

    }

    message Comments {
      string title = 1;
      int32 count = 2;
      bool hasMore = 3;
      string jump_schema = 4;
      repeated TextInfo texts = 5;

      message TextInfo {
        uint64 comment_id = 1;
        UserInfo user_info = 2;
        string text = 3;
        int32 digg_count = 4;
        uint64 create_time_stamp = 5;
        string comment_id_str = 6;

        message UserInfo {
          uint64 user_id = 1;
          string name = 2;
          Image avatar = 3;
        }
      }
    }

    message Author {
      int32 type = 1;
      User user_info = 2;
      AuthorBasicInfo author_basic_info = 3;
      string jump_schema = 4;

      message AuthorBasicInfo {
        string name = 1;
        string intorduce = 2;
        Image cover = 3;
      }
    }

    message PaymentArea {
      PayButton pay_button = 1;
      AdditionalButton additional_button = 2;
      PayButton pay_button_list = 3;

      message PayButton {
        string content = 1;
        Image icon = 2;
        string jump_schema = 3;
        int32 avilable = 4;
        string copy_writing = 5;
        int32 click_type = 6;
        bool is_new_ent_trade = 7;
      }

      message AdditionalButton {
        string content = 1;
        Image icon = 2;
        string jump_schema = 3;
        int32 avilable = 4;
        string copy_writing = 5;
      }
    }

    message LiveInfo {
      uint64 room_id = 1;
      string title = 2;
      int32 episode_stage = 3;
      uint64 room_start_time = 4;
      int32 live_status = 5;
      string vid = 6;
      string replay_id_str = 7;
      bool is_replay = 8;
      int32 delivery = 9;
      uint64 view_right = 10;
      string anchor_sign_tag_content = 11;
      string room_id_str = 12;
      int32 paid_live_bring_product_flag = 13;
      string living_sku_id = 14;
      uint64 replay_auto_offline_time = 15;
    }

    message ItemInfo {
      uint64 item_id = 1;
      string title = 2;
      string tag_type = 3;
      int32 lastest = 4;
      int32 total = 5;
      string play_counts = 6;
      uint64 view_right = 7;
      string item_id_str = 8;
      int32 duration = 9;
    }

    message ContentInfo {
      uint64 content_id = 1;
      string title = 2;
      string tag_type = 3;
      int32 lastest = 4;
      int32 total = 5;
      string category = 6;
      uint64 view_right = 7;
      string content_id_str = 8;
      int32 duration = 9;
      uint64 promise_update_time = 10;
    }

    message Introduction {
      int32 type = 1;
      string content = 2;
    }

    message ProductPriceStruct {
      string amount = 1;
      string currency = 2;
      uint64 pos = 3;
      repeated int32 pay_type = 4;
      string full_price = 5;
      uint64 countdown_timestamp = 6;
      string start = 7;
    }

    message ProductRichText {
      int32 rich_type = 1;
      Text text = 2;
      Image image = 3;
      CountDown count_down = 4;

      message Text {
        string text = 1;
        int32 font_size = 2;
        string color = 3;
        string background_color = 4;
        int32 font_weight = 5;
        string font_style = 6;
        string text_decoration = 7;
        string font_family = 8;
        int32 line_height = 9;
      }

      message Image {
        Image img = 1;
        int32 width = 2;
        int32 height = 3;
      }

      message CountDown {
        int32 countdown = 1;
        int32 font_size = 2;
        string color = 3;
        string place_holder = 4;
      }
    }

    message ProductPriceRichText {
      repeated ProductRichText rich_texts = 1;
      map<string, string> extra = 2;
    }

    message SKU {
      string id = 1;
      int32 category = 2;
      uint64 price = 3;
      uint64 sale_start_time = 4;
      uint64 sale_end_time = 5;
      int32 refundable = 6;
      string cover_uri = 7;
      Image cover = 8;
      string introduction = 9;
      string title = 10;
      int32 sale_status = 11;
      string product_id = 12;
      repeated RelatedSkuSimpleInfo related_sku_simple_infos = 13;
      int32 order_item_type = 14;
      string order_biz_ext_info = 15;
      int32 limit_count = 16;
      int32 purchase_status = 17;
      bool can_purchase = 18;
      uint64 episode = 19;
      string introduction_text = 20;
      int32 price_type = 21;
      CaremaInfo camera_info = 22;
      repeated EntityIDsMap entity_ids_map = 23;
      int32 free_status = 24;
      LimitedFreeNotice limited_free_notice = 25;
      int32 live_status = 26;
      bool enable_renew_vip = 27;
      uint64 bonus_amount = 28;
      uint64 right_valid_duration = 29;

      message RelatedSkuSimpleInfo {
        string sku_id = 1;
        string product_id = 2;
      }

      message CaremaInfo {
        uint64 camera_id = 1;
        string camera_id_str = 2;
      }

      message EntityIDsMap {
        int32 entityType = 1;
        repeated uint64 releated_entity_ids = 23;
      }

      message LimitedFreeNotice {
        string icon_uri = 1;
        Image icon = 2;
        string content = 3;
      }
    }

    message HeaderMedia {
      int32 type = 1;
      Image image_info = 2;
      ViewButton view_button = 3;

      message ViewButton {
        string content = 1;
        Image icon = 2;
        string jump_schema = 3;
        int32 schema_type = 4;
      }
    }

    message ProductTag {
      Image icon = 1;
      string content = 2;
    }

    message DSLDetail {
      uint64 dsl_id = 1;
      uint64 dsl_type = 2;
      string dsl_gecko_download_uri = 3;
      string dsl_slice_info = 4;
      uint64 version = 5;
      string dsl_data = 6;
      ExtraInfo extra = 7;

      message ExtraInfo {
        uint64 height = 1;
        uint64 width = 2;
      }
    }

    message RoomIntroLabel {
      int32 label_tag = 1;
      string label_name = 2;
      string label_text = 3;
      string label_icon = 4;
      string type_name = 5;
      string show_text = 6;
      bool selected = 7;
      uint64 show_order = 8;
    }

    message ChatReplyRespInfo {
      uint64 reply_msg_id = 1;
      uint64 reply_id = 2;
      Text reply_text = 3;
      uint64 reply_uid = 4;
      string reply_webcast_uid = 5;
      string reply_open_id = 5000;
    }

    message ActivityEmoji {
      uint64 id = 1;
      string id_str = 2;
      string name = 3;
      Image emoji = 4;
    }

    message ActivityEmojiGroup {
      uint64 id = 1;
      string id_str = 2;
      string name = 3;
      Image tag_icon = 4;
      string desc = 5;
      repeated ActivityEmoji emoji_list = 6;
      uint64 insert_emoji_num = 7;
    }

    message GiftIMPriority {
      repeated uint64 queue_sizes = 1;
      uint64 self_queue_priority = 2;
      uint64 priority = 3;
    }

    message ItemCardInfo {
      int32 item_card_type = 1;
      int32 card_play_type = 2;
      string card_value = 3;
      uint64 rest_duration = 4;
      uint64 failure_time = 5;
      string progress_text = 6;
      int32 item_card_status = 7;
      uint64 mystery_rank_n = 8;
      uint64 total_duration = 9;
      string card_name = 10;
    }

    message SurvivalConfig {
      repeated Stage stages = 1;
      string out_animation_url = 2;

      message Stage {
        uint64 duration = 1;
        BattleTitleConfig title_config = 2;
      }
    }

    message SurvivalInfo {
      uint64 stage = 1;
      map<int64, AnchorInfo> anchor_info_map = 2;
      map<string, AnchorInfo> open_anchor_info_map = 5000;

      message AnchorInfo {
        int32 status = 1;
        uint64 out_stage = 2;
      }
    }

    message BreakthroughConfig {
      repeated Stage stages = 1;
      Image mvp_image = 2;
      uint64 high_score_threshold = 3;

      message Stage {
        uint64 target_score = 1;
        string end_animation_url = 2;
        string end_atmosphere_url = 3;
        uint64 duration = 4;
        BattleTitleConfig title_config = 5;
        Image room_bg_full_image = 6;
        Image room_bg_top_image = 7;
        Image room_bg_bottom_image = 8;
      }
    }

    message BreakthroughInfo {
      uint64 stage = 1;
      uint64 total_score = 2;
      uint64 mvp_anchor_id = 3;
      int32 state = 4;
      string mvp_anchor_open_id = 5000;

      message StageInfo {
        uint64 finish_time_delta = 1;
      }
    }

    message BattleSettings {
      uint64 battle_id = 1;
      uint64 start_time_ms = 2;
      uint64 duration = 3;
      string theme = 4;
      uint64 channel_id = 5;
      uint64 match_type = 6;
      uint64 finished = 7;
      string banner_url = 8;
      int32 mode = 9;
      string config = 10;
      string notify_scheme_url = 11;
      string hotsoon_notify_scheme_url = 12;
      BattleTitleConfig title_config = 13;
      BattleTitleConfig punish_config = 14;
      uint64 punish_duration = 15;
      uint64 punish_start_time_ms = 16;
      int32 optimize_version = 17;
      bool punish_optimize_on = 18;
      uint64 blood_display_duration = 19;
      uint64 status_display_duration = 20;
      string toast = 21;
      bool need_close_linkmic = 22;
      bool display_last_result = 23;
      string normal_activity_name = 24;
      int32 invite_type = 25;
      BattleConfigSetting battle_config_setting = 27;
      BattleBarConfig bar_config = 28;
      BattleBarConfig hotsoon_bar_config = 33;
      uint64 initiator_id = 34;
      int32 battle_type = 35;
      repeated int32 play_tags = 36;
      uint64 steal_tower_duration = 37;
      string lynx_data = 38;
    }

    message BattleTitleConfig {
      Image icon = 1;
      string content = 2;
      string scheme = 3;
      string hotsoon_scheme = 4;
      Image new_icon = 7;
      Image pre_icon = 8;
      Image icon_back_img = 9;
      Image background = 10;
      uint64 background_show_delay_ms = 11;
      string open_scheme = 12;
    }

    message AnimeInfo {
      int32 bar_type = 1;
      int32 aura_type = 2;
      string normal_bar_url = 3;
      string buff_bar_url = 4;
      string steal_tower_bar_url = 5;
      string cur_bar_url = 6;
      string cur_aura_url = 7;
    }

    message BattleBarConfig {
      string left_color = 1;
      string right_color = 2;
      string left_score_view_color = 3;
      string right_score_view_color = 4;
      AnimeInfo anime_info = 5;
    }

    message BattleShellConfig {
      uint64 shell_type = 1;
      string name = 2;
    }

    message BattleArmy {
      uint64 anchor_id = 1;
      repeated RankUser rank_list = 2;
      string anchor_id_str = 3;
      string anchor_open_id = 5000;

      message RankUser {
        uint64 user_id = 1;
        string nickname = 2;
        Image avatar_thumb = 3;
        uint64 score = 4;
        string user_id_str = 5;
        string webcast_uid = 6;
        string open_id = 5000;
      }
    }

    message BattleScore {
      int32 score = 1;
      uint64 user_id = 2;
      int32 rank_bonus_score = 3;
      int32 weekly_rank = 4;
      int32 winning_streak = 5;
      int32 winning_streak_bonus_score = 6;
      int32 battle_count_bonus_score = 7;
      string user_id_str = 8;
      int32 current_bonus = 9;
      BattleStarActivityGrade grade = 10;
      bool score_relative = 11;
      string score_relative_text = 12;
      bool is_large_pk_score = 13;
      bool room_like_trigger = 14;
      string score_blur_text = 15;
      uint64 battle_rank = 16;
      bool new_score_open = 17;
      string multi_pk_team_score_text = 18;
      uint64 multi_pk_team_score = 19;
      uint64 multi_pk_team_rank = 20;
      bool is_multi_pk_relative_text = 21;
      string lynx_data = 22;
      uint64 contribute_count = 23;
      uint64 score_version = 24;
      string open_id = 5000;
    }

    message BattleConsecutiveRecordInfo {
      int32 battle_result_type = 1;
      uint64 consecutive_count = 2;
    }

    message BattleUserInfo {
      BaseUserInfo user = 1;
      BattleRivalTag tags = 2;
      BattleConsecutiveRecordInfo consecutive_record = 3;
      BattleStarActivityGrade grade = 4;
      BattleStarActivityGradeChange grade_change = 5;
      string team_coach_score = 6;
      int32 pk_role = 7;
      int32 pk_result = 8;
      ActivityUser activity_user = 9;
      uint64 multi_pk_team_id = 10;
      string battle_start_desc_text = 11;
      UserImgFlipInfo user_img_flip_info = 12;

      message BaseUserInfo {
        uint64 user_id = 1;
        string nick_name = 2;
        Image avatar_thumb = 3;
        int32 gender = 4;
        string user_id_str = 5;
        string open_id = 5000;
        string user_open_id_str = 5001;
      }

      message UserImgFlipInfo {
        Image flip_image = 1;
        Image pk_stage_medal = 2;
        string pk_stage_desc = 3;
        string scheme = 4;
      }
    }

    message BattleSkinConfig {
      string start_animation_url = 1;
      string win_animation_url = 2;
      string lose_animation_url = 3;
      string draw_animation_url = 4;
      bool is_show_enter_user_info = 5;
      Image room_bg_full_image = 6;
      Image room_bg_top_image = 7;
      Image room_bg_bottom_image = 8;
      uint64 enter_user_info_position = 9;
      uint64 enter_show_time_ms = 10;
    }

    message BattleRivalTag {
      Image bg_image = 1;
      Image icon_image = 2;
      string content = 3;
      string font_color = 4;
      int32 tag_type = 5;
      string tag_desc = 6;
    }

    message TeamTask {
      Config config = 1;
      map<string, Info> info = 2;
      string battle_id = 3;
      string trigger_user_id = 4;
      int32 battle_type = 5;
      string webcast_trigger_uid = 6;
      string trigger_open_id = 5001;

      message GiftPanelConfig {
        uint64 panel_tab_id = 1;
      }

      message ExtraConfig {
        SpecialGiftCountConfig special_gift_count_config = 5;
      }

      message PeriodConfig {
        uint64 begin_second_relative_battle_finish = 1;
        uint64 end_second_relative_battle_finish = 2;
      }

      message SpecialGiftCountConfig {
        uint64 gift_id = 1;
        string gift_name = 2;
        Image icon = 3;
        uint64 max_gift_count_per_user = 4;
        uint64 current_gift_count = 5;
      }

      message Config {
        map<int64, PeriodConfig> period_config = 1;
        uint64 reward_buff_multiple = 2;
        int32 task_type = 3;
        ExtraConfig extra_config = 4;
        int32 target_type = 5;
        int32 reward_type = 6;
        int32 team_work_team_task_type = 7;
        repeated uint64 stage_reward_buff_multiple = 8;
        GiftPanelConfig gift_panel_config = 9;
        map<string, string> tracking_params = 10;
      }

      message Info {
        uint64 target_user_count = 1;
        uint64 finish_user_count = 2;
        int32 result = 3;
        Reward reward = 4;
        uint64 ratio = 5;
        int32 role = 6;
        ItemCardInfo item_card_info = 7;
        string value_text = 8;
        string progress_blur_text = 9;
      }

      message Reward {
        uint64 begin_second_relative_battle_finish = 1;
        uint64 end_second_relative_battle_finish = 2;
        uint64 reward_score = 3;
        uint64 current_reward_buff_multiple = 4;
        string reward_score_str = 5;
      }
    }

    message BattleRankUser {
      User user = 1;
      uint64 score = 2;
      uint64 rank = 3;
      uint64 grade_buff_score = 4;
      string sub_des = 5;
    }

    message BattleAnchorContributors {
      repeated BattleRankUser ranks = 1;
      uint64 total_count = 2;
      repeated BattleBuffCardInfo buff_card_infos = 3;
    }

    message BattleContributorsRankListV2 {
      map<string, BattleAnchorContributors> anchor_contributors = 1;
      TeamTask team_task = 2;
      BattleSettings battle_settings = 3;
      uint64 loser_id = 4;
      string loser_id_str = 5;
      string loser_open_id = 5000;
      string loser_open_id_str = 5001;
    }

    message OperationalPlay {
      int32 operational_play_type = 1;
      MultipleMatches3  multiple_matches_3 = 2;
    }

    message MultipleMatches3 {
      map<int64, MultipleMatchesUserInfo> user_infos = 1;
      uint64 current_match = 2;
      bool end = 3;
      uint64 winner_uid = 4;
      uint64 current_winner_uid = 5;
      string winner_open_id = 5001;
      string current_winner_open_id = 5002;
    }

    message MultipleMatchesUserInfo {
      uint64 win_count = 1;
    }

    message ActivityUser {
      string activity_name = 1;
      Text display_tab_text = 2;
      uint64 user_id = 3;
      string user_id_str = 4;
      repeated BattleRivalTag labels = 5;
      string sub_tab_text = 6;
      bool is_valid = 7;
      string message = 8;
      Image button_image = 9;
      repeated Image back_ground_images = 10;
      string user_open_id = 5000;
      string user_open_id_str = 5001;
    }

    message BattleSelfData {
      uint64 pk_duration_time = 1;
      int32 pk_value_type = 2;
      uint64 like_type = 3;
      uint64 gift_value_type = 4;
      uint64 gift_uv_type = 5;
      uint64 ticket_type = 6;
      uint64 set_uid = 7;
      uint64 subscribe_type = 8;
      string set_open_id = 5000;
    }

    message BattleConfigSetting {
      int32 mod_type = 1;
      BattleSelfData self_data = 2;
      VoteSetting vote_data = 3;
      BattleSelfSettingRate self_setting_rate = 4;
      uint64 flex_activity_id = 5;
      BattleShellConfig shell_config = 6;
      BreakthroughConfig breakthrough_config = 7;
      SpecifyGiftConfig specify_gift_config = 8;
      int32 play_mode = 9;
      int32 team_mode = 10;
      int32 activity_mode = 11;
      SurvivalConfig survival_config = 12;
      SeasonConfig season_config = 13;
      CustomConfig custom_config = 14;
      uint64 from_anchor_id = 15;
      string activity_id = 16;
      string from_anchor_open_id = 5000;
    }

    message SeasonConfig {
      bool season_point_show_switch = 1;
      bool user_grade_show_switch = 2;
    }

    message SpecifyGiftConfig {
      repeated uint64 gift_ids = 1;
      map<int64, GiftDetail> gift_map = 2;
      uint64 set_uid = 3;
      string des = 4;
      string set_open_uid = 5000;
    }

    message CustomConfig {
      ScoreElement score_elements = 1;
      string name = 2;
      uint64 duration = 3;

      message ScoreElement {
        uint64 value_kind = 1;
        string value_name = 4;
      }
    }

    message BattleSelfSettingRate {
      uint64 pk_value_type = 1;
      uint64 pk_2_like_rate = 2;
      uint64 gift_2_pk_rate = 3;
      uint64 gift_uv_2_pk_rate = 4;
      uint64 ticket_2_pk_rate = 5;
      uint64 set_uid = 6;
      uint64 subscribe_pk_rate = 7;
      string set_open_uid = 5000;
    }

    message GiftDetail {
      uint64 gift_id = 1;
      string gift_name = 2;
      Image image = 3;
      string gift_des = 4;
    }

    message VoteSetting {
      uint64 vote_type = 1;
      string vote_des = 2;
      uint64 duration_time = 3;
    }

    message PanelTitle {
      string title = 1;
      string desc = 2;
      Image icon_bg_image = 3;
      string desc_tag_text = 4;
      Image icon = 5;
      string icon_schema_url = 6;
    }

    message BattleStarActivityGrade {
      string grade = 1;
      uint64 level = 2;
      uint64 star_count = 3;
      uint64 target_star_count = 4;
      BattleStarActivityGradeMedal star_activity_grade_medal = 5;
      int32 grade_enum = 6;
    }

    message BattleStarActivityGradeMedal {
      Image grade_medal = 1;
      Image level_image = 2;
      Image badge_image = 3;
    }

    message BattleBuffCardMeta {
      int32 battle_buff_card_type = 1;
      string effect_json = 2;
      uint64 effect_start_time_ms = 3;
      uint64 effect_duration_ms = 4;
      uint64 create_time_ms = 5;
      string card_extra_info = 6;
    }

    message BattleBuffCardInfo {
      int32 battle_buff_card_type = 1;
      repeated BattleBuffCardMeta effective_buff_cards = 2;
      uint64 waiting_buff_cards_count = 3;
      uint64 bonus_score = 4;
    }

    message BattleStarActivityGradeChange {
      uint64 star = 1;
      uint64 score = 2;
      string before_grade = 3;
      uint64 before_level = 4;
      string current_grade = 5;
      uint64 current_level = 6;
    }

    message LinkerBaseInfo {
      int32 scene = 1;
      repeated uint64 play_modes = 2;
      int32 ui_layout = 3;
      uint64 MaxMemberCount = 4;
      uint64 anchor_manual_open_ui_layout = 5;
      uint64 cross_link_timer_start = 6;
      string function_type = 7;
      uint64 before_scene_start = 8;
      bool is_multi_avatar_mode = 9;
    }

    message ListUser {
      User user = 1;
      uint64 linkmic_id = 2;
      string linkmic_id_str = 3;
      int32 link_status = 4;
      int32 link_type = 5;
      int32 user_position = 6;
      int32 silence_status = 7;
      uint64 modify_time = 8;
      uint64 linker_id = 9;
      int32 role_type = 10;
      Content content = 11;
      uint64 mc_status = 12;
      uint64 is_background = 13;
      HostInfo host = 14;
      MicPosTagInfo mic_pos_tag_info = 15;
      bool pk_available = 16;
      string linkmic_unique_id = 17;
      uint64 k_song_uid = 18;
      string extra = 200;

      message Content {
        ListUserPKContent pk_content = 1;
        ListUserLinkmicContent linkmic_content = 2;
        ListUserLinkmicAudienceContent linkmic_audience_content = 3;
      }
    }

    message BanUser {
      uint64 user_id = 1;
      string reason = 2;
      string url = 3;
      string anchor_explain = 4;
      string audience_explain = 5;
      string schema_url = 6;
      string open_id = 5000;
    }

    message ListUserPKContent {

    }

    message ListUserLinkmicContent {
      uint64 resource_id = 1;
      bool show_identity = 2;
      int32 pk_user_role = 3;
      string game_name = 4;
      string fan_ticket = 5;
      uint64 join_channel_time = 6;
      AnchorLinkmicIDInfo anchor_linkmic_id_info = 7;
      int32 anchor_auth_role = 8;
    }

    message AnchorLinkmicIDInfo {
      string main_linkmic_id_str = 1;
      string backup_linkmic_id_str = 2;
      bool use_backup_stream = 3;
    }

    message ListUserLinkmicAudienceContent {
      uint64 fan_ticket = 1;
      bool host_permission = 2;
      uint64 app_id = 3;
      uint64 client_version = 4;
      string device_platform = 5;
      uint64 join_channel_time = 6;
      uint64 expected_leave_time = 7;
      bool in_waiting_list = 8;
      string extra = 9;
      uint64 current_time = 10;
      string fan_ticket_fuzzy_str = 11;
      int32 list_user_role = 12;
      string fan_ticket_real_str = 13;
      repeated uint64 rank_contributor_ids = 14;
      MicDress mic_dress = 15;
      uint64 paid_count = 16;
      bool is_enlarged = 17;
      uint64 self_discipline_duration = 18;
      bool is_anonymous = 19;
      int32 apply_type = 20;
      uint64 self_discipline_start_time_ms = 21;
      uint64 self_discipline_start_time = 22;
      uint64 self_discripline_target_duration = 23;
      string device_id_str = 24;
      int32 themed_competition_role = 25;
      Linkmic2DAvatar linkmic_2d_avatar = 26;
      uint64 chorus_guest_status = 27;
      repeated string rank_contributor_open_ids = 5000;
    }

    message AudienceActionSource {
      int32 invite_source = 1;
      int32 permit_source = 2;
    }

    message AnchorLayoutInfo {
      int32 ui_layout = 1;
      int32 range = 2;
      uint64 big_anchor_id = 3;
      string big_anchor_id_str = 4;
      map<string, AnchorLayoutDetail> layout_details = 5;
      bool big_anchor_is_orientation = 6;
      string big_anchor_open_id = 5000;
      string big_anchor_open_id_str = 5001;
    }

    message SwitchSceneData {
      string rtc_ext_info = 1;
      string live_core_ext_info = 2;
      repeated ListUser linked_users = 3;
      int32 scene = 4;
      repeated int32 play_modes = 5;
      int32 ui_layout = 6;
      MultiRtcInfo multi_rtc_info = 7;
      MultiLiveCoreInfo multi_live_core_info = 8;
      MultiChannelInfo multi_channel_info = 9;
      uint64 to_linker_id = 10;
      MultiAnchorExtra multi_anchor_extra = 11;
      int32 anchor_ui_layout = 12;
      int32 inviter_from_scene = 13;
      AnchorLayoutInfo layout_info = 14;
      uint64 version = 15;
      PreRTCInfo pre_rtc_info = 16;
      string battle_attached_info = 17;
    }

    message MultiAnchorExtra {
      int32 invite_role = 1;
      uint64 match_type = 2;
      map<int64, string> role_linkmic_map = 3;
    }

    message MultiLiveCoreInfo {
      int32 scene = 1;
      VideoEqualRoomLiveCoreInfo video_equal_room_live_core_info = 2;
      KTVLiveCoreInfo ktv_live_core_info = 3;
      MultiAnchorLinkmicLiveCoreInfo multi_anchor_linkmic_live_core_info = 4;
      SingingChallengeLiveCoreInfo singing_challenge_live_core_info = 5;
      VideoDUOBattleLiveCoreInfo video_duo_battle_live_core_info = 6;
      VideoPositionLiveCoreInfo video_position_live_core_info = 7;
    }

    message VideoPositionLiveCoreInfo {
      map<int64, string> live_core_info_map = 1;
    }

    message VideoEqualRoomLiveCoreInfo {
      map<int64, string> live_core_info_map = 1;
    }

    message MultiAnchorLinkmicLiveCoreInfo {
      map<int64, string> live_core_info_map = 1;
      map<int64, string> push_stream_mode_live_core_map = 2;
    }

    message KTVLiveCoreInfo {
      map<int64, string> live_core_info_map = 1;
    }

    message SingingChallengeLiveCoreInfo {
      map<int64, string> live_core_info_map = 1;
    }

    message VideoDUOBattleLiveCoreInfo {
      map<int64, string> live_core_info_map = 1;
    }

    message MultiRtcInfo {
      int32 scene = 1;
      VideoEqualRoomRtcInfo video_equal_room_rtc_info = 2;
      MultiAnchorLinkmicRtcInfo multi_anchor_linkmic_rtc_info = 3;
      SingingChallengeRtcInfo singing_challenge_rtc_info = 4;
      CrossRoomLinkmicRtcInfo cross_room_linkmic_rtc_info = 5;
      VideoDUOBattleRtcInfo video_duo_battle_rtc_info = 6;
      VideoPositionRtcInfo video_position_rtc_info = 7;
      GameBarrageRtcInfo game_barrage_rtc_info = 8;
    }

    message VideoPositionRtcInfo {
      map<int64, string> rtc_info_map = 1;
    }

    message VideoEqualRoomRtcInfo {
      map<int64, string> rtc_info_map = 1;
    }

    message MultiAnchorLinkmicRtcInfo {
      map<int64, string> rtc_info_map = 1;
      map<int64, string> push_stream_mode_rtc_map = 2;
    }

    message SingingChallengeRtcInfo {
      map<int64, string> rtc_info_map = 1;
    }

    message CrossRoomLinkmicRtcInfo {
      map<int64, string> rtc_info_map = 1;
    }

    message VideoDUOBattleRtcInfo {
      map<int64, string> rtc_info_map = 1;
    }

    message ChangePlayModeData {
      repeated ListUser linked_users = 1;
      string rtc_ext_info = 2;
      string live_core_ext_info = 3;
      MultiRtcInfo multi_rtc_info = 4;
      MultiLiveCoreInfo multi_live_core_info = 5;
      int32 play_modes = 6;
      uint64 version = 7;
      map<int64, RoomLinkerContent> linker_content_map = 8;
    }

    message RoomLinkerContent {
      repeated ListUser linked_users = 1;
      int32 room_link_silence_status = 2;
      uint64 anchor_id = 3;
      uint64 is_anchor_background = 4;
      uint64 version = 5;
    }

    message HostInfo {
      uint64 is_host = 1;
      string host_position_name = 2;
    }

    message MicPosTagInfo {
      int32 tag_type = 1;
      string tag_name = 2;
      string text_color_value = 3;
      string bg_color_value = 4;
      uint64 tag_type_id = 5;
      Image bg_color_img = 6;
      bool open_tag_desc_page = 7;
      string schema = 8;
    }

    message ChannelListUser {
      User user = 1;
      int32 link_status = 2;
      int32 link_type = 3;
      int32 silence_status = 4;
      uint64 modify_time = 5;
      uint64 linker_id = 6;
      int32 role_type = 7;
      int32 apply_type = 8;
      int32 invite_type = 9;
      uint64 linker_reportor = 10;
      string rtc_user_id = 11;
      string extra = 200;
    }

    message AnchorLinkmicChannelInfo {
      string linkmic_id_str = 1;
      string rtc_ext_info = 2;
      MultiChannelInfo multi_channel_info = 3;
    }

    message KTVComponentMediaInfo {
      string ktv_live_core_ext_info = 1;
    }

    message PersonalKaraokeMediaInfo {
      string personal_karaoke_live_core_ext_info = 1;
    }

    message LinkmicStreamInfo {
      string live_core_ext_info = 1;
      string rtc_ext_info = 2;
    }

    message LinkmicMediaInfo {
      string rtc_ext_info = 1;
      string linkmic_id_str = 2;
      string live_core_ext_info = 3;
      MultiRtcInfo multi_rtc_info = 4;
      MultiLiveCoreInfo multi_live_core_info = 5;
    }

    message UpdateMediaInfoNotify {
      bool need_update = 1;
      uint64 position = 2;
    }

    message LinkmicMediaParam {
      int32 linkmic_media_type = 1;
      LinkmicMediaInfo linkmic_media_info = 2;
      KTVComponentMediaInfo ktv_component_media_info = 3;
      UpdateMediaInfoNotify update_media_info_notify = 4;
      PersonalKaraokeMediaInfo personal_karaoke_info = 5;
      LinkmicStreamInfo linkmic_stream_info = 6;
      LinkmicMediaInfoForEnterRoom media_info_for_enter_room = 7;
    }

    message MCUContent {
      string current_stream_id = 1;
      string rivals_stream_id = 2;
    }

    message PreRTCInfo {
      map<int64, PreRTCLinkUserInfo> pre_rtc_user_info = 1;
      uint64 version = 3;
      bool rtc_join_channel = 4;
      string version_str = 5;
    }

    message UserVersionInfo {
      uint64 client_version = 1;
      uint64 webcast_version = 2;
      uint64 app_id = 3;
      string device_platform = 4;
      string resolution_width = 5;
      string resolution_height = 6;
    }

    message PreRTCLinkUserInfo {
      bool rtc_push_stream = 1;
      string linkmic_id_str = 2;
      int32 link_status = 3;
      uint64 anchor_id = 4;
      string anchor_open_id = 5000;
    }

    message ClientUIInfo {
      UITranslation ui_translation = 1;
      AudioChatCycleUIInfo audio_chat_cycle = 10;
      RealTimeChorusUIInfo real_time_chorus = 11;
      VideoChatDynamic1V7Info video_chat_dynamic_1v7 = 12;
    }

    message AudioChatCycleUIInfo {
      map<int64, Info> ui_info = 3;
      string up_time_ms = 4;

      message Info {
        uint64 track = 1;
        float header_ratio = 2;
      }
    }

    message MicDress {
      VoiceWave voice_dress = 1;
      VoiceWave voice_wave = 2;
      LinkmicBadge badge = 3;
      LinkmicCustomizedRandomEmoji customized_random_emoji = 4;
    }

    message VoiceWave {
      string dress_id = 1;
      Image low_img = 2;
      Image medium_img = 3;
      Image high_img = 4;
    }

    message LinkmicBadge {
      string dress_id = 1;
      int32 show_type = 2;
    }

    message LinkmicCustomizedRandomEmoji {
      int32 status = 1;
      uint64 refresh_timestamp = 2;
      Image emoji_status_image = 3;
      Image emoji_displayd_dynamic_image = 4;
      uint64 random_num = 5;
      uint64 type = 6;
      string trigger_reason = 7;
    }

    message EmojiPermission {
      bool has_permission = 1;
      string toast_without_permission = 2;
      string bottom_text = 3;
      string schema = 4;
    }

    message SendInteractEmojiConfig {
      Image interact_emoji = 1;
      uint64 duration_ms = 2;
      uint64 start = 3;
      Image own_emoji = 4;
      uint64 own_emoji_duration_ms = 5;
      uint64 offset = 6;
      uint64 scale_up = 7;
      bool reshape = 8;
      string sound_url = 9;
      uint64 reshape_start = 10;
    }

    message EmojiInteractResource {
      SendInteractEmojiConfig from_image = 1;
      SendInteractEmojiConfig pass_image = 2;
      SendInteractEmojiConfig to_image = 3;
    }

    message EmojiAvatarResource {
      uint64 action_id = 1;
    }

    message EmojiCustomizedRandomResource {
      int32 type = 1;
      uint64 random_num = 2;
      int32 status = 3;
    }

    message EmojiTag {
      string content = 1;
    }

    message LinkmicAudienceEmoji {
      uint64 emoji_id = 1;
      bool is_random = 2;
      Image emoji_image = 3;
      Image emoji_dynamic_image = 4;
      string emoji_name = 5;
      uint64 animation_duration_ms = 6;
      uint64 emoji_result_duration_ms = 7;
      int32 type = 8;
      EmojiPermission permission = 9;
      string emoji_sound = 10;
      EmojiInteractResource interact_resource = 11;
      int32 category_type = 12;
      EmojiAvatarResource avatar_resource = 13;
      bool need_reverse = 14;
      EmojiTag emoji_tag = 15;
      int32 emoji_status = 16;
      string emoji_id_str = 17;
      string emoji_label = 18;
      bool disable = 19;
      EmojiCustomizedRandomResource customized_random_resource = 20;
    }

    message AnchorLinkmicInfo {
      string rtc_ext_info = 1;
      string linkmic_id_str = 2;
      bool use_backup_stream = 3;
    }

    message LinkmicPositionItem {
      uint64 position = 1;
      int32 status = 2;
      string active_name = 3;
      int32 verify_status = 4;
      int32 position_type = 5;
      uint64 client_ui_position = 6;
    }

    message LinkmicQuickInteract {
      User send_gift_user = 1;
      uint64 thanks_carousel_duration = 2;
      string thanks_content = 3;
      uint64 receive_gift_user_id = 4;
      int32 interact_type = 5;
      Text text = 6;
      string schema = 7;
      string receive_gift_user_open_id = 5000;
    }

    message InviteRoomInfo {
      uint64 inviter_room_id = 1;
      uint64 live_room_mode = 2;
      uint64 user_count = 3;
      uint64 score = 4;
      string user_count_fuzzy = 5;
      string score_fuzzy = 6;
      string room_desc = 7;
      string inviter_room_id_str = 8;
      repeated Text tags = 9;
    }

    message CrossRoomLinkReplyGuestInfo {
      uint64 user_id = 1;
      bool is_low_client_version = 2;
      bool is_selected = 3;
      bool is_not_support_app = 4;
      string user_id_str = 5;
      string open_id = 5000;
      string open_id_str = 5001;
    }

    message EnlargeGuestInfo {
      int32 guest_type = 1;
      repeated uint64 enlarged_user_ids = 2;
      uint64 source_ui_layout_max_members = 3;
      uint64 max_members_except_enlarge = 4;
      string enlarged_open_ids = 5000;
    }

    message UserHighScoreSongTag {
      string high_score_song_count = 1;
      string icon = 2;
      repeated string bg_color = 3;
    }

    message KtvSongStruct {
      uint64 id = 1;
      string title = 2;
      string author = 3;
      uint64 lyric_type = 4;
      string song_url = 5;
      repeated string lyric_url_list = 6;
      uint64 duration = 7;
      string cover_url = 8;
      uint64 song_pattern = 9;
      double preview_start_time = 10;
      AudioInfo full_track = 11;
      AudioInfo accompaniment_track = 12;
      string new_cover_url = 13;
      string midi_url = 14;
      bool is_favorite = 15;
      OrderInfo order_info = 16;
      repeated string tags = 17;
      map<string, string> ext = 18;
      repeated MusicInterval music_climax = 19;
      repeated MusicInterval preludes = 20;
      repeated MusicInterval interludes = 21;
      repeated MusicInterval segments = 22;
      string pattern_file_url = 23;
      repeated MusicInterval bridge_segments = 24;
      repeated MusicInterval main_segments = 25;
      repeated MusicInterval finale_segments = 26;
      ChorusVideoInfo chorus_info = 27;
      int32 song_type = 28;
      string add_song_source = 29;
      uint64 total_order_with_cur_anchor = 30;
      uint64 global_total_order = 31;
      repeated uint64 artist_ids = 32;
      string id_str = 33;
      repeated int32 song_copyright = 34;
      bool is_prior_song = 35;
      bool is_fragment_song = 36;
      string fragment_lyric = 37;
      PersonalSongInfo personal_song_info = 38;
      string lyric_hash = 39;
      string midi_hash = 40;
      WantListenInfo want_listen_info = 41;
      ChallengeInfo challenge_info = 42;
      RealTimeChorusInfo real_time_chorus_info = 43;
      string extra_json = 44;
      repeated RecommendRealTimeChorusInfo recommend_real_time_chorus_infos = 45;
      repeated uint64 karaoke_copyrighted_app_ids = 46;

      message RecommendRealTimeChorusInfo {
        uint64 room_id = 1;
        uint64 anchor_id = 2;
        RecommendRealTimeChorusShowUser show_users = 3;
        string desc = 4;
        string anchor_open_id = 5000;
      }

      message RealTimeChorusInfo {
        uint64 chorus_id = 1;
      }

      message AudioInfo {
        string url = 1;
        uint64 song_patten = 2;
        uint64 audio_id = 3;
        double volume_lufs = 4;
        double volume_peak = 5;
        double bpm = 6;
        string beats_point_url = 7;
        uint64 create_time = 8;
        string file_hash = 9;
      }

      message UserInfo {
        uint64 id = 1;
        string nickname = 2;
        Image avatar = 3;
        string id_str = 4;
        string high_score_song_count = 5;
        string ktv_stage_mic_pos_tag_text = 6;
        int32 ktv_lyric_text = 7;
        string ktv_component_lyric_text_first_line = 8;
        int32 ktv_component_lyric_text_second_line = 9;
        UserHighScoreSongTag high_score_song_tag = 10;
        uint64 hit_midi_record_ab = 11;
        double user_midi_score = 12;
        bool is_high_score_song = 13;
        uint64 k_song_uid = 14;
        string open_id = 5000;
      }

      message OrderInfo {
        UserInfo top_user = 1;
        uint64 score = 2;
        uint64 order_count = 3;
        bool has_added = 4;
      }

      message PersonalSongInfo {
        double user_midi_score = 1;
        bool is_high_score_song = 2;
      }

      message WantListenInfo {
        uint64 want_listen_count = 1;
      }

      message ChallengeInfo {
        int32 ktv_challenge_type = 1;
        bool is_success = 2;
        double score = 3;
      }
    }

    message MusicInterval {
      uint64 StartTimeMillisecond = 1;
      uint64 DurationMillisecond = 2;
    }

    message ChorusVideoInfo {
      uint64 item_id = 1;
      string item_description = 2;
      string item_url = 3;
      uint64 author_id = 4;
      string author_name = 5;
      uint64 use_times = 6;
      Image image = 7;
      string author_open_id = 5000;
    }

    message KtvAtmosphereVideoFrameColorData {
      Color main = 1;
      Color secondary = 2;

      message Color {
        int32 red = 1;
        int32 green = 2;
        int32 blue = 3;
      }
    }

    message KtvAtmosphereVideoInfo {
      string vid = 1;
      string play_auth_token = 2;
      int32 video_type = 3;
      repeated KtvAtmosphereVideoFrameColorData frame_color_data = 4;
      repeated string video_url = 5;
    }

    message MVUrlStruct {
      string uri = 1;
      repeated string url_list = 2;
      uint64 width = 3;
      uint64 height = 4;
      string url_key = 5;
    }

    message MVBaseInfo {
      string vid = 1;
      string cover_url = 2;
      string title = 3;
      int32 duration = 4;
      MVUrlStruct download_addr = 5;
    }

    message KTVMVInfo {
      MVBaseInfo mv_base_info = 1;
      uint64 count = 2;
      uint64 create_time = 3;
      int32 ktv_mv_type = 4;
    }

    message LinkmicTeamfightContributors {
      repeated uint64 user_ids = 1;
      repeated string open_ids = 5000;

    }

    message LinkmicTeamfightPlayer {
      uint64 user_id = 1;
      uint64 score = 2;
      string score_str = 3;
      string score_fuzzy = 4;
      LinkmicTeamfightContributors contributors = 5;
      int32 role = 6;
      User title_sponsor = 7;
      bool hit_toast = 8;
    }

    message LinkmicTeamfightBonusInfo {
      uint64 start_time = 1;
      uint64 duration = 2;
      double coefficient = 3;
    }

    message TeamContributorTopList {
      repeated User user_list = 1;
    }

    message LinkmicTeamfightTeamInfo {
      uint64 team_id = 1;
      uint64 score = 2;
      string score_str = 3;
      string score_fuzzy = 4;
      LinkmicTeamfightContributors contributors = 5;
      repeated LinkmicTeamfightPlayer players = 6;
      bool is_score_fuzzy = 7;
      uint64 owner_id = 8;
      string team_id_str = 9;
      LinkmicTeamfightBonusInfo bonus_info = 10;
      string bonus_score = 11;
      TeamContributorTopList team_contributor_top_list = 12;
      repeated uint64 position_list = 13;
      uint64 max_member = 14;
      string owner_open_id = 5000;
    }

    message LinkmicTeamfightInfo {
      uint64 teamfight_id = 1;
      string teamfight_id_str = 2;
      int32 type = 3;
      int32 status = 4;
      uint64 start_time = 5;
      uint64 duration = 6;
      uint64 punish_start_time = 7;
      uint64 punish_duration = 8;
      repeated LinkmicTeamfightTeamInfo team_infos = 9;
      uint64 win_team_id = 10;
      uint64 current_time_ms = 11;
      int32 pk_bar_style = 12;
      uint64 show_start_time = 13;
      uint64 initiator_user_id = 14;
      int32 score_type = 15;
      uint64 show_duration = 16;
      uint64 initiator_anchor_id = 17;
      string win_team_id_str = 18;
      string dress_id = 19;
      int32 TeamBattleTeamType = 20;
      TeamfightRoomBattleContent room_battle_content = 100;
      string initiator_user_open_id = 5000;
      string initiator_anchor_open_id = 5001;
    }

    message JoinTeamfightInfo {
      uint64 team_id = 1;
      string team_id_str = 2;
    }

    message RoomBattleProcessInfo {
      int32 status = 1;
      RoomBattleProcessSelectGuestsContent select_guests_content = 2;
      RoomBattleProcessWaitingBattleContent waiting_battle_content = 3;
    }

    message RoomBattleProcessSelectGuestsContent {
      repeated CrossRoomLinkReplyGuestInfo guest_infos = 1;
    }

    message RoomBattleProcessWaitingBattleContent {
      string toast = 1;
      uint64 select_guests_waiting_sec = 2;
    }

    message RoomBattleRoomInfo {
      uint64 id = 1;
      int32 join_status = 2;
      uint64 start_operator_user_id = 3;
      string start_operator_open_id = 5000;
    }

    message TeamfightRoomBattleContent {
      map<int64, RoomBattleRoomInfo> room_info_map = 1;
      int32 invite_source = 2;
      string extra = 3;
      RoomBattleMode room_battle_mode = 4;
      string if_theme_default = 5;
      uint64 theme_chooser_room_id = 6;
      uint64 if_peak_hour = 7;
      string anchor_relation_type = 8;
      string begin_type = 9;
    }

    message RoomBattleThemeParam {
      uint64 theme_id = 1;
      int32 theme_type = 2;
      string theme_title = 3;
      string theme_description = 4;
    }

    message RoomBattleMode {
      int32 room_battle_mode_type = 1;
      RoomBattleThemeParam room_battle_theme_param = 100;
    }

    message GiftPreviewInfo {
      uint64 lock_status = 1;
      bool client_block_use_scheme_url = 2;
      string block_scheme_url = 3;
      bool client_check_left_diamond = 4;
      string block_toast = 5;
    }

    message BuffLockInfo {
      bool locked = 1;
      string toast = 2;
      string schema = 3;
      string cell_text = 4;
    }

    message GiftBuffInfo {
      string text = 1;
      string text_color = 2;
      Image bg_img = 3;
      Image sweep_light_img = 4;
      Image buff_gift_describe_img = 5;
      uint64 buff_gift_id = 6;
      int32 buff_level = 7;
      bool buff_can_send = 8;
      uint64 buff_diamond_count = 9;
      string lock_toast = 10;
      uint64 default_chose_action = 11;
      uint64 start_time = 12;
      BuffLockInfo buff_lock_info = 13;
      Image bg_img_v2 = 14;
      map<int32, int64> tab_chose_action = 15;
    }

    message GiftTip {
      Text display_text = 1;
      string background_color = 2;
      Image prefix_image = 3;
      uint64 remaining_duration = 4;
      Text remaining_duration_suffix_text = 5;
      uint64 countdown_deadline_time = 6;
    }

    message GiftStruct {
      Image image = 1;
      string describe = 2;
      bool notify = 3;
      uint64 duration = 4;
      uint64 id = 5;
      GiftStructFansClubInfo fansclub_info = 6;
      bool for_linkmic = 7;
      bool doodle = 8;
      bool for_fansclub = 9;
      bool combo = 10;
      int32 type = 11;
      int32 diamond_count = 12;
      bool is_displayed_on_panel = 13;
      uint64 primary_effect_id = 14;
      Image gift_label_icon = 15;
      string name = 16;
      string region = 17;
      string manual = 18;
      bool for_custom = 19;
      map<string, int64> special_effects = 20;
      Image icon = 21;
      int32 action_type = 22;
      int32 watermelon_seeds = 23;
      string gold_effect = 24;
      repeated LuckyMoneyGiftMeta subs = 25;
      uint64 golden_beans = 26;
      uint64 honor_level = 27;
      int32 item_type = 28;
      string scheme_url = 29;
      GiftPanelOperation gift_operation = 30;
      string event_name = 31;
      uint64 noble_level = 32;
      string guide_url = 33;
      bool punish_medicine = 34;
      bool for_portal = 35;
      string business_text = 36;
      bool cny_gift = 37;
      uint64 app_id = 38;
      uint64 vip_level = 39;
      bool is_gray = 40;
      string gray_scheme_url = 41;
      uint64 gift_scene = 42;
      GiftBanner gift_banner = 43;
      repeated string trigger_words = 44;
      repeated GiftBuffInfo gift_buff_infos = 45;
      bool for_first_recharge = 46;
      Image dynamic_img_for_selected = 47;
      int32 after_send_action = 48;
      uint64 gift_offline_time = 49;
      string top_bar_text = 50;
      Image top_right_avatar = 51;
      string banner_scheme_url = 52;
      bool is_locked = 53;
      uint64 req_extra_type = 54;
      repeated uint64 asset_ids = 55;
      GiftPreviewInfo gift_preview_info = 56;
      GiftTip gift_tip = 57;
      int32 need_sweep_light_count = 58;
      repeated GiftGroupInfo group_info = 59;
      Text bottom_text = 60;
      int32 mystery_shop_status = 61;
      repeated uint64 optional_asset_ids = 62;
      bool disable_wish_list = 63;
      GiftMsgBoard gift_msg_board = 64;
      EmojiInteractResource emoji_interact_resource = 65;
      bool tray_dynamic_img_flippable = 66;
      uint64 pico_show_action = 67;
      uint64 selected_dynamic_effect = 68;
      GiftTouchLabel gift_touch_label = 69;
      GiftUnselectedBottomInfo unselected_bottom_info = 70;
      GiftConfirmInfo gift_confirm_info = 71;
      int32 biz_type = 72;
      GoodsBizItem biz_item = 73;
      Image webp_image = 74;
      int32 gift_source = 75;
      repeated uint64 required_assets = 76;
      Image selected_label = 77;
      uint64 sort_score = 78;
      uint64 topic_id = 79;
      string sort_extra = 80;

      message GiftStructFansClubInfo {
        int32 min_level = 1;
        int32 insert_pos = 2;
      }

      message GiftMsgBoard {
        bool for_msg_board = 1;
        string prompt_text = 2;
      }
    }

    message GoodsBizItem {
      BizGoods goods = 1;
      BizEntrance entrance = 2;
    }

    message BizGoods {
      GoodsStruct goods = 1;
      string extra = 2;
      uint64 consume_scene = 3;
    }

    message BizEntrance {
      string scheme_url = 1;
    }

    message GiftConfirmInfo {
      string title = 1;
      string text = 2;
      string cancel_button_text = 3;
      string confirm_button_text = 4;
      int32 confirm_type = 5;
    }

    message GiftUnselectedBottomInfo {
      string text = 1;
    }

    message GiftTouchLabel {
      Image icon = 1;
      string unique_key = 2;
    }

    message GiftGroupInfo {
      int32 group_count = 1;
      string group_text = 2;
    }

    message GiftPanelOperation {
      Image left_image = 1;
      Image right_image = 2;
      string title = 3;
      string title_color = 4;
      uint64 title_size = 5;
      string scheme_url = 6;
      string event_name = 7;
    }

    message FreeGift {
      uint64 id = 1;
      uint64 count = 2;
      string content = 3;
      uint64 group_id = 4;
      uint64 repeat_count = 5;
      uint64 fan_tickets = 6;
      uint64 waterwmlon = 7;
    }

    message LuckyMoneyGiftMeta {
      Image image = 1;
      string describe = 2;
      uint64 id = 3;
      int32 diamond_count = 4;
      Image icon = 5;
    }

    message AnchorGiftData {
      Image anchor_diy_origin_img = 1;
    }

    message GiftBanner {
      Text display_text = 1;
      string display_text_bg_color = 2;
      Image box_img = 3;
      Image bg_img = 4;
      string scheme_url = 5;
      bool animate = 6;
      uint64 box_id = 7;
      uint64 available_box_count = 8;
    }

    message EffectMixImageInfo {
      string image_key = 1;
      Image mix_image = 2;
    }

    message AssetEffectMixInfo {
      repeated EffectMixImageInfo effect_mix_image_infos = 1;
      repeated EffectMixTextInfo effect_mix_text_infos = 2;
    }

    message GiftTrayInfo {
      Text tray_display_text = 1;
      Image tray_base_img = 2;
      Image tray_head_img = 3;
      Image tray_right_img = 4;
      uint64 tray_level = 5;
      Image tray_dynamic_img = 6;
      string tray_schema_url = 7;
      int32 tray_type = 8;
      Image tray_base_img_v2 = 9;
      Image tray_right_img_v2 = 10;
      bool use_high_layer = 11;
      uint64 duration = 12;
      string toast = 13;
      int32 tray_slide_rate = 14;
      TrayPreEffect tray_pre_effect = 15;
      TrayPostEffect tray_post_effect = 16;
      uint64 origin_gift_id = 17;
      uint64 buff_level = 18;
      string toolbar_card_name = 19;
      Image tray_base_webp_img = 20;
      int32 tray_group_mode = 21;
    }

    message TrayPreEffect {
      Image pre_effect_img = 1;
      uint64 tray_start_time = 2;
      Image tray_ripple = 3;
      string pre_schema = 4;
      uint64 pre_duration = 5;
      int32 pre_effect_source = 6;
      string extra = 7;
    }

    message TrayPostEffect {
      Image post_effect_img = 1;
      string post_schema = 2;
      uint64 post_duration = 3;
      int32 post_effect_source = 4;
      map<string, string> event_tracking = 10;
    }

    message SeriesPlayGift {
      GiftStruct gift_struct = 1;
      SeriesTrayInfo series_tray_info = 2;
      SendTogether send_together = 3;
      string diy_item_info = 4;
      AnchorGiftData anchor_gift = 5;
      AssetEffectMixInfo asset_effect_mix_info = 6;
    }

    message SeriesTrayInfo {
      uint64 duration = 1;
      Image static_img = 2;
      Image dynamic_img = 3;
    }

    message SendTogether {
      string id = 1;
      uint64 start_time = 2;
      uint64 end_time = 3;
    }

    message ExtraEffect {
      uint64 asset_id = 1;
      int32 display_form = 2;
    }

    message RichText {
      int32 type = 1;
      string text = 2;
      Image img = 3;
      uint64 font_size = 4;
      string font_color = 5;
      uint64 weight = 6;
    }

    message ProgressBar {
      string current_value = 1;
      string target_value = 2;
      uint64 progress_rate = 3;
      string color = 4;
      repeated RichText text = 5;
    }

    message ProgressBarStage {
      Image icon = 1;
      repeated RichText icon_text = 2;
      repeated RichText bottom_text = 3;
      int32 reward_status = 4;
      uint64 current_value = 5;
      uint64 target_value = 6;
      string jump_schema = 7;
    }

    message MultiStageProgressBar {
      string progress_color = 1;
      string progress_background_color = 2;
      ProgressBarStage stage_list = 3;
      string card_background_color = 4;
      Image card_background_icon = 5;
      uint64 completed_stage = 6;
    }

    message TouchButton {
      repeated RichText text = 1;
      Image bg_img = 2;
      string jump_url = 3;
      uint64 button_type = 4;
    }

    message GiftPanelTopDetail {
      Image icon = 1;
      repeated RichText main_text = 2;
      repeated RichText deputy_text = 3;
      ProgressBar progress_bar = 4;
      TouchButton button = 5;
      Image bg_img = 6;
      string main_text_bg_attr = 7;
    }

    message DiamondListBannerDetail {
      repeated RichText main_text = 1;
      TouchButton main_text_button = 2;
      repeated RichText deputy_text = 3;
      Image bg_img = 4;
      ProgressBar progress_bar = 5;
      repeated RichText upper_right_text = 6;
    }

    message CommonDetail {
      Image left_icon = 1;
      repeated RichText main_text = 2;
      repeated RichText deputy_text = 3;
      TouchButton right_button = 4;
      repeated RichText upper_left_text = 5;
      repeated RichText main_text_desc = 6;
      ProgressBar progress_bar = 255;
      Image bg_img = 256;
      MultiStageProgressBar multi_stage_progress_bar = 257;
    }

    message TreasureDetail {
      string key = 1;
      string content = 2;
      uint64 count_down = 3;
      int32 trigger_timing = 4;
      string count_down_key = 5;
      int32 content_type = 6;
    }

    message LightInfo {
      bool is_on = 1;
      Image image = 2;
    }

    message DynamicInfo {
      uint64 show_after_time_ms = 1;
      repeated RichText text = 2;
      uint64 duration_ms = 3;
    }

    message GiftPanelEntranceDetail {
      repeated RichText panel_detail = 1;
      string panel_url = 2;
      repeated RichText bubble_text = 3;
      Image bubble_background_img = 4;
      string bubble_url = 5;
      repeated RichText award_tips = 6;
      LightInfo light_info = 7;
      DynamicInfo dynamic_info = 8;
      map<string, string> extra = 9;
    }

    message FreqCtrlParams {
      int32 strategy = 1;
      uint64 limit = 2;
      string key = 3;
      uint64 cur = 4;
      uint64 duration = 5;
    }

    message RefreshParams {
      int32 refresh_mechanism = 1;
      uint64 polling_interval = 2;
    }

    message TouchPositionMeta {
      uint64 id = 1;
      uint64 meta_id = 2;
      int32 position = 3;
      uint64 template = 4;
      repeated FreqCtrlParams freq_ctrl_params_list = 5;
      uint64 duration = 6;
      repeated RefreshParams refresh_params_list = 7;
      uint64 priority = 8;
    }

    message TouchPositionDetail {
      GiftPanelTopDetail gift_panel_top_detail = 1;
      DiamondListBannerDetail diamond_list_banner_detail = 2;
      CommonDetail common_detail = 3;
      BannerDetail banner_detail = 4;
      GiftPanelEntranceDetail gift_panel_entrance_detail = 5;
    }

    message BannerDetail {
      string role = 1;
      map<string, View> role2views = 2;
      repeated Time2Picture time2picture = 3;
    }

    message Time2Picture {
      uint64 start_time = 1;
      uint64 end_time = 2;
      string picture_url = 3;
    }

    message View {
      repeated BannerView banners = 1;
      repeated BannerFeedbackView feedbacks = 2;
      uint64 expire_time = 3;
    }

    message BannerFeedbackView {
      string component = 1;
      string schema_url = 2;
      bool is_keep_last = 3;
      string unique_id = 4;
      FeedbackProps feedback_props = 100;
      BannerFeedbackViewCustomProps custom_props = 101;
      BasicProps basic_props = 102;
    }

    message FeedbackProps {
      string feedback_image = 1;
      uint64 height = 2;
      string title = 3;
      string sub_title = 4;
    }

    message BannerView {
      string component = 1;
      string schema_url = 2;
      bool is_keep_last = 3;
      uint64 sub_banner_id = 4;
      string ear_image = 5;
      string sub_banner_id_str = 6;
      TaskProps task_props = 100;
      ImageProps image_props = 101;
      BasicProps basic_props = 102;
      CardProps card_props = 103;
      PublicProps public_props = 104;
      BannerViewCustomProps custom_props = 105;
    }

    message ImageProps {
      string src = 1;
      bool hide_ear = 2;
    }

    message BasicProps {
      repeated string title = 1;
      repeated string desc = 2;
      repeated string icon_src = 3;
      uint64 duration = 4;
      int32 icon_type = 5;
    }

    message TaskProps {
      repeated ElementListProps elementlist_props = 1;
      string class_name = 2;
      string current_bg_color = 3;
      string back_ground_color = 4;
    }

    message ElementListProps {
      repeated string condition_text = 1;
      ProConfProps pro_conf = 2;
      string level_text = 3;
      string award_icon = 4;
      int32 icon_type = 5;
    }

    message ProConfProps {
      uint64 current = 1;
      uint64 target = 2;
      string unit_text = 3;
      bool show_float = 4;
      uint64 format_fixed = 5;
    }

    message TouchPosition {
      TouchPositionMeta meta = 1;
      TouchPositionDetail detail = 2;
      map<string, string> biz_extra = 3;
    }

    message GoodsStruct {
      uint64 goods_id = 1;
      uint64 goods_type = 2;
      string name = 3;
      uint64 diamond_count = 4;
      Image icon = 5;
      string description = 6;
      uint64 offline_time = 7;
      string extra = 8;
      repeated uint64 options = 50;
    }

    message ChorusInfo {
      uint64 chorus_id = 1;
      uint64 lead_singer_id = 2;
      uint64 start_time = 3;
      uint64 finish_time = 4;
      string lead_singer_open_id = 5000;
    }

    message ChorusSongInfo {
      KtvSongStruct music = 1;
      bool is_self_seeing = 2;
    }

    message CommonCardArea {
      int32 domain = 1;
      int32 type = 2;
      uint32  priority = 3;
      int32 toolbar_type = 4;
      CombineType combine_type = 5;
      int32 mock_type = 6;
      CommonCardDisplayInfo card_display_info = 10;
      AnimConfig anim_config = 61;
      bool is_preloading = 62;
    }

    message CommonCardDisplayInfo {
      int32 card_id = 1;
      DSLDetail dsl_detail = 2;
      uint32  width = 10;
      uint32  height = 11;
      uint32  bottom = 12;
      uint32  right = 13;
      uint32  top = 14;
      uint32  left = 15;
      repeated string init_fields = 20;
      uint64 duration_ms = 21;
      CardTriggerConfig trigger_config = 30;
      repeated CardCondition condition_list = 31;
      CardPreDefeatStrategy pre_defeat_strategy = 40;
      CardShowDefeatStrategy show_defeat_strategy = 41;
      string accessible_name = 50;
      LandScapeConfig landscape_config = 60;
    }

    message BottomRightCardArea {
      int32 type = 1;
      uint32  priority = 2;
      int32 toolbar_type = 3;
      CombineType combine_type = 4;
      CardDisplayInfo card_display_info = 5;
      AnimConfig anim_config = 61;
      bool is_preloading = 62;
      int32 mock_type = 6;
    }

    message AnimConfig {
      bool is_anim_supported = 1;
      int32 enter_anim_type = 2;
      int32 exit_anim_type = 3;
    }

    message CombineType {
      int32 area_type = 1;
      int32 area_sub_type = 2;
    }

    message CardDisplayInfo {
      int32 card_id = 1;
      string url = 2;
      string fallback_url = 3;
      int32 container_type = 4;
      uint64 duration_ms = 5;
      uint32  width = 10;
      uint32  height = 11;
      uint32  bottom = 12;
      uint32  right = 13;
      string container_payload = 20;
      CardTriggerConfig trigger_config = 30;
      repeated CardCondition condition_list = 31;
      CardPreDefeatStrategy pre_defeat_strategy = 40;
      CardShowDefeatStrategy show_defeat_strategy = 41;
      LandScapeConfig landscape_config = 60;
      string accessible_name = 50;
    }

    message LandScapeConfig {
      bool is_landscape_supported = 1;
      uint32  width = 2;
      uint32  height = 3;
      uint32  bottom = 4;
      uint32  right = 5;
    }

    message CardTriggerConfig {
      uint32  strategy = 1;
      repeated CardTrigger commonTriggerList = 2;
      map<string, string> customTriggerMap = 3;
    }

    message CardTrigger {
      int32 type = 1;
      uint64 value = 2;
    }

    message CardCondition {
      int32 type = 1;
      uint64 value = 2;
    }

    message CardPreDefeatStrategy {
      int32 type = 1;
      uint64 value = 2;
      string extra = 3;
    }

    message CardShowDefeatStrategy {
      int32 type = 1;
      uint64 value = 2;
      string extra = 3;
    }

    message BizPinArea {
      int32 type = 1;
      uint32  priority = 2;
      BizPinAreaDisplayInfo biz_area_display_info = 3;
    }

    message BizPinAreaDisplayInfo {
      uint32  container_type = 1;
      string container_url = 2;
      string container_template = 3;
      string container_payload = 4;
      repeated string init_fields = 5;
      uint32  width = 10;
      uint32  height = 11;
      uint32  top = 12;
      uint32  right = 13;
      string accessible_name = 20;
    }

    message GameImage {
      repeated string url_list = 1;
      string uri = 2;
      uint64 height = 3;
      uint64 width = 4;
      uint64 rotation = 5;
      ThemeColor theme_color = 6;
    }

    message GameImageBundler {
      GameImage origin_image = 1;
      GameImage thumb_image = 2;
      GameImage thumb_heif_image = 3;
    }

    message PlayTeamMember {
      User user = 1;
      int32 status = 2;
    }

    message GiftVoteResult {
      string text = 1;
      uint64 count = 2;
      Image icon = 3;
      uint64 gift_id = 4;
      string name = 5;
      uint64 diamond_count = 6;
      uint64 gift_type = 7;
      string count_str = 8;
    }

    message GroupLiveMemberInfo {
      User user = 1;
      uint64 score = 2;
      bool show_score = 3;
      GiftPanelUserExtraInfo extra_info = 4;
    }

    message ShowStatusLabel {
      string show_status_label_text = 1;
      float show_status_label_text_transparency = 2;
      string show_status_label_bg_color = 3;
    }

    message GroupShowUserItem {
      User group_show_user = 1;
      string description = 2;
      string send_button_text = 3;
      uint64 group_show_fan_ticket_count = 4;
      uint64 group_show_cur_round_fan_ticket_count = 5;
      uint64 show_end_time = 6;
      int32 identity_label = 7;
      Image live_avatar_frame_image = 8;
      Image bg_image = 9;
      ShowStatusLabel show_status_label = 10;
      bool is_best_shower = 11;
      int32 show_status = 12;
    }

    message GroupShowInfo {
      repeated GroupShowUserItem group_show_users = 1;
      uint64 description_style = 2;
      string title = 3;
      string sub_title = 4;
      Image background_image = 5;
      uint64 group_show_scene = 6;
      bool is_live_show = 7;
      string toast_text = 8;
      bool is_group_show_anchor = 9;
    }

    message GrowthTaskCondDef {
      uint64 id = 1;
      string key = 2;
      string desc = 3;
      string operator = 4;
      string extra = 5;
    }

    message GrowthTaskCondition {
      GrowthTaskCondDef def = 1;
      string desc = 2;
      uint64 current_value = 3;
      uint64 target_value = 4;
      string display_current_value = 5;
      string display_target_value = 6;
      string display_delta = 7;
    }

    message GrowthTaskRewardDef {
      uint64 id = 1;
      int32 reward_type = 2;
      int32 settle_type = 3;
      string target = 4;
      string desc = 5;
      string operator = 6;
      string send_param_str = 7;
      string extra = 8;
      string name = 9;
    }

    message GrowthTaskReward {
      GrowthTaskRewardDef def = 1;
      int32 status = 2;
      string extra = 3;
      uint64 remaining_count = 4;
    }

    message GrowthTaskStage {
      repeated GrowthTaskCondition condition_list = 1;
      repeated GrowthTaskReward reward_list = 2;
      uint64 completed_time = 3;
    }

    message GrowthTask {
      uint64 id = 1;
      string id_str = 2;
      uint64 live_id = 3;
      uint64 app_id = 4;
      uint64 class_id = 5;
      uint64 group_id = 6;
      int32 item_type = 7;
      string item_id = 8;
      string task_name = 9;
      string task_desc = 10;
      uint64 start_time = 11;
      uint64 end_time = 12;
      uint64 display_start_time = 13;
      uint64 display_end_time = 14;
      int32 status = 15;
      uint64 completed_stage = 16;
      uint64 finish_time = 17;
      repeated GrowthTaskStage stage_list = 18;
      string extra = 19;
      string config = 20;
      uint64 create_time = 21;
      string item_open_id = 5000;
    }

    message GrowthTaskContributorRank {
      User user = 1;
      uint64 score = 2;
      uint64 rank = 3;
    }

    message GuestBattleGradeItem {
      uint64 level = 1;
      string level_str = 2;
      uint64 score = 3;
      string score_str = 4;
      bool is_full_level = 5;
    }

    message GuestBattleUserGradeInfo {
      GuestBattleGradeItem cur_grade = 1;
      GuestBattleGradeItem next_grade = 2;
      uint64 upgrade_score = 3;
      string upgrade_score_str = 4;
    }

    message GuestBattleUIInfo {
      Image open_animation = 1;
      Image score_icon = 2;
      Image hot_battle_open_animation = 3;
      Image sprint_open_animation = 4;
    }

    message GuestBattleContributors {
      repeated uint64 user_ids = 1;
      repeated string open_ids = 5000;
    }

    message BattleResult {
      uint64 guest_id = 1;
      string score = 2;
      uint64 rank = 3;
      string score_fuzzy = 4;
      GuestBattleContributors contributors = 5;
      LinkmicQuickInteract quick_interact = 6;
      GuestBattleUserGradeInfo crown_info = 7;
      string nickname = 8;
      uint64 score_num = 9;
      int32 role = 10;
      string guest_id_str = 11;
      bool force_play = 12;
      User user = 13;
      uint64 real_score = 14;
      User title_sponsor = 15;
      bool hit_toast = 16;
      string guest_open_id = 5000;
      string guest_open_id_str = 5001;
    }

    message GuestBattleInfo {
      uint64 battle_id = 1;
      uint64 battle_type = 2;
      uint64 status = 3;
      repeated BattleResult results = 4;
      uint64 current_time = 5;
      uint64 finish_time = 6;
      uint64 show_duration = 7;
      string battle_id_str = 8;
      uint64 loser_num = 9;
      string dress_id = 10;
      uint64 score_type = 11;
      GuestBattleUIInfo ui_info = 12;
      uint64 threshold = 13;
      uint64 sprint_duration = 14;
      int32 battle_stage = 15;
      uint64 ui_type = 16;
      uint64 start_operator_user_id = 17;
      string start_operator_user_open_id = 5000;
    }

    message StampInfo {
      int32 type = 1;
      string id = 2;
      string title = 3;
      string open_url = 4;
      string web_url = 5;
      Image icon = 6;
      int32 status = 7;
      string description = 8;
      Image thumbnail = 9;
      string extra = 98;
      string log_extra = 99;
    }

    message AudienceEntranceInfo {
      uint64 interact_type = 1;
      string elem_id = 2;
      uint64 start_id = 3;
      uint64 status = 4;
      string name = 5;
      Image icon = 6;
      bool check_entrance_visitable = 7;
      bool need_metrics_report = 8;
      string schema_url = 9;
      int32 source = 10;
      int32 punish_status = 11;
      bool audience_join_enable = 12;
      bool score_enable = 13;
      string im_extra = 97;
      string log_extra = 98;
      string entrance_extra = 99;
      map<string, string> start_page_query = 100;
      int32 visible_type = 101;
      string entrance_schema_url = 102;
    }

    message CustomizedCardInfo {
      int32 status = 1;
      string open_url = 2;
      uint64 duration = 3;
      int32 card_type = 4;
      string content = 5;
      uint64 source = 6;
      int32 punish_status = 7;
      map<string, string> start_page_query = 96;
      string im_extra = 97;
      string log_extra = 98;
      string cover_extra = 99;
      string app_id = 100;
      string server_timestamp = 101;
    }

    message GameCardInfo {
      int32 display_status = 1;
      uint64 status = 2;
      string open_url = 3;
      string content = 4;
      string app_id = 5;
      uint64 save_time = 6;
      uint64 duration = 7;
    }

    message ShelfCardInfo {
      uint64 card_id = 1;
      string schema = 2;
      string default_title = 3;
      string default_cover_url = 4;
      string customized_title = 5;
      string customized_cover_url = 6;
      Image image = 7;
      string source_page = 8;
      int32 review_status = 9;
      bool from_review = 10;
      bool can_modify_cover = 11;
      uint64 status = 12;
      int32 card_source = 13;
      string create_info = 14;
      string review_result_reason = 15;
      int32 review_title_status = 16;
      string reviewing_title = 17;
      string last_pass_title = 18;
      string last_pass_img = 19;
      ProductInfo product_info = 20;
      int32 priority = 21;
      int32 top_reason = 22;
      int32 show_duration = 23;
      bool is_leads_component = 24;
      bool is_play_let = 25;
      string selling_point = 26;
      string text_poster_url = 27;
      string text_poster_title = 28;
      string screen_shot_url = 29;
      string pre_set_card_url = 30;
      int32 customized_cover_type = 31;
      int32 select_cover_type = 32;
      repeated AuditInfo audit_info_list = 95;
      string log_extra = 96;
    }

    message ShelfMicroAppInfo {
      string app_id = 1;
      string name = 2;
      Image icon = 3;
      string schema = 4;
      repeated MicroAppLabel label = 5;
    }

    message MicroAppLabel {
      string name = 1;
      int32 font_size = 2;
      string font_color = 3;
      string background_begin_color = 4;
      string background_end_color = 5;
      string url = 6;
    }

    message ShelfInfo {
      ShelfMicroAppInfo app_info = 1;
      repeated ShelfCardInfo card_info_list = 2;
      uint64 start_id = 3;
      int32 source = 4;
      int32 status = 5;
      int32 punish_status = 6;
      int32 mount_type = 7;
      string client_extra = 9;
      int32 coexist_room = 10;
      int32 coexist_ka_anchor = 11;
      string coexist_log_extra = 95;
      map<string, string> start_page_query = 96;
      string im_extra = 97;
      string log_extra = 98;
      string shelf_info_token = 99;
      string schema = 100;
    }

    message ProductInfo {
      string product_id = 1;
      string title = 2;
      string img_url = 3;
      repeated ProductIntroductionInfo introduction_list = 4;
      repeated ProductLabelInfo label_list = 5;
      ProductPriceInfo price = 6;
      string action_text = 7;
      bool isShow = 8;
      JumpSetting jump_setting = 9;
    }

    message JumpSetting {
      bool is_jump_other_page = 1;
      string jump_other_appid = 2;
      string jump_other_page = 3;
      map<string, string> jump_other_query = 4;
    }

    message ProductPriceInfo {
      string original_price = 1;
      string current_price = 2;
      string current_prefix = 3;
      string current_suffix = 4;
    }

    message ProductIntroductionInfo {
      string content = 1;
      int32 font_size = 2;
      string font_color = 3;
      int32 introduction_type = 4;
    }

    message ProductLabelInfo {
      string left_text = 1;
      string right_text = 2;
      int32 font_size = 3;
      string font_color = 4;
      string border_color = 5;
      bool dividing_line = 6;
      int32 label_type = 7;
      repeated Image left_icon_list = 8;
    }

    message ShelfTradeData {
      uint64 room_id = 1;
      int32 top_data_type = 2;
      repeated ShelfTopTradeData top_data = 3;
      map<uint64, ShelfCardTradeData> card_data = 4;
    }

    message ShelfTopTradeData {
      string top_data_title = 1;
      string top_data_value = 2;
      string type = 3;
    }

    message ShelfCardTradeData {
      int32 card_type = 1;
      repeated ShelfCardTradeElement data_list = 2;
      string log_extra = 3;
    }

    message ShelfCardTradeElement {
      string card_data_title = 1;
      string card_data_value = 2;
      string type = 3;
      int32 live_card_show_index = 4;
    }

    message HighValueUserData {
      uint64 user_id = 1;
      bool is_high_value_user = 2;
      string user_open_id = 5000;
    }

    message Banner {
      uint64 id = 1;
      string title = 2;
      Image image = 3;
      uint64 height = 4;
      uint64 width = 5;
      string schema_url = 6;
      uint64 action_type = 7;
      uint64 banner_type = 8;
      uint64 priority = 9;
      string text = 10;
      uint64 frame_type = 11;
      string extra = 12;
      uint64 status = 13;
      uint64 uid = 14;
      uint64 roomid = 15;
      uint64 appointment_start_timestamp = 16;
      uint64 appointment_end_timestamp = 17;
      uint64 appointment_id = 18;
      repeated string tracking_type = 19;
      string open_id = 5000;
    }

    message BannerCollapse {
      Text collapse_title = 1;
      Image collapse_image = 2;
      bool enable = 3;
      string background_color = 4;
      uint64 collapse_height = 5;
      string vertical_line_color = 6;
    }

    message BannerContainer {
      string container_url = 1;
      repeated Banner banner_list = 2;
      Image animation_image = 3;
      BannerCollapse collapse = 4;
      uint64 container_height = 5;
      uint64 container_width = 6;
      string lynx_container_url = 7;
      uint64 container_type = 8;
      repeated string token_list = 9;
    }

    message BannerData {
      BannerContainer top_right = 1;
      BannerContainer bottom_right = 2;
      BannerContainer gift_panel = 3;
      BannerContainer middle = 4;
      BannerContainer activity_top_right = 5;
      BannerContainer top_left = 6;
      BannerContainer live_scene = 7;
      BannerContainer activity_vs_interactive = 8;
      BannerContainer activity_interactive = 9;
      BannerContainer activity_vs_bottom_right = 10;
      BannerContainer retain_consult = 11;
    }

    message LikeIconInfo {
      repeated Image icons = 1;
      map<int64, IconList> component_related_icons = 2;
      repeated EmojiMaterial emojis = 3;
      EmojiMaterial entry_emoji = 4;
      PicoVirtualLiveConfig pico_virtual_live_config = 5;

      message IconList {
        repeated Image icons = 1;
      }
    }

    message ChatEmojiGuideInfo {
      repeated EmojiGuideConf emojis = 1;

      message EmojiGuideConf {
        string emoji = 1;
        repeated string trigger_words = 2;
        uint64 begin_time = 10;
        uint64 end_time = 11;
      }
    }

    message ChatImageGuideInfo {
      repeated ImageGuideConf images = 1;

      message ImageGuideConf {
        string image_id = 1;
        Image image = 2;
        string text = 3;
        repeated string trigger_words = 4;
        uint64 begin_time = 10;
        uint64 end_time = 11;
      }
    }

    message ShareItemStyle {
      string item_type = 1;
      string item_id = 2;
      Image icon = 3;
      string name = 4;
      string name_color = 5;
      string schema = 6;
      string description = 7;
    }

    message BuoyMaterial {
      Image buoy_ball = 1;
      Image buoy_tailing = 2;
      Image univ_scatter_deco_a = 3;
      Image univ_scatter_deco_b = 4;
      Image univ_scatter_deco_c = 5;
      Image advan_scatter_deco_a = 6;
      Image advan_scatter_deco_b = 7;
    }

    message BackgroundMaterial {
      Image buoy_area_bg = 1;
      Image global_bg = 2;
      Image scoreboard_bg = 3;
      string tone_line_start = 4;
      string tone_line_end = 5;
    }

    message FeedbackMaterial {
      Image nice = 1;
      Image good = 2;
      Image perfect = 3;
      Image advan_perfect_bg = 4;
      Image advan_perfect_tx = 5;
    }

    message MidiSkinMaterial {
      BuoyMaterial buoy = 1;
      BackgroundMaterial bg = 2;
      FeedbackMaterial feedback = 3;
      string lyric_color_value = 4;
    }

    message AddDressPrompt {
      bool has_add_dress = 1;
      uint64 add_dress_version = 2;
    }

    message MidiSkinDressInfo {
      string dress_id = 1;
      MidiSkinMaterial material = 2;
    }

    message LinkPhase {
      int32 phase_id = 1;
      int32 phase_seconds_begin = 2;
      int32 phase_seconds_end = 3;
    }

    message LinkPhaseConfig {
      repeated LinkPhase phases = 1;
      int32 easter_egg_cartoon_seconds = 2;
    }

    message LinkmicSetting {
      int32 key = 1;
      int32 value = 2;
      SettingContent content = 3;
    }

    message SettingContent {
      ApplicationReasonContent application_reason_content = 1;
      BidPaidLinkmicContent bid_paid_linkmic_content = 2;
      NormalPaidLinkmicSettingContent normal_paid_linkmic_setting_content = 3;
      NormalPaidLinkmicDescContent normal_paid_linkmic_desc_content = 4;
      BidPaidLinkmicSettingContent bid_paid_linkmic_setting_content = 5;
      KTVChallengeContent ktv_challenge_content = 6;
      RoomBattleSettingContent room_battle_setting_content = 7;
      NormalPaidLinkmicAddPriceContent normal_paid_linkmic_add_price_content = 8;
      GuestBattleConfigContent guest_battle_config_content = 9;
      TeamFightConfigContent team_fight_config_content = 10;
      SelfDisciplineInfo self_discipline_info = 11;
      DuoBattleConfigContent duo_battle_config_content = 12;
      KTVComponentContent ktv_component_content = 13;
      AudioSubtitleContent audio_subtitle_content = 14;
      LinkmicInitInfoContent linkmic_init_info_content = 15;
      GuestLinkContent guest_link_content = 16;
    }

    message LinkmicInitInfoContent {
      InitInfoSetting video_chat_init_info = 1;
      InitInfoSetting audio_chat_init_info = 2;
    }

    message InitInfoSetting {
      uint64 scene = 1;
      uint64 ui_layout = 2;
      uint64 auto_open = 3;
    }

    message AudioSubtitleContent {
      uint64 audio_subtitle_value = 1;
      LinkmicSubtitleStatus linkmic_subtitle_status = 2;
    }

    message ApplicationReasonContent {
      string ApplicationReasonExample = 1;
      string DefaultApplicationReasonExample = 2;
    }

    message BidPaidLinkmicContent {
      uint64 start_price = 1;
      uint64 link_duration = 2;
      uint64 max_bid_price = 3;
      uint64 bid_duration = 4;
      repeated BidPaidLinkmicOptionalStep bid_steps = 5;
    }

    message NormalPaidLinkmicSettingContent {
      uint64 paid_count = 1;
      uint64 limited_time = 2;
    }

    message NormalPaidLinkmicDescContent {
      repeated uint64 saved_tag_ids = 1;
      repeated PaidLinkmicTag saved_tag_infos = 2;
      string saved_desc = 3;
      string reviewed_desc = 4;
    }

    message BidPaidLinkmicSettingContent {
      uint64 start_price = 1;
      uint64 link_duration = 2;
    }

    message KTVChallengeContent {
      uint64 TargetScore = 1;
      uint64 TargetDurationSecond = 2;
    }

    message RoomBattleSettingContent {
      uint64 battle_duration = 1;
      bool accept_invite = 2;
      bool only_accept_following_invite = 3;
      bool not_accept_less_than_three_linked_invite = 4;
      RoomBattleThemeParam room_battle_theme_param = 5;
      string introduction_content = 6;
    }

    message NormalPaidLinkmicAddPriceContent {
      int32 add_price_strategy = 1;
      uint64 custom_add_price_value = 2;
    }

    message GuestBattleConfigContent {
      int32 is_anchor_involved = 1;
      uint64 last_battle_duration_by_anchor = 2;
      uint64 loser_num = 3;
      uint64 score_type = 4;
      uint64 ui_type = 5;
    }

    message TeamFightConfigContent {
      uint64 last_fight_duration_by_anchor = 1;
    }

    message DuoBattleConfigContent {
      uint64 duration = 1;
      int32 score_type = 2;
    }

    message SelfDisciplineInfo {
      repeated string target_list = 1;
      string current_target = 2;
      string target_icon_uri = 3;
      string text = 4;
      uint64 punch_duration = 6;
      string room_punch_count = 7;
      uint64 version = 8;
    }

    message KTVComponentContent {
      int32 KTVComponentSwitchStatus = 1;
    }

    message BidPaidLinkmicOptionalStep {
      uint64 bid_left_closed_interval = 1;
      uint64 bid_right_closed_interval = 2;
      uint64 bid_step = 3;
    }

    message BidPaidLinkmicBidInfo {
      uint64 bid_price = 1;
      uint64 bid_users_uv = 2;
      uint64 server_left_time = 3;
      string user_name = 4;
      uint64 user_id = 5;
      Image user_avatar = 6;
      uint64 version = 7;
      string sec_user_id = 8;
    }

    message BidPaidLinkmicDealInfo {
      uint64 win_price = 1;
      string user_name = 2;
      uint64 user_id = 3;
      Image user_avatar = 4;
      string sec_user_id = 5;
    }

    message BidPaidLinkmicBidRecord {
      uint64 bid_price = 1;
      string user_name = 2;
      uint64 user_id = 3;
      Image user_avatar = 4;
      bool is_start_price = 5;
      string sec_user_id = 6;
    }

    message NormalPaidLinkmicInfo {
      uint64 paid_count = 1;
      uint64 limited_time = 2;
      int32 status = 3;
      int32 add_price_strategy = 4;
      uint64 add_price_value = 5;
      uint64 add_price_multiple = 6;
    }

    message PaidLinkmicTag {
      uint64 id = 1;
      string name = 2;
      Image pic = 3;
    }

    message PaidLinkmicExplainCardInfo {
      uint64 num_of_link = 1;
      float avg_grade = 2;
      PaidLinkmicTag tag = 3;
    }

    message LinkmicSubtitleStatus {
      int32 subtitle_style = 1;
      double x = 2;
      double y = 3;
      int32 subtitle_type = 4;
    }

    message MsgBoardItemInfo {
      uint64 id = 1;
      string id_str = 2;
      User sender = 3;
      string content = 4;
      int32 process_status = 5;
      uint64 gift_id = 6;
      uint64 msg_disappear_time = 7;
    }

    message OrderSingItemV2 {
      User order_user = 1;
      User gift_sender = 2;
      string item_id = 3;
      int32 microphone_type = 4;
      uint64 gift_id = 5;
      uint64 gift_diamond_count = 6;
      Image order_sing_gift_icon = 7;
      int32 gift_type = 8;
      bool need_hide_mv_icon = 9;
    }

    message CurrentOrderSingItemV2 {
      OrderSingItemV2  current_sing_item = 1;
      MicrophoneTaskDataV2  microphone_task_data = 2;
    }

    message MicrophoneTaskDataV2 {
      uint64 current_score = 1;
      uint64 need_score_to_next = 2;
      int32 order_sing_stage = 3;
    }

    message OrderSingMVInfo {
      MVBaseInfo mv_base_info = 1;
      uint64 user_id = 2;
      bool is_high_quality = 3;
      bool is_locked = 4;
      int32 mv_type = 5;
      int32 play_status = 6;
    }

    message AdventurFont {
      string text = 1;
      string color = 2;
    }

    message AdventureCardInfo {
      uint64 card_id = 1;
      uint64 from_stage_id = 2;
      Image background = 3;
      uint64 pair_id = 5;
      AdventurFont title = 7;
      uint64 card_unique_id = 8;
      AdventurFont timestamp = 9;
      string paired_user_nickname_color = 10;
      string card_unique_id_str = 11;
      string pair_id_str = 12;
    }

    message AdventurePairInfo {
      uint64 pair_id = 1;
      AdventureUserInfo from_user = 2;
      AdventureUserInfo to_user = 3;
      uint64 score = 4;
      uint64 next_stage_score = 5;
      uint64 stage_id = 6;
      AdventureStageInfo stage_info = 7;
      int32 pair_status = 8;
      int32 call_status = 9;
      uint64 caller_user_id = 10;
      string pair_id_str = 11;
      string caller_user_open_id = 5000;
    }

    message AdventureStageInfo {
      uint64 stage_id = 1;
      string stage_name = 2;
      Image stage_background = 3;
      uint64 stage_lower_limit_score = 5;
      repeated uint64 stage_lower_limit_score_list = 6;
      int32 button_status = 7;
      uint64 stage_call_duration = 8;
      repeated uint64 stage_call_duration_list = 9;
      int32 stage_type = 10;
      Image process_bar_track_image = 11;
      Image process_bar_image = 12;
      Image process_bar_dot_image = 13;
      Image process_bar_header_image = 14;
      Image process_bar_bubble_image = 15;
      Image process_bar_bubble_header_image = 16;
      Image paired_user_avatar_bg = 17;
      string paired_user_avatar_bg_border_color = 18;
      uint64 stage_bg_type = 19;
    }

    message AdventureUserInfo {
      uint64 user_id = 1;
      Image avatar_thumb = 2;
      string nick_name = 3;
      uint64 score = 4;
      uint64 rank = 5;
      bool is_mvp = 8;
      int32 user_status = 9;
      uint64 invited_count = 10;
      repeated uint64 invite_users = 11;
      int32 call_status = 12;
      Image new_im_icon_with_level = 13;
      int32 gender = 14;
      string open_id = 5000;
      repeated string open_invite_users = 5001;
    }

    message AdventureSettingContent {
      Image header_background = 1;
      repeated AdventureStageInfo stage_info_list = 2;
      AdventureStageInfo call_stage = 3;
    }

    message AdventurePlayModeInfo {
      repeated AdventureUserInfo linked_user_list = 5;
      int32 play_mode_status = 7;
      AdventureSettingContent setting_content = 8;
      uint64 play_id = 9;
      Image start_animation = 10;
      Image finish_animation = 11;
      string play_id_str = 12;
    }

    message ChatMatchGroupInfo {
      string group_id = 1;
      uint64 tag_id = 2;
      uint64 disband_time = 3;
      int32 status = 4;
      repeated User group_user_list = 5;
      uint64 version = 6;
    }

    message LinkmicProfitEggInfo {
      string egg_id = 1;
      int32 egg_type = 2;
      int32 status = 3;
      LinkmicProfitEggTaskInfo task_info = 4;
      LinkmicProfitEggRewardInfo reward_info = 5;
    }

    message LinkmicProfitEggTaskInfo {
      uint64 target_score = 1;
      uint64 task_duration = 2;
      uint64 task_begin_relative_battle_end_time = 3;
      uint64 current_score = 4;
      uint64 task_start_time = 5;
      int32 task_status = 6;
    }

    message LinkmicProfitEggRewardInfo {
      uint64 reward_buff_multiple = 1;
      uint64 reward_duration = 2;
      uint64 reward_begin_relative_battle_end_time = 3;
      uint64 reward_start_time = 4;
      uint64 total_reward_score = 5;
    }

    message LinkmicProfitRoomEggInfo {
      int32 play_mode = 1;
      TeamfightEggInfo teamfight_egg_info = 2;
      uint64 version = 255;
    }

    message TeamfightEggInfo {
      map<int64, LinkmicProfitEggInfo> team_egg_map = 1;
      int32 team_battle_team_type = 2;
    }

    message InteractiveScreenCastInfo {
      string item_app_id = 1;
      int32 item_type = 2;
    }

    message LinkmicGameInfo {
      uint64 play_id = 1;
      string game_id = 2;
      string game_category = 3;
      int32 running_type = 4;
      int32 public_stream_type = 5;
    }

    message LinkmicStarWishPlayerInfo {
      User user = 1;
      uint64 target_score = 2;
      uint64 cur_score = 3;
      string declaration = 4;
      string dress_id = 5;
      User title_sponsor = 6;
      bool hit_toast = 7;
      bool changed_target_score = 8;
    }

    message LinkmicStarWishInfo {
      uint64 play_id = 1;
      repeated LinkmicStarWishPlayerInfo player_info = 2;
      bool is_gift_open = 3;
      repeated StarGift star_gifts = 4;
      StarWishPerformanceInfo performance_info = 5;
    }

    message ThemedCompetitionSetting {
      string theme = 1;
      int32 theme_type = 2;
      int32 selection_type = 3;
      uint64 win_count = 4;
      repeated uint64 judges_user_id_list = 5;
      uint64 max_judges_count = 6;
      uint64 max_win_count = 7;
      repeated string server_theme_list = 8;
      string custom_theme = 9;
      uint64 max_score = 10;
      bool can_edit_score = 11;
      repeated uint64 max_score_candidates = 12;
    }

    message ThemedCompetitionInfo {
      ThemedCompetitionSetting setting = 1;
      map<int64, Score> user_id_to_score = 2;
      int32 status = 3;
      uint64 competition_id = 4;
      uint64 current_performer_user_id = 5;
      map<string, Score> user_open_id_to_score = 5000;
      string current_performer_open_id = 5001;

      message Score {
        uint64 score = 1;
        string score_fuzz = 2;
        int32 win_type = 3;
        uint64 rank = 4;
        bool show_effect = 5;
        string dress_id = 6;
      }
    }

    message LotteryExpandActivityInfo {
      uint64 biz_id = 1;
      string expand_activity_id = 2;
      string rule_text = 3;
      string tips_text = 4;
      uint64 expand_lucky_count = 5;
      uint64 expand_grant_count = 6;
      string extra_gift_bag = 10;
      uint64 bytepay_voucher_switcher = 11;
    }

    message LotteryRegularlyConfig {
      int32 times = 1;
      int32 interval = 2;
    }

    message LotteryInfo {
      uint64 lottery_id = 1;
      uint64 owner_user_id = 2;
      uint64 anchor_id = 3;
      int32 owner_type = 4;
      uint64 room_id = 5;
      int32 status = 6;
      LotteryPrize prize_info = 7;
      repeated LotteryCondition conditions = 8;
      uint64 prize_count = 9;
      uint64 lucky_count = 10;
      uint64 count_down = 11;
      uint64 start_time = 12;
      uint64 draw_time = 13;
      string extra = 14;
      uint64 real_lucky_count = 15;
      uint64 total_grant_count = 16;
      uint64 withdraw_count = 17;
      uint64 real_draw_time = 18;
      repeated LotteryLuckyUser lucky_users = 19;
      uint64 current_time = 20;
      uint64 candidate_num = 21;
      string lottery_id_str = 22;
      string room_id_str = 23;
      string sec_anchor_id = 24;
      string sec_owner_user_id = 25;
      repeated LotteryExpandActivityInfo expand_activity_info_list = 26;
      bool use_new_draw_interaction = 27;
      string launch_task_id = 30;
      int32 index = 31;
      LaunchTaskInfo launch_task_info = 32;
      string client_biz_data = 50;
      string server_biz_data = 51;
      string ui_config = 52;
      uint64 enabled_dilatation = 53;
      string dilatation_config_detail = 54;
      bool dilatation_now = 55;
      uint64 prize_count_before_dilatation = 56;
      uint64 lucky_count_before_dilatation = 57;
      map<int64, string> extra_award_server_biz_data = 58;
      map<int64, string> extra_award_ui_config = 59;
      map<int64, string> extra_award_client_biz_data = 60;
      map<int64, int64> extra_award_lucky_count = 61;
      uint64 total_lucky_record_count = 62;
      uint64 fulfillment_time_limit = 63;
      string env = 64;
      string anchor_open_id = 5000;
      string owner_user_open_id = 5001;
    }

    message LaunchTaskInfo {
      uint64 launch_task_id = 1;
      string launch_task_id_str = 2;
      uint64 launch_task_status = 3;
      uint64 had_launch_count = 5;
      uint64 last_lottery_id = 6;
      LotteryRegularlyConfig regularly_config = 4;
    }

    message LotteryPrize {
      uint64 prize_id = 1;
      int32 type = 2;
      string name = 3;
      string image = 4;
      string prize_description = 5;
    }

    message LotteryCondition {
      uint64 condition_id = 1;
      int32 type = 2;
      string content = 3;
      int32 status = 4;
      string description = 5;
      uint64 gift_id = 6;
      uint64 gift_count = 7;
      string gift_name = 8;
      uint64 need_diamond_count = 9;
      uint64 min_fans_level = 10;
      string remarks = 30;
      string biz_info = 31;
    }

    message LotteryLuckyUser {
      uint64 lucky_id = 1;
      uint64 lottery_id = 2;
      uint64 room_id = 3;
      uint64 user_id = 4;
      string user_name = 5;
      string avatar_url = 6;
      uint64 grant_count = 7;
      string user_extra_info = 8;
      string order_info = 9;
      string sec_user_id = 10;
      uint64 prize_type = 11;
      string prize_name = 12;
      string biz_payload = 17;
      uint64 expire_time = 13;
      repeated VoucherPrizeInfo voucher_prize_list = 14;
      bool use_new_award = 15;
      Award award = 16;
      string extra_award_win_page_biz_data = 18;
      string user_open_id = 5000;

      message Award {
        string summary_description = 15;
        PrizeDetail prize_details = 16;

        message PrizeDetail {
          int32 interest_show_type = 1;
          string interest_show_unit = 2;
          string interest_value = 3;
          string prize_name = 4;
          string prize_description = 5;
        }
      }
    }

    message VoucherPrizeInfo {
      string prize_amount = 1;
      string prize_batch_name = 2;
      uint64 expire_time = 3;
      string prize_unit = 4;
      string desc = 5;
    }

    message Portal {
      uint64 start_time = 1;
      uint64 enter_count = 2;
      User sugar_daddy = 3;
      uint64 room_id = 4;
      User anchor = 5;
      uint64 portal_id = 6;
      int32 user_type = 7;
      uint64 invitee_count = 8;
      int32 status = 9;
      uint64 wait_duration = 10;
      uint64 reward_duration = 11;
      uint64 total_amount = 12;
      Image cover = 13;
      uint64 room_lucky_money_amount = 14;
      repeated User audiences = 15;
      uint64 distribute_strategy = 16;
    }

    message BetOption {
      uint64 id = 1;
      string option_name = 2;
      uint64 money = 3;
      uint64 rate = 4;
      bool win = 5;
      bool can_bet = 6;
      uint64 can_bet_money = 7;
    }

    message AnchorHistoryItem {
      string quiz_id = 1;
      string quiz_title = 2;
      string options = 3;
      int32 quiz_status = 4;
      uint64 countdown_time = 5;
      uint64 win_option = 6;
      string template_id = 7;
      string fail_reason = 8;
      uint64 create_time = 9;
      uint64 settle_again = 10;
      uint64 absolute_end_time = 11;
    }

    message Quiz {
      string quiz_id = 1;
      string title = 2;
      string options = 3;
      int32 quiz_status = 4;
      uint64 countdown_time = 5;
      uint64 win_option = 6;
      uint64 bet_option = 7;
      string gain = 8;
      string template_id = 9;
      uint64 absolute_end_time = 10;
    }

    message ChatIdentity {
      int32 show_identity = 1;
      Image identity_label = 2;
    }

    message PropSummary {
      uint64 primary_effect_id = 1;
      uint64 next_expire = 2;
      string description = 3;
      uint64 prop_def_id = 4;
      string manual = 5;
      uint64 diamond = 6;
      bool reddot_tip = 7;
      Image icon = 8;
      int32 count = 9;
      string name = 10;
      GiftStruct gift = 11;
      Image label_icon = 12;
      bool is_fragment = 13;
      uint64 fragments_compound_count = 14;
      uint64 is_aweme_free_gift = 15;
      Image diamond_icon = 16;
      Banner banner = 17;
      uint64 prop_def_type = 18;
      repeated HotfixGiftDataForProp gifts = 19;
      string scheme_url = 20;
      bool is_displayed_on_panel = 21;
      uint64 prop_def_sub_type = 22;
      bool set_gray = 23;
      string prop_description = 24;
      string expire_description = 25;
      string ref_id = 26;
    }

    message HotfixGiftDataForProp {
      Text display_text = 1;
      string describe = 2;
      uint64 gift_id = 3;
      uint64 group_count = 4;
      uint64 repeat_count = 5;
      uint64 combo_count = 6;
      uint64 msg_id = 7;
    }

    message EpisodeHighLight {
      uint64 location = 1;
      string description = 2;
      Image image = 3;
      Image small_image = 4;
      uint64 location_end = 5;
      bool hot = 6;
      uint64 collection_id = 7;
      string pid = 8;
      string location_str = 9;
    }

    message MysteryRankUserItem {
      MysteryUserInfo User = 1;
      uint64 Score = 2;
      uint64 Rank = 3;
    }

    message MysteryUserImage {
      repeated string url_list = 1;
      uint64 height = 2;
      uint64 width = 3;
    }

    message MysteryUserInfo {
      uint64 user_id = 1;
      string id_str = 2;
      string live_room_id_str = 3;
      string nick_name = 4;
      MysteryUserImage avatar_thumb = 5;
      bool mystery = 6;
      string user_openid = 5000;
    }

    message ProfitInteractionSetting {
      bool show_interaction_score_close = 1;
    }

    message ProfitCheckConfig {
      bool need_report = 1;
      repeated ProfitReportConfig configs = 2;

      message ProfitReportConfig {
        uint64 profit_type = 1;
        uint64 duration = 2;
        uint64 report_type = 3;
      }
    }

    message RankEnterInfo {
      repeated RankInfo rank_infos = 1;
      bool hidden_enter = 2;
      Image icon = 3;
      repeated Page default_page = 4;
      uint64 period_remaining_second = 5;
      repeated RankInfo rank_infos_without_shop = 6;
      bool display_ktv_rank = 7;
      repeated RankInfo default_rank_infos = 8;
      repeated RankInfo customized_default_rank_infos = 9;

      message Page {
        int32 jump_rank_type = 1;
        string content = 2;
        int32 content_type = 3;
        string background_color = 4;
      }

      message RankInfo {
        repeated Page pages = 1;
        Image icon = 2;
        int32 position = 3;
        int32 rank_type = 4;
        string title = 5;
        string rank_extra = 6;
        string entrance_extra = 7;
      }
    }

    message RanklistHourEntrance {
      repeated Info global_infos = 1;
      repeated Info default_global_infos = 2;
      repeated Info vertical_infos = 3;
      repeated Info default_vertical_infos = 4;

      message Page {
        string content = 1;
        string background_color = 2;
        uint64 show_times = 3;
        int32 content_type = 4;
      }

      message Detail {
        repeated Page pages = 1;
        int32 ranklist_type = 2;
        string title = 3;
        string ranklist_extra = 4;
        string entrance_extra = 5;
        string schema = 6;
      }

      message Info {
        repeated Detail details = 1;
      }
    }

    message RewardItem {
      int32 type = 1;
      uint64 amount = 2;
      string desc = 3;
    }

    message LoadingAnimation {
      int32 animation_type = 1;
      string animation_url = 2;
    }

    message Button {
      string text = 1;
      string bg_img_url = 2;
      string jump_url = 3;
      Image bg_img = 4;
      int32 button_type = 5;
      ButtonGiftData gift_data = 6;
    }

    message NormalRewardPopup {
      int32 top_icon = 1;
      string main_title = 2;
      string main_text = 3;
      string deputy_text = 4;
      Button button = 5;
      LoadingAnimation loading_animation = 6;
      repeated RewardItem reward_items = 7;
      string log_data = 8;
      Image bg_img = 9;
    }

    message UpgradeRewardPopup {
      int32 top_icon = 1;
      string main_title = 2;
      repeated RewardItem reward_items = 3;
      Image link_image = 4;
      Button button = 5;
      LoadingAnimation loading_animation = 6;
      string log_data = 7;
      Image bg_img = 8;
    }

    message ParallelRewardPopup {
      int32 top_icon = 1;
      string main_title = 2;
      repeated RewardItem reward_items = 3;
      Button button = 4;
      LoadingAnimation loading_animation = 5;
      PairAction pair_action = 6;
      string log_data = 7;
      Image bg_img = 8;
    }

    message PairAction {
      int32 type = 1;
      string url = 2;
    }

    message Popup {
      int32 type = 1;
      ParallelRewardPopup parallel = 2;
      UpgradeRewardPopup upgrade = 3;
      NormalRewardPopup normal = 4;
      CustomizedRewardPopup custom = 5;
    }

    message BottomPanelData {
      TouchPosition touch_position = 1;
      TreasureCompeteData treasure_compete_data = 2;
    }

    message BottomPanel {
      BottomPanelData data = 1;
      uint64 ab_result = 2;
    }

    message LevelDetail {
      uint64 level = 1;
      string lucky_anchor_avatar_url = 2;
      string lucky_user_avatar_url = 3;
      string reward_desc = 4;
      string grade_url = 5;
      string room_id = 6;
      uint64 box_type = 7;
      uint64 user_id = 8;
      bool is_limited_time = 9;
      uint64 count_down = 10;
      bool completed = 11;
      string user_open_id = 5000;
    }

    message TreasureCompeteData {
      uint64 gift_id = 1;
      string gift_url = 2;
      string gift_name = 3;
      int32 gift_type = 4;
      LevelDetail current_level = 5;
      repeated string avatars = 6;
      uint64 lucky_num = 7;
      repeated LevelDetail levels = 8;
      repeated string broadcast_text = 9;
      uint64 day = 10;
      uint64 current_time = 11;
      uint64 end_time = 12;
      string title = 13;
      string sub_title = 14;
      uint64 gift_diamond_count = 15;
      uint64 gift_value_display_ab = 16;
      uint64 skin_switch = 17;
      uint64 msg_biz_type = 18;
      uint64 max_level = 19;
      bool freq_limit = 20;
    }

    message TaskCurrentInfo {
      uint64 pk_win_count = 1;
      uint64 room_like_count = 2;
      map<int64, int64> customized_gift_count = 3;
      uint64 subscribe_count = 4;
    }

    message TaskConditionExtra {
      uint64 customized_gift_id = 1;
      Image gift_icon = 2;
    }

    message TaskCondition {
      string key = 1;
      uint64 value = 2;
      string operator = 3;
      TaskConditionExtra extra = 4;
    }

    message TaskTodoStep {
      repeated TaskCondition conditions = 1;
    }

    message TaskTodo {
      repeated TaskTodoStep steps = 1;
    }

    message TaskRecord {
      int32 task_status = 1;
      uint64 task_class_id = 2;
      repeated TaskTodo todos = 3;
      TaskCurrentInfo current_info = 4;
      int32 wish_type = 5;
      WishContributor wish_contributor = 6;
    }

    message WishContributor {
      repeated Contributor contributors = 1;
      uint64 total_count = 2;
      bool show_score = 3;

      message Contributor {
        uint64 user_id = 1;
        string sec_user_id = 2;
        Image avatar = 3;
        string nick_name = 4;
        string score_desc = 5;
      }
    }

    message AppUserInfo {
      string app_id = 1;
      uint64 game_id = 2;
      string open_uid = 3;
    }

    message GiftAudienceReceiverItem {
      User user = 1;
      uint64 score = 2;
      bool gift_auth = 3;
      string off_reason_toast = 4;
    }

    message StickerInfo {
      uint64 effect_id = 1;
      bool use = 2;
      bool is_rendering = 3;
      string extra = 4;
    }

    message Stickers {
      repeated StickerInfo stickers = 1;
    }

    message StartSingMultiChorusContent {
      MultiChorusCommonContent common = 1;
    }

    message JoinMultiChorusContent {
      MultiChorusCommonContent common = 1;
    }

    message LeaveMultiChorusContent {
      MultiChorusCommonContent common = 1;
    }

    message FinishMultiChorusContent {
      MultiChorusCommonContent common = 1;
      int32 finish_reason = 2;
      string toast = 3;
    }

    message MultiChorusCommonContent {
      uint64 user_id = 1;
      MultiChorusInfo multi_chorus_info = 2;
      string user_open_id = 5000;
    }

    message MultiChorusUpdateMessage {
      int32 msg_type = 1;
      StartSingMultiChorusContent start_sing_multi_chorus_content = 2;
      JoinMultiChorusContent join_multi_chorus_content = 3;
      LeaveMultiChorusContent leave_multi_chorus_content = 4;
      FinishMultiChorusContent finish_multi_chorus_content = 5;
    }

    message MultiChorusInfo {
      uint64 user_ids = 1;
      uint64 leader_user_id = 2;
      uint64 song_id = 3;
      int32 song_type = 4;
      map<int64, MultiChorusUserBase> user_base_map = 5;
      string chorus_id = 6;
      repeated string user_open_ids = 5000;
      string leader_user_open_id = 5001;
      map<string, MultiChorusUserBase> open_user_base_map = 5002;
    }

    message MultiChorusUserBase {
      uint64 id = 1;
      Image avatar_thumb = 2;
      int32 secret = 3;
      string sec_uid = 4;
      int32 mystery_man = 5;
    }

    message MoreLiveEntrance {
      string name = 1;
      uint64 tab_type = 2;
      uint64 valid_time = 3;
      uint64 priority = 4;
      string extra = 5;
      string event_extra = 6;
      uint64 tab_item_id = 7;
      string tab_item_name = 8;
      string tab_item_event = 9;
      string guide_type = 10;
    }

    message OpenHostInfo {
      string nickname = 1;
      int32 gender = 2;
      string signature = 3;
      Image avatar_thumb = 4;
      Image avatar_medium = 5;
      Image avatar_large = 6;
      User.FollowInfo follow_info = 7;
      map<string, string> schemas = 8;
      map<string, string> extra = 100;
    }

    message LinkMicBizExtra {
      OpenGameConfig open_game_config = 1;
    }

    message OpenGameConfig {
      string app_id = 1;
      string app_extra = 2;
      Image icon_image = 3;
      string game_title = 4;
    }

    message ContainerLayout {
      int32 width = 1;
      int32 height = 2;
      int32 marginLeft = 3;
      int32 marginTop = 4;
      int32 marginBottom = 5;
      int32 marginRight = 6;
      int32 paddingLeft = 7;
      int32 paddingRight = 8;
      int32 paddingBottom = 9;
      int32 paddingTop = 10;
    }

    message OpenGame {
      string stream_id = 1;
      string app_id = 2;
      uint64 anchor_type = 3;
      uint64 interact_type = 4;
    }

    message AnchorBottomToolBar {
      AnchorLinkmicEntranceInfo anchor_linkmic_entrance = 1;
      AudienceLinkmicEntranceInfo audience_linkmic_entrance = 2;
    }

    message AnchorLinkmicEntranceInfo {
      int32 panel_type = 1;
      Image icon = 2;
      string text = 3;
      Image pk_to_linkmic_image = 4;
      Image linkmic_to_pk_image = 5;
      Image lead_pk_image = 6;
      string lead_pk_freq_key = 7;
      Image pk_icon = 8;
      Image anchor_icon = 9;
      string word_type = 10;
      map<int64, LeadInfo> button_lead = 11;

      message LeadInfo {
        Data.Image lead_image = 1;
        string bubble_text = 2;
        int32 bubble_panel = 3;
      }
    }

    message AudienceLinkmicEntranceInfo {
      Image icon = 1;
      string text = 2;
    }

    message AnchorLinkmic {
      uint64 channel_id = 1;
    }

    message StreamRecognitionCandidate {
      int32 scene_enum = 1;
      int32 priority = 2;
    }

    message StreamRecognitionContainers {
      StreamRecognitionCandidate recognition_candidates = 1;
    }

    message GameRoomSticker {
      uint64 need_render_sticker_type = 1;
      repeated uint64 need_render_sticker_list = 2;
    }

    message SandwichBorderInfo {
      double top = 1;
      double bottom = 2;
      double left = 3;
      double right = 4;
    }

    message WebEnterBenefitPointData {
      bool has_ongoing_lottery = 1;
      bool has_ongoing_lucky_money = 2;
    }

    message AddressInfo {
      uint64 country_geo_name_id = 1;
      uint64 province_code = 2;
      uint64 city_code = 3;
      string country = 4;
      string province = 5;
      string city = 6;
    }

    message LocationInfo {
      AddressInfo gps_info = 1;
      AddressInfo ip_info = 2;
      bool enable_permission = 3;
      bool enable_location_mode = 4;
    }

    message OpenStreamUrlEncrypt {
      string rtmp_pull_url = 1;
      string hls_pull_url = 2;
      map<string, string> flv_pull_url = 3;
      string stream_data = 4;
      repeated StreamUrl.LiveCoreSDKData.PullData.PlayInfo Hls = 5;
      repeated StreamUrl.LiveCoreSDKData.PullData.PlayInfo Flv = 6;
      map<string, string> hls_pull_url_map = 7;
      map<string, StreamUrl.LiveCoreSDKData.PullData> pull_datas = 8;
    }

    message SubscribeMemberMark {
      bool subscribe_member_watch_free = 1;
    }

    message ToolbarExtraInfo {
      uint64 game_promotion_coexist = 1;
    }

    message AnchorTogetherLive {
      uint64 is_together_live = 1;
      repeated User user_list = 2;
      string title = 3;
      string schema_url = 4;
      uint64 scene = 5;
      bool is_show = 6;
    }

    message WebData {
      StreamUrl additional_stream_url = 1;
    }

    message MetricTrackerData {
      string event_name = 1;
      bool is_common_metric = 2;
      map<string, string> current_room_tracker = 3;
      map<string, string> use_once_tracker = 4;
      map<string, string> all_room_tracker = 5;
    }

    message SubscribeMember {
      string pay_schema = 1;
      string title = 2;
      string sub_title = 3;
      ProductPriceStruct price_info = 4;
      int32 subscribe_status = 5;
      uint64 valid_start_time = 6;
      uint64 valid_end_time = 7;
    }

    message ProductBanner {
      Image cover = 1;
      string schema = 2;
    }

    message ProductSaleInfo {
      uint64 sale_cnt = 1;
      uint64 helping_sale_cnt = 2;
      string written_off_amount = 3;
    }

    message ContentTip {
      string title = 1;
      string context = 2;
      string click_title = 3;
      string click_context = 4;
    }

    message ProductSellingPoint {
      int32 type = 1;
      string content = 2;
      uint64 originalValue = 3;
    }

    message RecentPurchasedUser {
      string uid = 1;
      string avatar_uri = 2;
      Image avatar = 3;
      uint64 episodes = 4;
      string open_id = 5000;
    }

    message ProductComments {
      string Title = 1;
      string TotalCount = 2;
      string JumpTitle = 3;
      string JumpSchema = 4;
      repeated ProductComment Comments = 5;
    }

    message ProductCommentUser {
      string UID = 1;
      string NickName = 2;
      Image Avatar = 3;
      string open_id = 5000;
    }

    message ProductComment {
      string CommentID = 1;
      string Text = 2;
      string Rate = 3;
      string CreateTime = 4;
      string DiggCount = 5;
      int32 UserDigged = 6;
      string Status = 7;
      int32 Anonymous = 8;
      ProductCommentUser User = 9;
      int32 IsAuthorDigged = 10;
      string Location = 11;
    }

    message RoomIntroAppointmentInfo {
      bool enabled = 1;
      string appointment_id = 2;
      string scheduled_time_text = 3;
      int32 scheduled_time = 4;
      int32 scheduled_date = 5;
      uint64 next_live_start_time = 6;
      repeated int32 scheduled_weekdays = 7;
      string content = 8;
    }

    message AnchorLocationPoiInfo {
      bool enabled = 1;
      uint64 poi_id = 2;
      string poi_id_str = 3;
      string text = 4;
    }

    message EmojiMaterial {
      string emoji = 1;
      Image icon = 2;
      string text = 3;
      uint64 emoji_id = 4;
      Image effect_icon = 5;
    }

    message ButtonImage {
      Image static_image = 1;
      Image hover_image = 2;
      Image checked_image = 3;
    }

    message PanelConfig {
      Image background_image = 1;
      ButtonImage close_button = 2;
    }

    message EmojiTab {
      uint64 tab_id = 1;
      string tab_text = 2;
      ButtonImage tab_button = 3;
      uint64 emoji_type = 4;
      repeated EmojiMaterial emojis = 5;
    }

    message PicoVirtualLiveConfig {
      PanelConfig panel_config = 1;
      repeated EmojiTab emoji_tab = 2;
    }

    message InputDefaultConfig {
      string FirstLevelText = 1;
      string SecondLevelText = 2;
    }

    message ChatMentionInfo {
      repeated string mention_user_ids = 1;
      repeated string mention_webcast_user_ids = 2;
      uint64 show_time = 3;
    }

    message AnchorLinkmicAudioPunishInfo {
      string schema_url = 1;
      string content = 2;
      uint64 remain_seconds = 3;
      uint64 user_id = 5;
      repeated string punished_linkmic_id_str_list = 6;
      string user_open_id = 5000;
    }

    message BattleLinkerInviteMessageExtra {
      uint64 match_type = 1;
      string tips = 2;
      uint64 invite_type = 3;
      uint64 sub_type = 4;
      uint64 scene = 5;
      string theme = 6;
      uint64 duration = 7;
      InviterRivalExtra extra = 8;
      BattleRivalTag tags = 9;
      Room invite_room = 10;
      bool preview_live_stream = 11;
      BattleRivalTag room_tags = 12;
      BattleRivalTag user_tags = 13;
      string recommend_reason = 14;
      string activity_name = 15;
      ActivityUser activity_user = 16;
      GameInfo game_info = 17;
      int32 anchor_pk_check = 18;
      uint64 can_not_pass_anchor_ids = 19;
      int32 switch_play_mode = 20;
      VoteSetting vote_setting = 21;
      BattleConfigSetting battle_config_setting = 22;
      int32 invite_status = 23;
      uint64 inviter_followed_ids = 24;
      BattleRivalTag match_tags = 25;
      LinkMicBizExtra link_mic_biz_extra = 26;
      BattleRivalTag half_friend_tags = 27;
      uint64 battle_invite_panel_opt = 28;
      string can_not_pass_anchor_open_ids = 5000;
      string inviter_followed_open_ids = 5001;

      message InviterRivalExtra {
        uint64 TextType = 1;
        string Text = 2;
        string Label = 3;
      }

      message GameInfo {
        string game_text = 1;
      }
    }

    message BizOpenGameInfo {
      Data.Image icon_image = 1;
      string game_title = 2;
      string invite_title = 3;
    }

    message AuxiliaryScoreInfo {
      string anchor_score = 1;
      Image auxiliary_img = 2;
      uint64 index = 3;
      uint64 gift_id = 4;
      uint64 auxiliary_type = 5;
      uint64 anchor_score_int = 6;
      bool no_need_update_score = 7;
      string title = 8;
      int32 suffix_number_mode = 9;
      uint64 fixed_number = 10;
    }

    message BattleAuxiliaryData {
      BattleTitleConfig title_config = 1;
      string rule_content = 2;
    }

    message BattleReserveOption {
      uint64 reserve_option_id = 1;
      string text = 2;
    }

    message AuxiliaryEffectInfo {
      uint64 effect_type = 1;
      string resource_id = 2;
      uint64 render_mode = 3;
      string tool_type = 4;
      string pk_bar_resource_id = 5;
      string title = 6;
    }

    message AnchorLayoutDetail {
      uint64 position = 1;
    }

    message GameBarrageRtcInfo {
      uint64 linker_id = 1;
      string rtc_info = 2;
    }

    message LinkHostInfo {
      uint64 is_host = 1;
      string host_position_name = 2;
    }

    message LinkmicMediaInfoForEnterRoom {
      string linkmic_id_str = 1;
      string rtc_ext_info = 2;
      string live_core_ext_info = 3;
    }

    message UITranslation {
      uint64 vertical = 1;
    }

    message VideoChatDynamic1V7Info {
      uint64 Status = 1;
    }

    message RealTimeChorusUIInfo {
      uint64 chorus_id = 1;
      uint64 segment = 2;
      map<int64, UserChorusInfo> user_infos = 3;
      bool is_anchor_joined_chorus = 4;
      uint64 chorus_mode = 5;
      repeated uint64 chorus_leader = 6;
      string prompt = 7;
      map<string, UserChorusInfo> open_user_infos = 5000;
      repeated string chorus_leader_open_id = 5001;
    }

    message LinkGameInfo {
      string game_app_id = 1;
      string game_extra = 2;
      string open_id = 3;
      string init_param = 4;
      string link_extra = 5;
      LinkMicBizExtra link_biz_extra = 6;
    }

    message LinkmicJoinChannelData {
      string prompt = 1;
      DelegateSetting delegate_setting = 2;
      string token = 3;
      string live_core_settings = 4;
      uint64 pay_count = 5;
      repeated ListUser linked_users = 6;
      uint64 version = 7;
      int32 apply_type = 8;
      MatchEffect match_effect = 9;
      CityEffect city_effect = 10;
      MsgBoardItemInfo msg_board_item = 11;
      bool is_paid_linkmic = 12;
      string prompt_with_earphone = 13;
      LinkGameInfo link_game_info = 15;

      message DelegateSetting {
        bool show_panel = 1;
        bool enable_delegate = 2;
        Image tag_image_url = 3;
        string prompt = 4;
        int32 status = 5;
      }
    }

    message ChorusCDNInfo {
      string stream = 1;
      PlayInfo play_info = 2;
      PushInfo push_info = 3;

      message PlayInfo {
        string stream_data = 1;
      }

      message PushInfo {
        repeated string main_urls = 1;
        string push_url = 2;
      }
    }

    message Linkmic2DAvatar {
      Data.Image image = 1;
      bool enable_avatar = 2;
    }

    message RecommendRealTimeChorusShowUser {
      uint64 id = 1;
      Image avatar_thumb = 2;
      string open_id = 5000;
    }

    message ChorusRankUser {
      uint64 id = 1;
      string nickname = 2;
      Image avatar_thumb = 3;
      FollowInfo follow_info = 4;
      OwnRoom own_room = 5;
      int32 secret = 6;
      string sec_uid = 7;
      string id_str = 8;
      int32 silence_status = 9;
      int32 authorization_info = 10;
      bool anonymous = 11;
      bool mystery_man = 12;
      string open_id = 5000;

      message FollowInfo {
        uint64 follow_status = 1;
        string remark_name = 2;
      }

      message OwnRoom {
        uint64 room_ids = 1;
        string room_ids_str = 2;
      }
    }

    message ChorusMidiRank {
      ChorusRankUser user = 1;
      uint64 rank = 2;
      string cur_midi_score = 3;
    }

    message UserChorusInfo {
      uint64 user_id = 1;
      uint64 order = 2;
      bool need_push_rtc = 3;
      bool need_approach = 4;
      double single_segment_midi_score = 5;
      double average_midi_score = 6;
      bool is_lead = 7;
      string open_id = 5000;
    }

    message RealTimeChorusInfo {
      uint64 chorus_id = 1;
      uint64 dress_id = 2;
      int32 stage = 3;
    }

    message RealTimeChorusGiftDetail {
      uint64 gift_id = 1;
      uint64 gift_type = 2;
      string gift_name = 3;
      uint64 gift_diamond_count = 4;
      string icon = 5;
    }

    message ContentOpenTreasureTouchItem {
      ContentOpenTreasureDetail detail = 1;
      ContentOpenFreqCtrlParams freqCtr = 2;
      int32 priority = 3;
      map<string, string> biz_extra = 4;
    }

    message ContentOpenTreasureDetail {
      int32 coin_task_type = 1;
      string content_new = 2;
      string content_receive = 3;
      string count_down_key = 4;
      uint64 count_down = 5;
      int32 content_new_seconds = 6;
      repeated string content_receive_roll = 7;
      bool show_new_first = 8;
      bool show_count_down = 9;
      bool auto_receive = 10;
      bool reset_count_down = 11;
      bool show_by_status = 12;
    }

    message ContentOpenFreqCtrlParams {
      uint64 day_limit = 1;
      uint64 life_limit = 2;
      string limit_key = 3;
    }

    message EffectMixTextInfo {
      string text_key = 1;
      string content = 2;
      uint64 font_size = 3;
      string font_color = 4;
    }

    message GiftPanelUserExtraInfo {
      string label = 1;
      Image icon = 2;
    }

    message BannerFeedbackViewCustomProps {
      string biz_data = 1;
    }

    message BannerViewCustomProps {
      string biz_data = 1;
    }

    message CardProps {
      double ratio = 1;
      uint64 countdown_endtime = 2;
      string enhancer_text = 3;
      uint64 count = 4;
      string icon = 5;
      string count_bg_color = 6;
    }

    message AvatarProps {
      string src = 1;
      string border_color = 2;
      bool with_crown = 3;
      string size = 4;
    }

    message PublicProps {
      repeated AvatarProps avatars = 1;
      repeated string desc = 2;
      bool with_crown = 3;
    }

    message ThemeColor {
      string color = 1;
      string name = 2;
    }

    message GiftSortStrategy {
      string scene = 1;
      repeated uint64 gift_ids = 2;
      repeated uint64 tag_ids = 3;
      uint64 start_time = 4;
      uint64 end_time = 5;
      string extra = 6;
      int32 strategy_type = 7;
      int32 update_type = 8;
      repeated uint64 effected_gift_ids = 9;
      map<string, string> event_track = 10;
    }

    message GroupLiveActivityRewardData {
      int32 reward_type = 1;
      string reward_id = 2;
      string reward_info = 3;
      int32 status = 4;
    }

    message GroupLiveIncomeInfo {
      User user = 1;
      uint64 income = 2;
      uint64 other_income = 3;
      uint64 gift_income = 4;
    }

    message GroupLiveContainerData {
      int32 type = 1;
      uint64 priority = 2;
      string container_payload = 3;
      string position = 4;
      string url = 5;
      string fold_url = 6;
      string horizontal_url = 7;
      bool is_flow_mode = 8;
      bool can_adjust_position = 9;
      bool is_lite_mode = 10;
      bool is_horizontal = 11;
      string url_web = 12;
      string horizontal_url_web = 13;
    }

    message GroupLiveContainerFlowData {
      bool flow_is_open = 1;
      int32 type = 2;
      string container_payload = 3;
      uint64 calculate_time = 4;
    }

    message AuditInfo {
      int32 audit_type = 1;
      int32 audit_status = 2;
      string reject_reason = 3;
    }

    message LiveMountMicroAppLimitData {
      bool next_mount_limit = 1;
      uint64 next_mount_time = 2;
      string toast = 3;
    }

    message InteractionGameContainerFlowData {
      bool flow_is_open = 1;
      int32 type = 2;
      string container_payload = 3;
    }

    message InteractionPluginGamePlusContainerData {
      string mini_app_id = 1;
      string task_data = 2;
    }

    message GuestLinkContent {
      uint64 link_threshold = 1;
      uint64 call_duration = 2;
      bool auto_open = 3;
      bool is_open = 4;
      bool enable_setting = 5;
    }

    message AnnounceInfo {
      string title = 1;
      string content = 2;
      int32 state = 3;
      int32 show_state = 4;
      uint64 announce_id = 5;
      uint64 updated_time = 6;
      string announce_snapshot_id = 7;
    }

    message LinkmicGuestLinkUser {
      User user = 1;
      uint64 score = 2;
      int32 user_role = 3;
      int32 audience_linkmic_role = 4;
      string score_str = 5;
      int32 link_type = 7;
      string linkmic_id_str = 8;
      uint64 is_background = 9;
    }

    message GuestLinkChannelInfo {
      uint64 channel_id = 1;
      repeated LinkmicGuestLinkUser linked_users = 2;
      repeated User channel_users = 3;
      uint64 score = 4;
      uint64 call_duration = 5;
      uint64 start_time_ms = 6;
      uint64 version = 7;
      uint64 link_threshold = 8;
      uint64 channel_user_count = 9;
      string score_str = 10;
      AudioBGData channel_background = 11;
    }

    message StarWishPerformanceInfo {
      string item_id = 1;
      uint64 user_id = 2;
      int32 status = 3;
      string user_open_id = 5000;
    }

    message StarwishGiftContent {

    }

    message InteractGiftContent {
      int32 audit_status = 1;
      string reason = 2;
    }

    message StarGift {
      uint64 id = 1;
      string name = 2;
      uint64 diamond = 3;
      Image icon = 4;
      int32 gift_type = 5;
      string content = 6;
      uint64 repeat_count = 7;
      StarwishGiftContent starwish_gift_content = 100;
      InteractGiftContent interact_gift_content = 101;
    }

    message StarwishStageToast {
      User from_user = 1;
      User to_user = 2;
      int32 toast_type = 3;
      User leave_user = 4;
    }

    message AnchorOpenGameRoleInfo {
      int32 role = 1;
      string content = 2;
    }

    message CommonBubble {
      uint64 id = 1;
      uint64 priority = 2;
      string text = 3;
      string icon = 4;
      string schema = 5;
      int32 appear_mode = 6;
      int32 disappear_mode = 7;
      map<string, string> extra = 99;
    }

    message ItemBubbleInfo {
      string show_path = 1;
      string show_item_id = 2;
      repeated CommonBubble bubbles = 3;
    }

    message RoomTextBgStyle {
      uint64 align = 1;
      uint64 font_size = 2;
      string font_family = 3;
      string font_color = 4;
      uint64 scroll = 5;
      uint64 scroll_speed = 6;
    }

    message ButtonGiftData {
      uint64 gift_id = 1;
      Image gift_img = 2;
      string gift_source = 3;
      string gift_args = 4;
      string jump_schema_url = 5;
    }

    message CustomizedRewardPopup {
      string data = 1;
      string log_data = 2;
    }

    message PopularityEggPanel {
      string title = 1;
      repeated string texts = 2;
      GrowthTask task = 3;
      repeated GrowthTaskContributorRank ranks = 4;
      uint64 contributor_total_num = 5;
      uint64 audience_total_num = 6;
      int32 switch_status = 7;
      PopularityEggPlayArea play_area = 8;
      repeated PopularityEggButton buttons = 9;
      repeated PopularityEggCarousel carousels = 10;
      bool show_assets_entrance = 11;
      bool show_inspire_play = 12;
      repeated uint64 gem_divide_winners = 1000;
      repeated string gem_divide_winners_str = 1001;
    }

    message PopularityEggPlayUser {
      uint64 user_id = 1;
      string nickname = 2;
      string avatar_thumb = 3;
      bool is_mystery_man = 4;
      string user_open_id = 5000;
    }

    message PopularityEggPlayResult {
      PopularityEggPlayUser user = 1;
      int32 reward_type = 2;
      uint64 reward_amount = 3;
    }

    message PopularityEggPlayArea {
      PlayData rush_jackpot = 1;
      PlayData gem_divide = 2;
      bool one_user_take_all = 3;

      message PlayData {
        uint64 play_id = 1;
        int32 reward_type = 2;
        uint64 total_reward_amount = 3;
        uint64 candidate_count = 4;
        repeated PopularityEggPlayUser candidates = 5;
        repeated PopularityEggPlayResult play_results = 6;
      }
    }

    message PopularityEggButton {
      int32 template = 1;
      string text = 2;
      Action action = 3;
      string extra = 4;

      message Action {
        int32 action_type = 1;
        uint64 gift_id = 2;
        uint64 gift_count = 3;
        string gift_source = 4;
        string confirm_text = 5;
      }
    }

    message PopularityEggCarousel {
      int32 template = 1;
      string text = 2;
      PopularityEggButton button = 3;
      PopularityEggPlayUser from_user = 4;
    }

    message ChatLikeCount {
      uint64 count = 1;
      uint64 version = 2;
    }

    message MatchEffect {
      bool show_effect = 1;
      Image effect_resource = 2;
    }

    message CityEffect {
      Image effect_resource = 1;
      string city = 2;
      repeated uint64 show_effect_user_id_list = 3;
      repeated string show_effect_open_id_list = 5000;
    }

  }
}